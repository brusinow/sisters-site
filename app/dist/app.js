var authWait=["Auth",function(e){return e.$waitForSignIn()}],authRequire=["Auth",function(e){return e.$requireSignIn()}];angular.module("SistersApp",["SistersCtrls","SistersDirectives","ui.router","ui.bootstrap","firebase","angularMoment","ngCart","ngStorage","angularPayments","ngAnimate","picardy.fontawesome","textAngular","ui.router.metatags","ngParallax"]).run(["$rootScope","$state","$location","$window","MetaTags",function(e,t,o,a,r){e.MetaTags=r,e.$on("$stateChangeError",function(e,o,a,r,n,s){"AUTH_REQUIRED"===s&&t.go("login")}),e.$on("$stateChangeSuccess",function(e){document.body.scrollTop=document.documentElement.scrollTop=0,a.ga&&a.ga("send","pageview",{page:o.path()})})}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","UIRouterMetatagsProvider","$provide",function(e,t,o,a,r){a.setDefaultTitle("SISTERS").setDefaultDescription('Seattle duo. "Drink Champagne", the debut album, coming soon!').setStaticProperties({"og:site_name":"SISTERS"}).setOGURL(!0),t.otherwise("/"),e.state("home",{url:"/",metaTags:{title:"SISTERS",description:'Seattle duo. "Drink Champagne", the debut album, coming soon!'},templateUrl:"/views/home.html",controller:"HomeCtrl"}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"AboutCtrl"}).state("blog",{templateUrl:"/views/blog/blog.html",controller:"BlogMasterCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}]}}).state("blog-new",{url:"/blog/new",templateUrl:"/views/blog/newBlogPost.html",controller:"NewBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog-edit",{url:"/blog/edit/:slug",templateUrl:"/views/blog/editBlogPost.html",controller:"EditBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}],thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}]}}).state("blog-tags-edit",{url:"/blog/editTags/",templateUrl:"/views/blog/editTags.html",controller:"EditBlogTagsCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog.main",{url:"/blog",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.page",{url:"/blog/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.archive",{url:"/blog/archives/:year/:month",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.archivePage",{url:"/blog/archives/:year/:month/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.tags",{url:"/blog/tags/:tagName",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogTagsCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],TagsShow:["$stateParams","TagsShowService",function(e,t){return t(e.tagName).$loaded()}]}}).state("blog.show",{url:"/blog/show/:slug",templateUrl:"/views/blog/blog-content.html",controller:"BlogShowCtrl",resolve:{currentAuth:authWait,thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],Blog:["BlogPosts",function(e){return e().$loaded()}]},metaTags:{title:function(e){console.log("what is Blog? ",e);var t="SISTERS - "+e[0].postTitle;return t},description:function(e){return e[0].postBody}}}).state("shows",{url:"/shows",metaTags:{title:"SISTERS - Shows",description:"Upcoming shows for Seattle duo SISTERS."},templateUrl:"/views/shows/shows.html",controller:"ShowsCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("store",{url:"/store",metaTags:{title:"SISTERS - Store",description:"The official store for Seattle duo SISTERS."},templateUrl:"/views/store/store.html",controller:"StoreCtrl",resolve:{currentAuth:authWait,allProducts:["ProductsService",function(e){return e.allProducts()}]}}).state("storeCart",{url:"/store/cart",templateUrl:"/views/store/cart.html",controller:"StoreCartCtrl",resolve:{currentAuth:authWait}}).state("storeShow",{url:"/store/:id",templateUrl:"/views/store/storeShow.html",controller:"StoreShowCtrl",resolve:{currentAuth:authWait,oneProduct:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id)}]}}).state("checkout",{templateUrl:"/views/store/checkoutTemplate.html",controller:"CheckoutTemplateCtrl",resolve:{currentAuth:authWait}}).state("checkout.address",{url:"/store/checkout/address",templateUrl:"/views/store/checkoutAddress.html",controller:"StoreAddressCtrl",resolve:{currentAuth:authWait}}).state("checkout.payment",{url:"/store/checkout/payment",templateUrl:"/views/store/checkoutPayment.html",controller:"StorePaymentCtrl",resolve:{currentAuth:authWait,currentOrder:["CurrentOrderService",function(e){return e.get()}]}}).state("checkout.confirm",{url:"/store/checkout/confirm",templateUrl:"/views/store/checkoutConfirm.html",controller:"StoreConfirmCtrl",resolve:{currentAuth:authWait}}).state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}),o.html5Mode(!0)}]).filter("cut",function(){return function(e,t,o,a,r){if(!e)return"";if(e&&!t)return e;if(e&&t){if(a=parseInt(a,10),!a)return e;if(e.length<=a)return e;if(e=e.substr(0,a),o){var n=e.lastIndexOf(" ");n!=-1&&("."!=e.charAt(n-1)&&","!=e.charAt(n-1)||(n-=1),e=e.substr(0,n))}return e+(r||"â€¦")}}}).filter("trustAsResourceUrl",["$sce",function(e){return function(t){return e.trustAsResourceUrl("http://www.youtube.com/embed/"+t)}}]).filter("MomentFilter",["moment",function(e){return function(t){return e(t).format("MMMM Do, YYYY")}}]).filter("tooOld",function(){return function(e){var t=moment().unix(),o=[];return angular.forEach(e,function(e){var a=e.unixDate/1e3;t-a<=86400&&o.push(e)}),o}}).filter("DeliveryEstDate",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do")}}]).filter("timeAgo",["moment",function(){return function(e){return moment(e).fromNow()}}]).filter("centsToDollars",function(){return function(e){return e/100}}),angular.module("SistersCtrls").controller("LoginCtrl",["$scope","$state","Auth",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.submitted=!1,e.logged=!1,o.$onAuthStateChanged(function(o){o?(e.logged=!0,t.go("home")):console.log("Not logged in.")}),e.user={},e.login=function(){e.submitted=!0,e.firebaseUser=null,o.$signInWithEmailAndPassword(e.user.email,e.user.password).then(function(t){e.firebaseUser=t}).catch(function(e){console.error("Authentication failed:",e)})}}]),angular.module("SistersCtrls").controller("NewBlogCtrl",["$scope","$state","$http","Auth","BlogPosts","AllTags","HelperService","SubmitImage","moment",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.BlogPosts=r(),e.tags=n,e.checkedTags={},e.data={},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){console.log("submit clicked"),console.log("what is post? ",e.post),"image"===e.data.mediaSelect?l(e.post,e.BlogPosts,e.data.image,u):"youtube"===e.data.mediaSelect&&(e.data.youtube=s.parseYouTube(e.data.youtube),u(e.post,e.BlogPosts,null,e.data.youtube))},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.resizeImg=function(e){s.imgResize(e)},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})};var u=function(o,a,r,n){var l=s.slugify(o.title),c=(new Date).getTime(),u=i(c).format("YYYY"),d=i(c).format("MMMM"),g={};for(var m in e.checkedTags)g[m]=e.checkedTags[m];var h={postTitle:o.title,slug:l,postBody:o.postBody,youtube:n?n:null,img:r?r:null,tags:g,timestamp:c};console.log("thisPost: ",h),a.$add(h).then(function(e){var o=e.key,a={key:o};firebase.database().ref("archives/"+u+"/"+d+"/"+o).set(a),t.go("blog.main")})}}]).controller("EditBlogCtrl",["$scope","$state","$timeout","$stateParams","SendDataService","AllTags","thisPost","HelperService","SubmitImage","$uibModal","$log","BlogPosts",function(e,t,o,a,r,n,s,l,i,c,u,d){var g=document.getElementById("main");if(g.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.data={},e.postArray=s,e.post=s[0],e.originalTags=angular.copy(e.post.tags),e.tags=n,e.post.youtube){console.log(e.post.youtube);var m=e.post.youtube;e.data.youtube="https://www.youtube.com/watch?v="+m}e.confirmBlogDelete=function(e){var t=c.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/deleteBlogConfirmModal.html",controller:"DeleteBlogConfirmCtrl",size:"sm",resolve:{Post:e}});t.result.then(function(){console.log("submitted modal")},function(){u.info("Modal dismissed at: "+new Date)})},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){"image"===e.data.mediaSelect&&e.data.image?i(e.post,e.postArray,e.data.image,h):"image"!==e.data.mediaSelect||e.data.image?"youtube"===e.data.mediaSelect&&(e.data.youtube=l.parseYouTube(e.data.youtube),h(e.post,e.BlogPosts,null,e.data.youtube)):h(e.post,e.BlogPosts,e.post.img,null)};var h=function(a,r,n,s){var i=l.slugify(a.postTitle);console.log(i);var c=moment(a.timestamp).format("YYYY"),u=moment(a.timestamp).format("MMMM"),d={};for(var g in a.tags)d[g]=a.tags[g];a.slug=i,a.tags=d,a.youtube=s?s:null,a.img=n?n:null;var m={postTitle:a.postTitle,slug:i,postBody:a.postBody,youtube:a.youtube,img:a.img,tags:d,timestamp:a.timestamp};e.postArray.$save(a).then(function(a){var r=a.key;firebase.database().ref("archives/"+c+"/"+u+"/"+r).remove(),firebase.database().ref("archives/"+c+"/"+u+"/"+r).set(m);for(g in e.originalTags)if(e.originalTags[g]===!0){var n="tags/"+g+"/posts/"+r;firebase.database().ref(n).remove().then(function(e){}).catch(function(e){console.log("Remove failed: "+e.message)})}else console.log(g+" not a tag for old edit!");o(function(){for(g in m.tags)m.tags[g]===!0?firebase.database().ref("tags/"+g+"/posts/"+r).set(m):console.log(g+" not a tag for new edit!")},100),t.go("blog.main")})}}]).controller("EditBlogTagsCtrl",["$scope","$uibModalInstance","tag","Blog",function(e,t,o,a){e.prompted=!1,e.tag=angular.copy(o),console.log(o),e.ok=function(o){var a={name:e.tag.name};firebase.database().ref("/tags/"+e.tag.$id).update(a),t.close()},e.cancel=function(){t.dismiss("cancel")},e.deletePrompt=function(){e.prompted=!0},e.delete=function(o){if("no"===o)e.prompted=!1;else if("yes"===o){firebase.database().ref("/tags/"+e.tag.$id).remove();for(var r=0;r<a.length;r++){var n=a[r].tags;n[e.tag.$id]===!0&&(n[e.tag.$id]=null,firebase.database().ref("/blog_posts/"+a[r].$id+"/tags").update(n))}t.close()}}}]).controller("DeleteBlogConfirmCtrl",["$scope","$uibModalInstance","Post","moment","$location",function(e,t,o,a,r){console.log(o),e.yes=function(){var e=a(o.timestamp).format("YYYY"),n=a(o.timestamp).format("MMMM");console.log(n+" of "+e),firebase.database().ref("blog_posts/"+o.$id).remove(),firebase.database().ref("archives/"+e+"/"+n+"/"+o.$id).remove(),t.close(),r.url("/blog")},e.no=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("BlogMasterCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService","TwitterFactory",function(e,t,o,a,r,n,s,l,i,c,u,d){e.loadedInsta=!1,e.loadedTwitter=!1,e.$emit("loadMainContainer","loaded"),c.then(function(t){e.photos=t.data,e.loadedInsta=!0,e.loadedTwitter&&(e.loaded=!0)}),d.then(function(t){console.log(t),e.tweetDate=t.allTweetData.created_at,e.twitterUser=t.allTweetData.user.name,e.twitterHandle=t.allTweetData.user.screen_name,e.tweetId=t.allTweetData.id_str,e.tweet=t.tweetBody,e.favorites=t.favorites,e.retweets=t.retweets,e.loadedTwitter=!0,e.loadedInsta&&(e.loaded=!0)}),e.enable=!0,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("BlogCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService",function(e,t,o,a,r,n,s,l,i,c,u){var d=document.getElementById("main");d.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.allTags=u(),e.location=r.$$path,c.then(function(t){e.photos=t.data,e.loaded=!0}),e.enable=!0,e.parseTitle=i.titleToURL,e.allPosts=l,e.page=n.page||0,e.pageUp="/blog/"+(parseInt(e.page)+1),e.pageDown="/blog/"+i.pageDown(e.page),e.length=l.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=l.slice(e.first,e.last),e.editPost=function(e){r.url("/blog/edit/"+e)}}]).controller("BlogArchiveCtrl",["$scope","$state","$timeout","$stateParams","$location","Blog","Archive","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=r.$$path,e.allTags=c(),e.enable=!0,e.fullBlog=n;for(var u=[],d=0;d<s.length;d++)for(var g=s[d].$id,m=0;m<n.length;m++){var h=n[m].$id;g===h&&u.push(n[m])}e.allPosts=u,e.params=a,e.parseTitle=i.titleToURL,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=a.page||0,e.pageUp="/blog/archives/"+a.year+"/"+a.month+"/"+(parseInt(e.page)+1),e.pageDown="/blog/archives/"+a.year+"/"+a.month+"/"+i.pageDown(e.page),e.length=e.allPosts.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=e.allPosts.slice(e.first,e.last),o(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);r.url("/blog/edit/"+t)}}]).controller("BlogTagsCtrl",["$scope","$state","$stateParams","$location","$timeout","Blog","TagsShow","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=c(),e.enable=!0,e.tagName=s[0].name;for(var u=s[0].$id,d=[],g=0;g<n.length;g++){var m=n[g].tags;m[u]&&d.push(n[g])}e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=o.page||0,e.pageUp="/blog/tags/"+o.tagName+"/"+(parseInt(e.page)+1),e.pageDown="/blog/tags/"+o.tagName+"/"+i.pageDown(e.page),e.length=length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,console.log("Last: ",e.last),e.posts=d.slice(e.first,e.last),console.log(e.posts),r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);a.url("/blog/edit/"+t)}}]).controller("BlogShowCtrl",["$scope","$state","$stateParams","$location","$timeout","thisPost","Blog","AllTagsService",function(e,t,o,a,r,n,s,l){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=l(),e.enable=!1,e.recentPosts=s,console.log(e.recentPosts),e.posts=n,e.allPosts=n,r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0})}]).controller("BlogSidebarCtrl",["$scope","$state","$stateParams","$timeout","ArchiveService","AllTagsService","BlogPosts","HelperService","$uibModal","$log",function(e,t,o,a,r,n,s,l,i,c){e.recentPosts=s(),e.parseTitle=l.titleToURL,e.years=r.years(),e.years.$loaded().then(function(){}),e.allTags=n(),e.newBlogPost=function(){t.go("blog-new")},e.editTag=function(e){var t=i.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/editTagsModal.html",controller:"EditBlogTagsCtrl",size:"lg",resolve:{Blog:["BlogPosts",function(e){return e().$loaded()}],tag:e}});t.result.then(function(){console.log("submitted modal")},function(){c.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls",["SistersServices"]).controller("MainCtrl",["$scope","$state","$timeout","$http",function(e,t,o,a){e.$on("loadMainContainer",function(t,o){"loaded"===o?e.mainLoaded=!0:e.mainLoaded=!1})}]).controller("HomeCtrl",["$scope","$state","$timeout","$http","LoadedService",function(e,t,o,a,r){var n=document.getElementById("main");n.style.backgroundColor="rgba(247, 237, 245, 0)",e.loaded=r.get();var s=window.innerWidth;!e.loaded&&s>806?o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500):o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500),e.mailchimpSubmit=function(t,r,n){if(t.$valid){e.isPopup=!1;var s="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+r+"&c=JSON_CALLBACK";a.jsonp(s).then(function(t){e.user={},n&&(e.mailConfirm=!0,o(function(){e.mailConfirm=!1,console.log("mail confirm reset")},7e3))},function(e){})}}}]).controller("AboutCtrl",["$scope","$state",function(e,t){var o=document.getElementById("main");o.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.parallaxBG="img/album.jpg"}]),angular.module("SistersCtrls").controller("editModalCtrl",["$scope","$uibModalInstance","editShow","index","$firebaseArray",function(e,t,o,a,r){e.shows=o,e.show=o[a],console.log("index is ",a),e.dateObj=new Date(1e3*e.show.unix),console.log(e.dateObj),e.ok=function(){e.show.date=moment(e.dateObj).format("ddd, MMMM Do"),e.show.unix=e.dateObj.getTime()/1e3,e.shows.$save(e.show).then(function(e){console.log("success")},function(e){console.log("Error:",e)}),t.close()},e.cancel=function(){t.dismiss("cancel")},e.delete=function(){e.shows.$remove(e.show).then(function(e){console.log("successful delete: ",e)},function(e){console.log("error: ",e)}),t.close()}}]).controller("newModalCtrl",["$scope","$uibModalInstance","$firebaseArray",function(e,t,o){e.show={};var a=firebase.database().ref("shows");e.showsArray=o(a),e.ok=function(){var o=moment(e.show.showDate).format("dd, MMMM Do"),a=e.show.showDate.getTime()/1e3;console.log(o);var r={date:o,unix:a,location:e.show.showLocation,venue:e.show.venue,venueLink:e.show.venueLink||"",ticketLink:e.show.ticketLink||""};console.log(r),e.showsArray.$add(r),t.close()},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("NavCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage","$location",function(e,t,o,a,r,n,s,l,i){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.user={},e.mailConfirm=!1;var c=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,u=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e.height=u;var d=document.getElementById("mobile-background-div");c<900?d.style.height=u+"px":d.style.height="0px",!e.loaded&&c>806?e.mobileWidth=!1:e.mobileWidth=!0,t(function(){if(c>=678&&null===e.firebaseUser&&"/login"!==i.$$path&&(console.log("entering popup"),e.isPopup=!0,!document.getElementById("overlayMail"))){var t=document.createElement("div");t.id="overlayMail",t.className="overlay-start";var o=document.body,a=document.querySelector("#pop-up");t.style.height=o.scrollHeight+"px",a.appendChild(t);var r=document.querySelector("#overlayMail");r.classList.add("active")}},6e3),e.closePopup=function(){e.isPopup=!1},e.toStore=function(){e.isPopup=!1,s.go("store")},e.toggle=!0;var g=window.innerWidth;g>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("FooterCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.logout=function(){n.$signOut()},e.login=function(){s.go("login")};var i=window.innerWidth;i>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("MailModalCtrl",["$scope","$timeout","$uibModal","$uibModalInstance","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.close=function(){a.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("ShowsCtrl",["$scope","$state","currentAuth","$uibModal","$log","$firebaseArray","moment","Auth","getShows",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.shows=i,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.open=function(t,o){var n=a.open({animation:!0,backdrop:!0,templateUrl:"/views/shows/"+t+"ShowModal.html",controller:t+"ModalCtrl",size:"lg",resolve:{editShow:function(){return e.shows},index:o}});n.result.then(function(t){e.selected=t},function(){r.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("StoreCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","allProducts","ProductsService",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",e.loaded=!1,e.products=s,console.log("what are products? ",e.products),e.showProduct=function(e){t.go("storeShow",{id:e})},a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]).controller("StoreCartCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage",function(e,t,o,a,r,n){var s=document.getElementById("main");s.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.toCheckout=function(){r.url("/store/checkout/address")},e.continue=function(){r.url("/store")}}]).controller("StoreShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","oneProduct",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),console.log("what is oneProduct? ",l),e.product=l,e.images=l.images;var c=e.images[0];e.skus=e.product.skus.data,console.log("skus: ",e.skus),e.data={},e.data.selected=e.product.skus.data[0],console.log("selected: ",e.data.selected);var u=document.querySelector(".main-product-photo img");u.src=e.images[0],e.isActiveImg=function(){return this.img===c},e.whatSelected=function(){console.log(e.data.selected)},e.changeActive=function(){c=this.img,u.src=this.img}}]).controller("CheckoutTemplateCtrl",["$scope","$state","$http","$timeout","$location","$localStorage",function(e,t,o,a,r,n){e.$emit("loadMainContainer","loaded"),e.$storage=n,e.$on("cartChange",function(t,o){console.log("CART CHANGE UPDATED!!!!!!!!!!!!! ",o),e.showPath=o}),console.log("what is showPath? ",e.showPath),e.showPath||(e.showPath=e.$storage.pathCount,console.log("showPath is now ",e.showPath))}]).controller("StoreAddressCtrl",["$scope","$state","$window","$timeout","$http","$location","$localStorage","ngCart","$rootScope","CurrentOrderService",function(e,t,o,a,r,n,s,l,i,c){var u=document.getElementById("main");u.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=s,console.log("what is shipping? ",l.getShipping()),console.log("show me items: ",l.getItems()),e.cartItems=l.getItems(),i.path=n.$$path,(!e.$storage.pathCount||e.$storage.pathCount<1)&&(e.$storage.pathCount=0,e.$emit("cartChange",e.$storage.pathCount)),e.loaded=[],console.log("what is rootScope? ",i),e.data={shipping:{country:{}},billing:{country:{}}},e.mailingListAdd=!0,e.shippingSameBool=!1,r.get("/js/JSON/countries.json").success(function(t){e.countries=t,console.log("what is first country? ",e.countries[0]),e.data.shipping.country=e.countries[0],e.data.billing.country=e.countries[0],e.loaded.push("go")}),r.get("/js/JSON/states.json").success(function(t){e.states=t,e.loaded.push("go")}),r.get("/js/JSON/provinces.json").success(function(t){e.provinces=t,e.loaded.push("go")}),e.isShippingSame=function(){e.data.shippingSame?(e.data.billing=e.data.shipping,e.shippingSameBool=!0):(e.data.billing={},e.shippingSameBool=!1)},e.countryChange=function(t){"US"===t.code?e.shippingType=e.shipRates.domestic:e.shippingType=e.shipRates.international},e.submitForm=function(t){if(t.$valid){e.loaded=[];var o=e.data.shipping;e.data.billing;e.$storage.billingAddress=e.data.billing;var a={url:"/stripe/createOrder",method:"POST",params:{order:{currency:"usd",items:e.cartItems,shipping:{name:o.name,address:{line1:o.address1,line2:o.address2||null,city:o.city,state:o.stateProvince.short||null,country:o.country.code,postal_code:o.postalCode}},email:o.email,metadata:{taxRate:l.getTaxRate()}}}};r(a).then(function(t){"created"===t.data.status?(console.log("SUCCESS! ",t),e.$storage.mailingList=e.mailingListAdd,e.$storage.addressSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.addressSubmit=!0,e.$storage.orderData=t,e.$evalAsync(function(){n.url("/store/checkout/payment")})):(e.loaded=[1,2,3],console.log("ERROR!!!! ",t.data),e.errorMessage=t.data.message)},function(e){console.log("error ",e)})}else console.log("form invalid!!")},e.getTaxRate=function(e,t,a){if("US"===e.code&&"WA"===t.short&&a)if(o.localStorage.currentWaRate){var n=parseFloat(o.localStorage.currentWaRate);l.setTaxRate(n)}else{console.log("in WA State!!!!!");var s={url:"/taxRate",method:"GET",params:{country:"usa",postal:a}};r(s).then(function(e){console.log("what is response? ",e.data),console.log("type of total rate ",typeof e.data.totalRate),l.setTaxRate(e.data.totalRate),o.localStorage.currentWaRate=e.data.totalRate},function(e){console.log("error ",e)})}else"US"===e.code&&"WA"!==t.short?(console.log("not in WA state"),l.setTaxRate(0)):"US"!==e.code&&(console.log("Outside US!!!!!!!"),l.setTaxRate(0))}}]).controller("StorePaymentCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),l.path=r.$$path,e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.shipOptions=e.$storage.orderData.data.shipping_methods,e.savedSelectedShip=e.$storage.orderData.data.selected_shipping_method;for(var u=0;u<e.shipOptions.length;u++)if(e.shipOptions[u].id===e.savedSelectedShip){e.selectedShip=e.shipOptions[u];break}e.$watch("selectedShip",function(t,o,a){console.log("what is shipChoice? ",e.selectedShip),s.setShipping(e.selectedShip.amount)},!1),a(function(){e.loaded=!0}),e.submitForm=function(t){e.loaded=!1,Stripe.card.createToken({number:e.number,cvc:e.cvc,exp:e.expiry,name:e.$storage.billingAddress.name,address_line1:e.$storage.billingAddress.address1,address_line2:e.$storage.billingAddress.address2||null,address_city:e.$storage.billingAddress.city,address_state:e.$storage.billingAddress.stateProvince.short||null,address_zip:e.$storage.billingAddress.postalCode,address_country:e.$storage.billingAddress.country.code},d)};var d=function(t,a){if(a.error);else{token=a;var n={url:"/stripe/updateShipping",method:"POST",params:{token:token,orderId:e.$storage.orderData.data.id,selectedShip:e.selectedShip.id}};o(n).then(function(t){console.log("Success! ",t),e.$storage.paymentSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.paymentSubmit=!0,e.$storage.orderData=t,e.$storage.tokenData=token,r.url("/store/checkout/confirm")},function(t){e.loaded=!0,console.log("error ",t)})}}}]).controller("StoreConfirmCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.orderComplete=!1,l.path=r.$$path,console.log("what is rootScope? ",l),e.ngCart=s,e.token=e.$storage.tokenData,e.order=e.$storage.orderData.data;for(var c=e.order.items,u=0;u<c.length;u++)"shipping"===c[u].type&&(e.shipService=c[u].description);a(function(){e.loaded=!0}),e.createCharge=function(){e.loaded=!1;var t={url:"/stripe/orderComplete",method:"POST",params:{orderId:e.order.id,token:e.token.id}};o(t).then(function(t){console.log("Success! ",t),e.orderComplete=!0,e.$storage.mailingList&&d(),s.setTaxRate(),s.setShipping(),s.empty(),n.$reset()},function(t){e.loaded=!0,console.log("error ",t)})};var d=function(){console.log("submit clicked!");var t="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+e.$storage.orderData.data.email+"&c=JSON_CALLBACK";o.jsonp(t).then(function(e){console.log("success!!! ",e)},function(e){console.log(e)})}}]),angular.module("SistersDirectives",[]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,t,o){t.bind("change",function(t){var o=new FileReader;o.onload=function(t){e.$apply(function(){e.fileread=t.target.result})},o.readAsDataURL(t.target.files[0])})}}}]).directive("countryName",["$http",function(e){return{template:"<span>{{name}}</span>",scope:{countryCode:"="},link:function(t){e.get("/js/JSON/countries.json").then(function(e){for(var o=e.data,a=0;a<o.length;a++)if(o[a].code===t.countryCode){t.name=o[a].name;break}},function(e){t.name="unknown"})}}}]),angular.module("SistersServices",["ngResource"]).factory("LoadedService",function(){function e(e){o=e}function t(){return o}var o=!1;return{set:e,get:t}}).factory("Auth",["$firebaseAuth",function(e){return e()}]).factory("ProductsService",["$http","$q",function(e,t){return{allProducts:function(){var o=t.defer();return e.get("/stripe/allProducts").success(function(e){o.resolve(e.data)}),o.promise},oneProduct:function(o){var a=t.defer(),r={method:"GET",url:"/stripe/oneProduct",params:{productId:o}};return e(r).success(function(e){a.resolve(e)}),a.promise}}}]).service("InstagramFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/instagram",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).service("TwitterFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/twitter",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).factory("GetShows",["$firebaseArray","moment",function(e,t){var o=t().unix();return function(){var t=firebase.database().ref("shows").orderByChild("unix").startAt(o);return e(t)}}]).factory("BlogPosts",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("blog_posts").orderByChild("timestamp");return e(t)}}]).factory("ThisPostService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("blog_posts"),a=o.orderByChild("slug").equalTo(t);return e(a)}}]).factory("AllTagsService",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tags");return e(t)}}]).factory("TagsShowService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tags"),a=o.orderByChild("name").equalTo(t);return e(a)}}]).factory("ArchiveService",["$firebaseArray",function(e){return{years:function(){var t=firebase.database().ref("archives");return e(t)},months:function(t){var o=firebase.database().ref("archives/"+t);return e(o)}}}]).factory("ArchiveShowService",["$firebaseArray",function(e){return function(t,o){var a=firebase.database().ref("archives/"+t+"/"+o);return e(a)}}]).factory("SendDataService",function(){function e(e){o=e}function t(){return o}var o={};return{set:e,get:t}}).factory("CurrentOrderService",["$window",function(e){function t(t){e.localStorage.setItem("orderData",angular.toJson(t));
}function o(){var t=angular.fromJson(e.localStorage.getItem("orderData"));return JSON.parse(t)}return{set:t,get:o}}]).factory("HelperService",["moment","$q",function(e,t){return{parseYouTube:function(e){var t=e.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);return null!=t?t[1]:void console.log("The youtube url is not valid.")},base64MimeType:function(e){var t=null;if("string"!=typeof e)return t;var o=e.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);return o&&o.length&&(t=o[1]),console.log("image type is ",t),t},getBase64Image:function(e){var t=e.replace(/^data:image\/(png|jpeg);base64,/,"");return t},b64toBlob:function(e,t,o){t=t||"",o=o||512;for(var a=atob(e),r=[],n=0;n<a.length;n+=o){for(var s=a.slice(n,n+o),l=new Array(s.length),i=0;i<s.length;i++)l[i]=s.charCodeAt(i);var c=new Uint8Array(l);r.push(c)}var u=new Blob(r,{type:t});return u},pageDown:function(e){return e<2?"":e-1},findFirst:function(e,t){var o=e-4*(1+t);return o>=0?o:0},titleToURL:function(e){return e.split(" ").join("-")},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},imgResize:function(e){console.log("inside resize!!");var o=t.defer(),a=new Image;return a.src=e,a.onload=function(){console.log(this.width+" "+this.height);var e=a.width/a.height;console.log("WHAT IS RATIO??? ",e);var t=document.createElement("canvas");if(e>=1.776&&a.height>=500){console.log("loadIMG: ",a);var r=(a.height-500)/a.height;t.height=500,t.width=a.width-a.width*r}else if(e<1.776&&a.width>=889){console.log("loadIMG: ",a);var r=(a.width-889)/a.width;t.width=889,t.height=a.height-a.height*r}else console.log("loadIMG: ",a),console.log("image is not big enough!");var n=t.getContext("2d");n.drawImage(a,0,0,t.width,t.height);var s=t.toDataURL("image/jpeg");o.resolve(s)},o.promise}}}]).factory("SubmitImage",["HelperService",function(e){return function(t,o,a,r){e.imgResize(a).then(function(a){var n=e.base64MimeType(a);console.log("TYPE IS ",n);var s=e.getBase64Image(a),l=e.b64toBlob(s,n),i={contentType:n},c=(1e32*Math.random()).toString(36),u=firebase.storage().ref(),d=u.child("blog-images/"+c).put(l,i);d.on(firebase.storage.TaskEvent.STATE_CHANGED,function(e){var t=e.bytesTransferred/e.totalBytes*100;switch(console.log("Upload is "+t+"% done"),e.state){case firebase.storage.TaskState.PAUSED:console.log("Upload is paused");break;case firebase.storage.TaskState.RUNNING:console.log("Upload is running")}},function(e){switch(e.code){case"storage/unauthorized":break;case"storage/canceled":break;case"storage/unknown":}},function(){console.log("upload finished");var e=d.snapshot.downloadURL;r(t,o,e,null)})})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
