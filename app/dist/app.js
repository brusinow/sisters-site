var authWait=["Auth",function(e){return e.$waitForSignIn()}],authRequire=["Auth",function(e){return e.$requireSignIn()}];angular.module("SistersApp",["SistersCtrls","SistersDirectives","ui.router","ui.bootstrap","firebase","angularMoment","ngCart","ngStorage","angularPayments","ngAnimate","picardy.fontawesome","textAngular","ui.router.metatags","angular-parallax"]).run(["$rootScope","$state","$location","$window","MetaTags",function(e,t,o,a,r){e.MetaTags=r,e.$on("$stateChangeError",function(e,o,a,r,n,s){"AUTH_REQUIRED"===s&&t.go("login")}),e.$on("$stateChangeSuccess",function(e){document.body.scrollTop=document.documentElement.scrollTop=0,a.ga&&a.ga("send","pageview",{page:o.path()})})}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","UIRouterMetatagsProvider","$provide",function(e,t,o,a,r){a.setDefaultTitle("SISTERS").setDefaultDescription('Seattle duo. "Drink Champagne", the debut album, coming soon!').setStaticProperties({"og:site_name":"SISTERS"}).setOGURL(!0),t.otherwise("/"),e.state("home",{url:"/",metaTags:{title:"SISTERS",description:'Seattle duo. "Drink Champagne", the debut album, coming soon!'},templateUrl:"/views/home.html",controller:"HomeCtrl"}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"AboutCtrl"}).state("blog",{templateUrl:"/views/blog/blog.html",controller:"BlogMasterCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}]}}).state("blog-new",{url:"/blog/new",templateUrl:"/views/blog/newBlogPost.html",controller:"NewBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog-edit",{url:"/blog/edit/:slug",templateUrl:"/views/blog/editBlogPost.html",controller:"EditBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}],thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}]}}).state("blog-tags-edit",{url:"/blog/editTags/",templateUrl:"/views/blog/editTags.html",controller:"EditBlogTagsCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog.main",{url:"/blog",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.page",{url:"/blog/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.archive",{url:"/blog/archives/:year/:month",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.archivePage",{url:"/blog/archives/:year/:month/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.tags",{url:"/blog/tags/:tagName",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogTagsCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],TagsShow:["$stateParams","TagsShowService",function(e,t){return t(e.tagName).$loaded()}]}}).state("blog.show",{url:"/blog/show/:slug",templateUrl:"/views/blog/blog-content.html",controller:"BlogShowCtrl",resolve:{currentAuth:authWait,thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],Blog:["BlogPosts",function(e){return e().$loaded()}]},metaTags:{title:function(e){console.log("what is Blog? ",e);var t="SISTERS - "+e[0].postTitle;return t},description:function(e){return e[0].postBody}}}).state("shows",{url:"/shows",metaTags:{title:"SISTERS - Shows",description:"Upcoming shows for Seattle duo SISTERS."},templateUrl:"/views/shows/shows.html",controller:"ShowsCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("store",{url:"/store",metaTags:{title:"SISTERS - Store",description:"The official store for Seattle duo SISTERS."},templateUrl:"/views/store/store.html",controller:"StoreCtrl",resolve:{currentAuth:authWait,allProducts:["ProductsService",function(e){return e.allProducts()}]}}).state("storeCart",{url:"/store/cart",templateUrl:"/views/store/cart.html",controller:"StoreCartCtrl",resolve:{currentAuth:authWait}}).state("storeShow",{url:"/store/:id",templateUrl:"/views/store/storeShow.html",controller:"StoreShowCtrl",resolve:{currentAuth:authWait,oneProduct:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id)}]}}).state("checkout",{templateUrl:"/views/store/checkoutTemplate.html",controller:"CheckoutTemplateCtrl",resolve:{currentAuth:authWait}}).state("checkout.address",{url:"/store/checkout/address",templateUrl:"/views/store/checkoutAddress.html",controller:"StoreAddressCtrl",resolve:{currentAuth:authWait}}).state("checkout.payment",{url:"/store/checkout/payment",templateUrl:"/views/store/checkoutPayment.html",controller:"StorePaymentCtrl",resolve:{currentAuth:authWait,currentOrder:["CurrentOrderService",function(e){return e.get()}]}}).state("checkout.confirm",{url:"/store/checkout/confirm",templateUrl:"/views/store/checkoutConfirm.html",controller:"StoreConfirmCtrl",resolve:{currentAuth:authWait}}).state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}),o.html5Mode(!0)}]).filter("cut",function(){return function(e,t,o,a,r){var n=angular.element("<div/>").html(e);console.log("source: ",n);var s=n.text().length;console.log("length: ",s)}}).filter("trustAsResourceUrl",["$sce",function(e){return function(t){return e.trustAsResourceUrl("http://www.youtube.com/embed/"+t)}}]).filter("MomentFilter",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do, YYYY")}}]).filter("tooOld",function(){return function(e){var t=moment().unix(),o=[];return angular.forEach(e,function(e){var a=e.unixDate/1e3;t-a<=86400&&o.push(e)}),o}}).filter("DeliveryEstDate",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do")}}]).filter("timeAgo",["moment",function(){return function(e){return moment(e).fromNow()}}]).filter("centsToDollars",function(){return function(e){return e/100}}),angular.module("SistersCtrls",["SistersServices"]).controller("MainCtrl",["$scope","$state","$timeout","$http",function(e,t,o,a){e.$on("loadMainContainer",function(t,o){"loaded"===o?e.mainLoaded=!0:e.mainLoaded=!1})}]).controller("HomeCtrl",["$scope","$state","$timeout","$http","LoadedService",function(e,t,o,a,r){var n=document.getElementById("main");n.style.backgroundColor="rgba(247, 237, 245, 0)",n.style.width="",n.style.padding="",e.loaded=r.get();var s=window.innerWidth;!e.loaded&&s>806?o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500):o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500),e.mailchimpSubmit=function(t,r,n){if(t.$valid){e.isPopup=!1;var s="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+r+"&c=JSON_CALLBACK";a.jsonp(s).then(function(t){e.user={},n&&(e.mailConfirm=!0,o(function(){e.mailConfirm=!1,console.log("mail confirm reset")},7e3))},function(e){console.log(e)})}}}]).controller("AboutCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 1)",a.style.padding="0",a.style.width="100%",e.$emit("loadMainContainer","loaded")}]),angular.module("SistersCtrls").controller("LoginCtrl",["$scope","$state","Auth",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.submitted=!1,e.logged=!1,o.$onAuthStateChanged(function(o){o?(e.logged=!0,t.go("home")):console.log("Not logged in.")}),e.user={},e.login=function(){e.submitted=!0,e.firebaseUser=null,o.$signInWithEmailAndPassword(e.user.email,e.user.password).then(function(t){e.firebaseUser=t}).catch(function(e){console.error("Authentication failed:",e)})}}]),angular.module("SistersCtrls").controller("NewBlogCtrl",["$scope","$state","$http","Auth","BlogPosts","AllTags","HelperService","SubmitImage","moment",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.BlogPosts=r(),e.tags=n,e.checkedTags={},e.data={},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){console.log("submit clicked"),console.log("what is post? ",e.post),"image"===e.data.mediaSelect?l(e.post,e.BlogPosts,e.data.image,u):"youtube"===e.data.mediaSelect&&(e.data.youtube=s.parseYouTube(e.data.youtube),u(e.post,e.BlogPosts,null,e.data.youtube))},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.resizeImg=function(e){s.imgResize(e)},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})};var u=function(o,a,r,n){var l=s.slugify(o.title),c=(new Date).getTime(),u=i(c).format("YYYY"),d=i(c).format("MMMM"),g={};for(var m in e.checkedTags)g[m]=e.checkedTags[m];var h={postTitle:o.title,slug:l,postBody:o.postBody,youtube:n?n:null,img:r?r:null,tags:g,timestamp:c};console.log("thisPost: ",h),a.$add(h).then(function(e){var o=e.key,a={key:o};firebase.database().ref("archives/"+u+"/"+d+"/"+o).set(a),t.go("blog.main")})}}]).controller("EditBlogCtrl",["$scope","$state","$timeout","$stateParams","SendDataService","AllTags","thisPost","HelperService","SubmitImage","$uibModal","$log","BlogPosts",function(e,t,o,a,r,n,s,l,i,c,u,d){var g=document.getElementById("main");if(g.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.data={},e.postArray=s,e.post=s[0],e.originalTags=angular.copy(e.post.tags),e.tags=n,e.post.youtube){console.log(e.post.youtube);var m=e.post.youtube;e.data.youtube="https://www.youtube.com/watch?v="+m}e.confirmBlogDelete=function(e){var t=c.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/deleteBlogConfirmModal.html",controller:"DeleteBlogConfirmCtrl",size:"sm",resolve:{Post:e}});t.result.then(function(){console.log("submitted modal")},function(){u.info("Modal dismissed at: "+new Date)})},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){"image"===e.data.mediaSelect&&e.data.image?i(e.post,e.postArray,e.data.image,h):"image"!==e.data.mediaSelect||e.data.image?"youtube"===e.data.mediaSelect&&(e.data.youtube=l.parseYouTube(e.data.youtube),h(e.post,e.BlogPosts,null,e.data.youtube)):h(e.post,e.BlogPosts,e.post.img,null)};var h=function(a,r,n,s){var i=l.slugify(a.postTitle);console.log(i);var c=moment(a.timestamp).format("YYYY"),u=moment(a.timestamp).format("MMMM"),d={};for(var g in a.tags)d[g]=a.tags[g];a.slug=i,a.tags=d,a.youtube=s?s:null,a.img=n?n:null;var m={postTitle:a.postTitle,slug:i,postBody:a.postBody,youtube:a.youtube,img:a.img,tags:d,timestamp:a.timestamp};e.postArray.$save(a).then(function(a){var r=a.key;firebase.database().ref("archives/"+c+"/"+u+"/"+r).remove(),firebase.database().ref("archives/"+c+"/"+u+"/"+r).set(m);for(g in e.originalTags)if(e.originalTags[g]===!0){var n="tags/"+g+"/posts/"+r;firebase.database().ref(n).remove().then(function(e){}).catch(function(e){console.log("Remove failed: "+e.message)})}else console.log(g+" not a tag for old edit!");o(function(){for(g in m.tags)m.tags[g]===!0?firebase.database().ref("tags/"+g+"/posts/"+r).set(m):console.log(g+" not a tag for new edit!")},100),t.go("blog.main")})}}]).controller("EditBlogTagsCtrl",["$scope","$uibModalInstance","tag","Blog",function(e,t,o,a){e.prompted=!1,e.tag=angular.copy(o),console.log(o),e.ok=function(o){var a={name:e.tag.name};firebase.database().ref("/tags/"+e.tag.$id).update(a),t.close()},e.cancel=function(){t.dismiss("cancel")},e.deletePrompt=function(){e.prompted=!0},e.delete=function(o){if("no"===o)e.prompted=!1;else if("yes"===o){firebase.database().ref("/tags/"+e.tag.$id).remove();for(var r=0;r<a.length;r++){var n=a[r].tags;n[e.tag.$id]===!0&&(n[e.tag.$id]=null,firebase.database().ref("/blog_posts/"+a[r].$id+"/tags").update(n))}t.close()}}}]).controller("DeleteBlogConfirmCtrl",["$scope","$uibModalInstance","Post","moment","$location",function(e,t,o,a,r){console.log(o),e.yes=function(){var e=a(o.timestamp).format("YYYY"),n=a(o.timestamp).format("MMMM");console.log(n+" of "+e),firebase.database().ref("blog_posts/"+o.$id).remove(),firebase.database().ref("archives/"+e+"/"+n+"/"+o.$id).remove(),t.close(),r.url("/blog")},e.no=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("BlogMasterCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService","TwitterFactory",function(e,t,o,a,r,n,s,l,i,c,u,d){e.loadedInsta=!1,e.loadedTwitter=!1,e.$emit("loadMainContainer","loaded"),c.then(function(t){e.photos=t.data,e.loadedInsta=!0,e.loadedTwitter&&(e.loaded=!0)}),d.then(function(t){console.log(t),e.tweetDate=t.allTweetData.created_at,e.twitterUser=t.allTweetData.user.name,e.twitterHandle=t.allTweetData.user.screen_name,e.tweetId=t.allTweetData.id_str,e.tweet=t.tweetBody,e.favorites=t.favorites,e.retweets=t.retweets,e.loadedTwitter=!0,e.loadedInsta&&(e.loaded=!0)}),e.enable=!0,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("BlogCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService",function(e,t,o,a,r,n,s,l,i,c,u){var d=document.getElementById("main");d.style.backgroundColor="",d.style.width="",d.style.padding="",e.$emit("loadMainContainer","loaded"),e.allTags=u(),e.location=r.$$path,c.then(function(t){e.photos=t.data,e.loaded=!0}),e.enable=!0,e.parseTitle=i.titleToURL,e.allPosts=l,e.page=n.page||0,e.pageUp="/blog/"+(parseInt(e.page)+1),e.pageDown="/blog/"+i.pageDown(e.page),e.length=l.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=l.slice(e.first,e.last),e.editPost=function(e){r.url("/blog/edit/"+e)}}]).controller("BlogArchiveCtrl",["$scope","$state","$timeout","$stateParams","$location","Blog","Archive","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=r.$$path,e.allTags=c(),e.enable=!0,e.fullBlog=n;for(var u=[],d=0;d<s.length;d++)for(var g=s[d].$id,m=0;m<n.length;m++){var h=n[m].$id;g===h&&u.push(n[m])}e.allPosts=u,e.params=a,e.parseTitle=i.titleToURL,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=a.page||0,e.pageUp="/blog/archives/"+a.year+"/"+a.month+"/"+(parseInt(e.page)+1),e.pageDown="/blog/archives/"+a.year+"/"+a.month+"/"+i.pageDown(e.page),e.length=e.allPosts.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=e.allPosts.slice(e.first,e.last),o(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);r.url("/blog/edit/"+t)}}]).controller("BlogTagsCtrl",["$scope","$state","$stateParams","$location","$timeout","Blog","TagsShow","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=c(),e.enable=!0,e.tagName=s[0].name;for(var u=s[0].$id,d=[],g=0;g<n.length;g++){var m=n[g].tags;m[u]&&d.push(n[g])}e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=o.page||0,e.pageUp="/blog/tags/"+o.tagName+"/"+(parseInt(e.page)+1),e.pageDown="/blog/tags/"+o.tagName+"/"+i.pageDown(e.page),e.length=length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,console.log("Last: ",e.last),e.posts=d.slice(e.first,e.last),console.log(e.posts),r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);a.url("/blog/edit/"+t)}}]).controller("BlogShowCtrl",["$scope","$state","$stateParams","$location","$timeout","thisPost","Blog","AllTagsService",function(e,t,o,a,r,n,s,l){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=l(),e.enable=!1,e.recentPosts=s,console.log(e.recentPosts),e.posts=n,e.allPosts=n,r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0})}]).controller("BlogSidebarCtrl",["$scope","$state","$stateParams","$timeout","ArchiveService","AllTagsService","BlogPosts","HelperService","$uibModal","$log",function(e,t,o,a,r,n,s,l,i,c){e.recentPosts=s(),e.parseTitle=l.titleToURL,e.years=r.years(),e.years.$loaded().then(function(){}),e.allTags=n(),e.newBlogPost=function(){t.go("blog-new")},e.editTag=function(e){var t=i.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/editTagsModal.html",controller:"EditBlogTagsCtrl",size:"lg",resolve:{Blog:["BlogPosts",function(e){return e().$loaded()}],tag:e}});t.result.then(function(){console.log("submitted modal")},function(){c.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("editModalCtrl",["$scope","$uibModalInstance","editShow","index","$firebaseArray",function(e,t,o,a,r){e.shows=o,e.show=o[a],console.log("index is ",a),e.dateObj=new Date(1e3*e.show.unix),console.log(e.dateObj),e.ok=function(){e.show.date=moment(e.dateObj).format("ddd, MMMM Do"),e.show.unix=e.dateObj.getTime()/1e3,e.shows.$save(e.show).then(function(e){console.log("success")},function(e){console.log("Error:",e)}),t.close()},e.cancel=function(){t.dismiss("cancel")},e.delete=function(){e.shows.$remove(e.show).then(function(e){console.log("successful delete: ",e)},function(e){console.log("error: ",e)}),t.close()}}]).controller("newModalCtrl",["$scope","$uibModalInstance","$firebaseArray",function(e,t,o){e.show={};var a=firebase.database().ref("shows");e.showsArray=o(a),e.ok=function(){var o=moment(e.show.showDate).format("dd, MMMM Do"),a=e.show.showDate.getTime()/1e3;console.log(o);var r={date:o,unix:a,location:e.show.showLocation,venue:e.show.venue,venueLink:e.show.venueLink||"",ticketLink:e.show.ticketLink||""};console.log(r),e.showsArray.$add(r),t.close()},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("NavCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage","$location","$window",function(e,t,o,a,r,n,s,l,i,c){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.user={},e.mailConfirm=!1;var u=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,d=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e.height=d;var g=document.getElementById("mobile-background-div");u<900?g.style.height=d+"px":g.style.height="0px",!e.loaded&&u>806?e.mobileWidth=!1:e.mobileWidth=!0,t(function(){if(u>=678&&null===e.firebaseUser&&"/login"!==i.$$path){if(console.log("entering popup"),!document.getElementById("overlayMail")){var t=document.createElement("div");t.id="overlayMail",t.className="overlay-start";var o=document.body,a=document.querySelector("#pop-up");console.log(o.scrollHeight),t.style.height=o.scrollHeight+"px",a.appendChild(t);var r=document.querySelector("#overlayMail");r.classList.add("active")}e.isPopup=!0}},6e3),e.closePopup=function(){e.isPopup=!1},e.toStore=function(){e.isPopup=!1,s.go("store")},e.toggle=!0;var m=window.innerWidth;m>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("FooterCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.logout=function(){n.$signOut()},e.login=function(){s.go("login")};var i=window.innerWidth;i>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("MailModalCtrl",["$scope","$timeout","$uibModal","$uibModalInstance","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.close=function(){a.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("ShowsCtrl",["$scope","$state","currentAuth","$uibModal","$log","$firebaseArray","moment","Auth","getShows",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="",c.style.width="",c.style.padding="",e.$emit("loadMainContainer","loaded"),e.shows=i,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.open=function(t,o){var n=a.open({animation:!0,backdrop:!0,templateUrl:"/views/shows/"+t+"ShowModal.html",controller:t+"ModalCtrl",size:"lg",resolve:{editShow:function(){return e.shows},index:o}});n.result.then(function(t){e.selected=t},function(){r.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("StoreCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","allProducts","ProductsService",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",i.style.width="",i.style.padding="",e.loaded=!1,e.products=s,e.showProduct=function(e){t.go("storeShow",{id:e})},a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]).controller("StoreCartCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage",function(e,t,o,a,r,n){var s=document.getElementById("main");s.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.toCheckout=function(){r.url("/store/checkout/address")},e.continue=function(){r.url("/store")}}]).controller("StoreShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","oneProduct",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.product=l,e.images=l.images;var c=e.images[0];e.skus=e.product.skus.data,e.data={},e.data.selected=e.product.skus.data[0];var u=document.querySelector(".main-product-photo img");u.src=e.images[0],e.isActiveImg=function(){return this.img===c},e.changeActive=function(){c=this.img,u.src=this.img}}]).controller("CheckoutTemplateCtrl",["$scope","$state","$http","$timeout","$location","$localStorage",function(e,t,o,a,r,n){e.$emit("loadMainContainer","loaded"),e.$storage=n,e.$on("cartChange",function(t,o){e.showPath=o}),e.showPath||(e.showPath=e.$storage.pathCount)}]).controller("StoreAddressCtrl",["$scope","$state","$window","$timeout","$http","$location","$localStorage","ngCart","$rootScope","CurrentOrderService",function(e,t,o,a,r,n,s,l,i,c){var u=document.getElementById("main");u.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=s,e.cartItems=l.getItems(),i.path=n.$$path,(!e.$storage.pathCount||e.$storage.pathCount<1)&&(e.$storage.pathCount=0,e.$emit("cartChange",e.$storage.pathCount)),e.loaded=[],e.data={shipping:{country:{}},billing:{country:{}}},e.mailingListAdd=!0,e.shippingSameBool=!1,r.get("/js/JSON/countries.json").success(function(t){e.countries=t,e.data.shipping.country=e.countries[0],e.data.billing.country=e.countries[0],e.loaded.push("go")}),r.get("/js/JSON/states.json").success(function(t){e.states=t,e.loaded.push("go")}),r.get("/js/JSON/provinces.json").success(function(t){e.provinces=t,e.loaded.push("go")}),e.isShippingSame=function(){e.data.shippingSame?(e.data.billing=e.data.shipping,e.shippingSameBool=!0):(e.data.billing={},e.shippingSameBool=!1)},e.countryChange=function(t){"US"===t.code?e.shippingType=e.shipRates.domestic:e.shippingType=e.shipRates.international},e.submitForm=function(t){if(t.$valid){e.loaded=[];var o=e.data.shipping;e.data.billing;e.copyItems=angular.copy(e.cartItems);for(var a=0;a<e.copyItems.length;a++)delete e.copyItems[a]._data,delete e.copyItems[a].attr;e.$storage.billingAddress=e.data.billing;var s={url:"/stripe/createOrder",method:"POST",params:{order:{currency:"usd",items:e.copyItems,shipping:{name:o.name,address:{line1:o.address1,line2:o.address2||null,city:o.city,state:o.stateProvince.short||null,country:o.country.code,postal_code:o.postalCode}},email:o.email,metadata:{taxRate:l.getTaxRate()}}}};r(s).then(function(t){"created"===t.data.status?(e.$storage.mailingList=e.mailingListAdd,e.$storage.addressSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.addressSubmit=!0,e.$storage.orderData=t,e.$evalAsync(function(){n.url("/store/checkout/payment")})):(e.loaded=[1,2,3],e.errorMessage=t.data.message)},function(e){console.log("error ",e)})}else console.log("form invalid!!")},e.getTaxRate=function(e,t,a){if("US"===e.code&&"WA"===t.short&&a)if(o.localStorage.currentWaRate){var n=parseFloat(o.localStorage.currentWaRate);l.setTaxRate(n)}else{var s={url:"/taxRate",method:"GET",params:{country:"usa",postal:a}};r(s).then(function(e){l.setTaxRate(e.data.totalRate),o.localStorage.currentWaRate=e.data.totalRate},function(e){console.log("error ",e)})}else"US"===e.code&&"WA"!==t.short?l.setTaxRate(0):"US"!==e.code&&l.setTaxRate(0)}}]).controller("StorePaymentCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),l.path=r.$$path,e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.shipOptions=e.$storage.orderData.data.shipping_methods,e.savedSelectedShip=e.$storage.orderData.data.selected_shipping_method;for(var u=0;u<e.shipOptions.length;u++)if(e.shipOptions[u].id===e.savedSelectedShip){e.selectedShip=e.shipOptions[u];break}e.$watch("selectedShip",function(t,o,a){s.setShipping(e.selectedShip.amount)},!1),a(function(){e.loaded=!0}),e.submitForm=function(t){e.loaded=!1,Stripe.card.createToken({number:e.number,cvc:e.cvc,exp:e.expiry,name:e.$storage.billingAddress.name,address_line1:e.$storage.billingAddress.address1,address_line2:e.$storage.billingAddress.address2||null,address_city:e.$storage.billingAddress.city,address_state:e.$storage.billingAddress.stateProvince.short||null,address_zip:e.$storage.billingAddress.postalCode,address_country:e.$storage.billingAddress.country.code},d)};var d=function(t,a){if(a.error);else{token=a;var n={url:"/stripe/updateShipping",method:"POST",params:{token:token,orderId:e.$storage.orderData.data.id,selectedShip:e.selectedShip.id}};o(n).then(function(t){e.$storage.paymentSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.paymentSubmit=!0,e.$storage.orderData=t,e.$storage.tokenData=token,r.url("/store/checkout/confirm")},function(t){e.loaded=!0,console.log("error ",t)})}}}]).controller("StoreConfirmCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.orderComplete=!1,l.path=r.$$path,e.ngCart=s,e.token=e.$storage.tokenData,e.order=e.$storage.orderData.data;for(var c=e.order.items,u=0;u<c.length;u++)"shipping"===c[u].type&&(e.shipService=c[u].description);a(function(){e.loaded=!0}),e.createCharge=function(){e.loaded=!1;var t={url:"/stripe/orderComplete",method:"POST",params:{orderId:e.order.id,token:e.token.id}};o(t).then(function(t){e.orderComplete=!0,e.$storage.mailingList&&d(),s.setTaxRate(),s.setShipping(),s.empty(),n.$reset()},function(t){e.loaded=!0,console.log("error ",t)})};var d=function(){var t="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+e.$storage.orderData.data.email+"&c=JSON_CALLBACK";o.jsonp(t).then(function(e){},function(e){console.log(e)})}}]),angular.module("SistersDirectives",[]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,t,o){t.bind("change",function(t){var o=new FileReader;o.onload=function(t){e.$apply(function(){e.fileread=t.target.result})},o.readAsDataURL(t.target.files[0])})}}}]).directive("countryName",["$http",function(e){return{template:"<span>{{name}}</span>",scope:{countryCode:"="},link:function(t){e.get("/js/JSON/countries.json").then(function(e){for(var o=e.data,a=0;a<o.length;a++)if(o[a].code===t.countryCode){t.name=o[a].name;break}},function(e){t.name="unknown"})}}}]),angular.module("SistersServices",["ngResource"]).factory("LoadedService",function(){function e(e){o=e}function t(){return o}var o=!1;return{set:e,get:t}}).factory("Auth",["$firebaseAuth",function(e){return e()}]).factory("ProductsService",["$http","$q",function(e,t){return{allProducts:function(){var o=t.defer();return e.get("/stripe/allProducts").success(function(e){o.resolve(e.data)}),o.promise},oneProduct:function(o){var a=t.defer(),r={method:"GET",url:"/stripe/oneProduct",params:{productId:o}};return e(r).success(function(e){a.resolve(e)}),a.promise}}}]).service("InstagramFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/instagram",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).service("TwitterFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/twitter",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).factory("GetShows",["$firebaseArray","moment",function(e,t){var o=t().unix();return function(){var t=firebase.database().ref("shows").orderByChild("unix").startAt(o);return e(t)}}]).factory("BlogPosts",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("blog_posts").orderByChild("timestamp");return e(t)}}]).factory("ThisPostService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("blog_posts"),a=o.orderByChild("slug").equalTo(t);return e(a)}}]).factory("AllTagsService",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tags");return e(t)}}]).factory("TagsShowService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tags"),a=o.orderByChild("name").equalTo(t);return e(a)}}]).factory("ArchiveService",["$firebaseArray",function(e){return{years:function(){var t=firebase.database().ref("archives");return e(t)},months:function(t){var o=firebase.database().ref("archives/"+t);return e(o)}}}]).factory("ArchiveShowService",["$firebaseArray",function(e){return function(t,o){var a=firebase.database().ref("archives/"+t+"/"+o);return e(a)}}]).factory("SendDataService",function(){function e(e){o=e}function t(){return o}var o={};return{set:e,get:t}}).factory("CurrentOrderService",["$window",function(e){function t(t){e.localStorage.setItem("orderData",angular.toJson(t))}function o(){var t=angular.fromJson(e.localStorage.getItem("orderData"));return JSON.parse(t)}return{set:t,get:o}}]).factory("HelperService",["moment","$q",function(e,t){return{parseYouTube:function(e){var t=e.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);return null!=t?t[1]:void console.log("The youtube url is not valid.")},base64MimeType:function(e){var t=null;if("string"!=typeof e)return t;var o=e.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);return o&&o.length&&(t=o[1]),console.log("image type is ",t),t},getBase64Image:function(e){var t=e.replace(/^data:image\/(png|jpeg);base64,/,"");return t},b64toBlob:function(e,t,o){
t=t||"",o=o||512;for(var a=atob(e),r=[],n=0;n<a.length;n+=o){for(var s=a.slice(n,n+o),l=new Array(s.length),i=0;i<s.length;i++)l[i]=s.charCodeAt(i);var c=new Uint8Array(l);r.push(c)}var u=new Blob(r,{type:t});return u},pageDown:function(e){return e<2?"":e-1},findFirst:function(e,t){var o=e-4*(1+t);return o>=0?o:0},titleToURL:function(e){return e.split(" ").join("-")},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},imgResize:function(e){console.log("inside resize!!");var o=t.defer(),a=new Image;return a.src=e,a.onload=function(){console.log(this.width+" "+this.height);var e=a.width/a.height;console.log("WHAT IS RATIO??? ",e);var t=document.createElement("canvas");if(e>=1.776&&a.height>=500){console.log("loadIMG: ",a);var r=(a.height-500)/a.height;t.height=500,t.width=a.width-a.width*r}else if(e<1.776&&a.width>=889){console.log("loadIMG: ",a);var r=(a.width-889)/a.width;t.width=889,t.height=a.height-a.height*r}else console.log("loadIMG: ",a),console.log("image is not big enough!");var n=t.getContext("2d");n.drawImage(a,0,0,t.width,t.height);var s=t.toDataURL("image/jpeg");o.resolve(s)},o.promise}}}]).factory("SubmitImage",["HelperService",function(e){return function(t,o,a,r){e.imgResize(a).then(function(a){var n=e.base64MimeType(a);console.log("TYPE IS ",n);var s=e.getBase64Image(a),l=e.b64toBlob(s,n),i={contentType:n},c=(1e32*Math.random()).toString(36),u=firebase.storage().ref(),d=u.child("blog-images/"+c).put(l,i);d.on(firebase.storage.TaskEvent.STATE_CHANGED,function(e){var t=e.bytesTransferred/e.totalBytes*100;switch(console.log("Upload is "+t+"% done"),e.state){case firebase.storage.TaskState.PAUSED:console.log("Upload is paused");break;case firebase.storage.TaskState.RUNNING:console.log("Upload is running")}},function(e){switch(e.code){case"storage/unauthorized":break;case"storage/canceled":break;case"storage/unknown":}},function(){console.log("upload finished");var e=d.snapshot.downloadURL;r(t,o,e,null)})})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIjAwIGhvbWVfY29udHJvbGxlci5qcyIsIjAxIGF1dGhfY29udHJvbGxlci5qcyIsIjAyIGJsb2dfYWRtaW5fY29udHJvbGxlci5qcyIsIjAzIGJsb2dfY29udHJvbGxlci5qcyIsIjA0IG1vZGFsX2NvbnRyb2xsZXIuanMiLCIwNSBuYXZfY29udHJvbGxlci5qcyIsIjA2IHNob3dfY29udHJvbGxlci5qcyIsIjA3IHN0b3JlX2NvbnRyb2xsZXIuanMiLCJkaXJlY3RpdmVzLmpzIiwic2VydmljZXMuanMiXSwibmFtZXMiOlsiYXV0aFdhaXQiLCJBdXRoIiwiJHdhaXRGb3JTaWduSW4iLCJhdXRoUmVxdWlyZSIsIiRyZXF1aXJlU2lnbkluIiwiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRyb290U2NvcGUiLCIkc3RhdGUiLCIkbG9jYXRpb24iLCIkd2luZG93IiwiTWV0YVRhZ3MiLCIkb24iLCJldmVudCIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJlcnJvciIsImdvIiwiZG9jdW1lbnQiLCJib2R5Iiwic2Nyb2xsVG9wIiwiZG9jdW1lbnRFbGVtZW50IiwiZ2EiLCJwYWdlIiwicGF0aCIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJVSVJvdXRlck1ldGF0YWdzUHJvdmlkZXIiLCIkcHJvdmlkZSIsInNldERlZmF1bHRUaXRsZSIsInNldERlZmF1bHREZXNjcmlwdGlvbiIsInNldFN0YXRpY1Byb3BlcnRpZXMiLCJvZzpzaXRlX25hbWUiLCJzZXRPR1VSTCIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwibWV0YVRhZ3MiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsImN1cnJlbnRBdXRoIiwiQmxvZyIsIkJsb2dQb3N0cyIsIiRsb2FkZWQiLCJBbGxUYWdzIiwiQWxsVGFnc1NlcnZpY2UiLCJ0aGlzUG9zdCIsIiRzdGF0ZVBhcmFtcyIsIlRoaXNQb3N0U2VydmljZSIsInNsdWciLCJBcmNoaXZlIiwiQXJjaGl2ZVNob3dTZXJ2aWNlIiwieWVhciIsIm1vbnRoIiwiVGFnc1Nob3ciLCJUYWdzU2hvd1NlcnZpY2UiLCJ0YWdOYW1lIiwiY29uc29sZSIsImxvZyIsInBvc3RUaXRsZSIsInBvc3RCb2R5IiwiZ2V0U2hvd3MiLCJHZXRTaG93cyIsImFsbFByb2R1Y3RzIiwiUHJvZHVjdHNTZXJ2aWNlIiwib25lUHJvZHVjdCIsImlkIiwiY3VycmVudE9yZGVyIiwiQ3VycmVudE9yZGVyU2VydmljZSIsImdldCIsImh0bWw1TW9kZSIsImZpbHRlciIsInZhbHVlIiwiZW5hYmxlIiwid29yZHdpc2UiLCJtYXgiLCJ0YWlsIiwic291cmNlIiwiZWxlbWVudCIsImh0bWwiLCJsZW5ndGgiLCJ0ZXh0IiwiJHNjZSIsInZhbCIsInRydXN0QXNSZXNvdXJjZVVybCIsIm1vbWVudCIsImZvcm1hdCIsImV2ZW50cyIsImN1cnJlbnREYXkiLCJ1bml4IiwiZmlsdGVyZWQiLCJmb3JFYWNoIiwidGhpc0V2ZW50IiwidW5peERhdGUiLCJwdXNoIiwiZnJvbU5vdyIsIiRzY29wZSIsIiR0aW1lb3V0IiwiJGh0dHAiLCJkYXRhIiwibWFpbkxvYWRlZCIsIkxvYWRlZFNlcnZpY2UiLCJtYWluIiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsIndpZHRoIiwicGFkZGluZyIsImxvYWRlZCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCIkZW1pdCIsImZhZGVIb21lIiwic2V0IiwibWFpbGNoaW1wU3VibWl0IiwiZm9ybSIsImVtYWlsIiwiaXNOYXYiLCIkdmFsaWQiLCJpc1BvcHVwIiwianNvbnAiLCJ0aGVuIiwicmVzIiwidXNlciIsIm1haWxDb25maXJtIiwic3VibWl0dGVkIiwibG9nZ2VkIiwiJG9uQXV0aFN0YXRlQ2hhbmdlZCIsImZpcmViYXNlVXNlciIsImxvZ2luIiwiJHNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkIiwicGFzc3dvcmQiLCJjYXRjaCIsIkhlbHBlclNlcnZpY2UiLCJTdWJtaXRJbWFnZSIsInRhZ3MiLCJjaGVja2VkVGFncyIsInJlc2V0TWVkaWEiLCJ5b3V0dWJlIiwiaW1hZ2UiLCJzdWJtaXQiLCJwb3N0IiwibWVkaWFTZWxlY3QiLCJhZGRQb3N0IiwicGFyc2VZb3VUdWJlIiwiYWRkVGFnIiwiJGFkZCIsIm5hbWUiLCJuZXdUYWciLCJyZWYiLCJwb3N0SWQiLCJrZXkiLCJyZXNpemVJbWciLCJpbWciLCJpbWdSZXNpemUiLCJkZWxldGVUYWciLCJpdGVtIiwiJHJlbW92ZSIsIiRpZCIsInBvc3RBcnJheSIsInNsdWdpZnkiLCJwb3N0RGF0ZSIsIkRhdGUiLCJnZXRUaW1lIiwibmV3VGFncyIsInByb3AiLCJ0aW1lc3RhbXAiLCJhcmNoaXZlUG9zdCIsImZpcmViYXNlIiwiZGF0YWJhc2UiLCJTZW5kRGF0YVNlcnZpY2UiLCIkdWliTW9kYWwiLCIkbG9nIiwib3JpZ2luYWxUYWdzIiwiY29weSIsInlvdXR1YmVJZCIsImNvbmZpcm1CbG9nRGVsZXRlIiwibW9kYWxJbnN0YW5jZSIsIm9wZW4iLCJhbmltYXRpb24iLCJiYWNrZHJvcCIsInNpemUiLCJQb3N0IiwicmVzdWx0IiwiaW5mbyIsInVwZGF0ZVBvc3QiLCIkc2F2ZSIsInJlbW92ZSIsIm1lc3NhZ2UiLCIkdWliTW9kYWxJbnN0YW5jZSIsInRhZyIsInByb21wdGVkIiwib2siLCJuZXdOYW1lIiwidXBkYXRlIiwiY2xvc2UiLCJjYW5jZWwiLCJkaXNtaXNzIiwiZGVsZXRlUHJvbXB0IiwiZGVsZXRlIiwicmVzcG9uc2UiLCJpIiwidGhpc1Bvc3RUYWdzIiwieWVzIiwibm8iLCJJbnN0YWdyYW1GYWN0b3J5IiwiVHdpdHRlckZhY3RvcnkiLCJsb2FkZWRJbnN0YSIsImxvYWRlZFR3aXR0ZXIiLCJwaG90b3MiLCJ0d2VldERhdGUiLCJhbGxUd2VldERhdGEiLCJjcmVhdGVkX2F0IiwidHdpdHRlclVzZXIiLCJ0d2l0dGVySGFuZGxlIiwic2NyZWVuX25hbWUiLCJ0d2VldElkIiwiaWRfc3RyIiwidHdlZXQiLCJ0d2VldEJvZHkiLCJmYXZvcml0ZXMiLCJyZXR3ZWV0cyIsImF1dGgiLCJhbGxUYWdzIiwibG9jYXRpb24iLCIkJHBhdGgiLCJwYXJzZVRpdGxlIiwidGl0bGVUb1VSTCIsImFsbFBvc3RzIiwicGFnZVVwIiwicGFyc2VJbnQiLCJwYWdlRG93biIsImZpcnN0IiwiZmluZEZpcnN0IiwibGFzdCIsInBvc3RzIiwic2xpY2UiLCJlZGl0UG9zdCIsImZ1bGxCbG9nIiwiaiIsImJsb2dLZXkiLCJwYXJhbXMiLCJ0aXRsZVBhcnNlZCIsInRoaXNUYWciLCJzZWxlY3RQb3N0cyIsInJlY2VudFBvc3RzIiwiQXJjaGl2ZVNlcnZpY2UiLCJ5ZWFycyIsIm5ld0Jsb2dQb3N0IiwiZWRpdFRhZyIsImVkaXRTaG93IiwiaW5kZXgiLCIkZmlyZWJhc2VBcnJheSIsInNob3dzIiwic2hvdyIsImRhdGVPYmoiLCJkYXRlIiwic2hvd3NSZWYiLCJzaG93c0FycmF5IiwidGhpc0RhdGUiLCJzaG93RGF0ZSIsInRoaXNVbml4Iiwib2JqZWN0Iiwic2hvd0xvY2F0aW9uIiwidmVudWUiLCJ2ZW51ZUxpbmsiLCJ0aWNrZXRMaW5rIiwiJHNlc3Npb25TdG9yYWdlIiwidyIsImNsaWVudFdpZHRoIiwiaCIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiaGVpZ2h0IiwibW9iaWxlQkciLCJtb2JpbGVXaWR0aCIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJwb3BVcCIsInF1ZXJ5U2VsZWN0b3IiLCJzY3JvbGxIZWlnaHQiLCJhcHBlbmRDaGlsZCIsIm92ZXJsYXkiLCJjbGFzc0xpc3QiLCJhZGQiLCJjbG9zZVBvcHVwIiwidG9TdG9yZSIsInRvZ2dsZSIsImZhZGUiLCJsb2dvdXQiLCIkc2lnbk91dCIsIndoaWNoUGFnZSIsInNlbGVjdGVkSXRlbSIsInNlbGVjdGVkIiwicHJvZHVjdHMiLCJzaG93UHJvZHVjdCIsInRvQ2hlY2tvdXQiLCJjb250aW51ZSIsInByb2R1Y3QiLCJpbWFnZXMiLCJjdXJyZW50QWN0aXZlU3JjIiwic2t1cyIsIm1haW5JbWciLCJzcmMiLCJpc0FjdGl2ZUltZyIsInRoaXMiLCJjaGFuZ2VBY3RpdmUiLCIkbG9jYWxTdG9yYWdlIiwiJHN0b3JhZ2UiLCJzaG93UGF0aCIsInBhdGhDb3VudCIsIm5nQ2FydCIsImNhcnRJdGVtcyIsImdldEl0ZW1zIiwic2hpcHBpbmciLCJjb3VudHJ5IiwiYmlsbGluZyIsIm1haWxpbmdMaXN0QWRkIiwic2hpcHBpbmdTYW1lQm9vbCIsInN1Y2Nlc3MiLCJjb3VudHJpZXMiLCJzdGF0ZXMiLCJwcm92aW5jZXMiLCJpc1NoaXBwaW5nU2FtZSIsInNoaXBwaW5nU2FtZSIsImNvdW50cnlDaGFuZ2UiLCJjb2RlIiwic2hpcHBpbmdUeXBlIiwic2hpcFJhdGVzIiwiZG9tZXN0aWMiLCJpbnRlcm5hdGlvbmFsIiwic3VibWl0Rm9ybSIsInNoaXAiLCJjb3B5SXRlbXMiLCJfZGF0YSIsImF0dHIiLCJiaWxsaW5nQWRkcmVzcyIsInJlcSIsIm1ldGhvZCIsIm9yZGVyIiwiY3VycmVuY3kiLCJpdGVtcyIsImFkZHJlc3MiLCJsaW5lMSIsImFkZHJlc3MxIiwibGluZTIiLCJhZGRyZXNzMiIsImNpdHkiLCJzdGF0ZVByb3ZpbmNlIiwic2hvcnQiLCJwb3N0YWxfY29kZSIsInBvc3RhbENvZGUiLCJtZXRhZGF0YSIsInRheFJhdGUiLCJnZXRUYXhSYXRlIiwic3RhdHVzIiwibWFpbGluZ0xpc3QiLCJhZGRyZXNzU3VibWl0Iiwib3JkZXJEYXRhIiwiJGV2YWxBc3luYyIsImVycm9yTWVzc2FnZSIsImxvY2FsU3RvcmFnZSIsImN1cnJlbnRXYVJhdGUiLCJwYXJzZWRUYXgiLCJwYXJzZUZsb2F0Iiwic2V0VGF4UmF0ZSIsInBvc3RhbCIsInRvdGFsUmF0ZSIsInNoaXBPcHRpb25zIiwic2hpcHBpbmdfbWV0aG9kcyIsInNhdmVkU2VsZWN0ZWRTaGlwIiwic2VsZWN0ZWRfc2hpcHBpbmdfbWV0aG9kIiwic2VsZWN0ZWRTaGlwIiwiJHdhdGNoIiwibmV3VmFsdWUiLCJvbGRWYWx1ZSIsInNjb3BlIiwic2V0U2hpcHBpbmciLCJhbW91bnQiLCJTdHJpcGUiLCJjYXJkIiwiY3JlYXRlVG9rZW4iLCJudW1iZXIiLCJjdmMiLCJleHAiLCJleHBpcnkiLCJhZGRyZXNzX2xpbmUxIiwiYWRkcmVzc19saW5lMiIsImFkZHJlc3NfY2l0eSIsImFkZHJlc3Nfc3RhdGUiLCJhZGRyZXNzX3ppcCIsImFkZHJlc3NfY291bnRyeSIsImhhbmRsZVN0cmlwZSIsInRva2VuIiwib3JkZXJJZCIsInBheW1lbnRTdWJtaXQiLCJ0b2tlbkRhdGEiLCJvcmRlckNvbXBsZXRlIiwidHlwZSIsInNoaXBTZXJ2aWNlIiwiY3JlYXRlQ2hhcmdlIiwiZW1wdHkiLCIkcmVzZXQiLCJkaXJlY3RpdmUiLCJmaWxlcmVhZCIsImxpbmsiLCJhdHRyaWJ1dGVzIiwiYmluZCIsImNoYW5nZUV2ZW50IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImxvYWRFdmVudCIsIiRhcHBseSIsInRhcmdldCIsInJlYWRBc0RhdGFVUkwiLCJmaWxlcyIsInRlbXBsYXRlIiwiY291bnRyeUNvZGUiLCJlcnIiLCJmYWN0b3J5IiwiJGZpcmViYXNlQXV0aCIsIiRxIiwiZGVmZXJyZWQiLCJkZWZlciIsInByb21pc2UiLCJwcm9kdWN0SWQiLCJzZXJ2aWNlIiwiY2FjaGUiLCJtc2ciLCJyZWplY3QiLCJvcmRlckJ5Q2hpbGQiLCJzdGFydEF0IiwiYmxvZ1JlZiIsInBvc3RSZWYiLCJ0aGlzUG9zdFJlZiIsImVxdWFsVG8iLCJ0YWdSZWYiLCIkZmlyZWJhc2VPYmplY3QiLCJ0YWdTaG93UmVmIiwieWVhclJlZiIsIm1vbnRocyIsIm1vbnRoUmVmIiwiYXJjaGl2ZVJlZiIsInNhdmVkRGF0YSIsInNldEl0ZW0iLCJ0b0pzb24iLCJmcm9tSnNvbiIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJ2aWRlb2lkIiwibWF0Y2giLCJiYXNlNjRNaW1lVHlwZSIsImVuY29kZWQiLCJtaW1lIiwiZ2V0QmFzZTY0SW1hZ2UiLCJkYXRhVVJMIiwiYmFzZTY0IiwicmVwbGFjZSIsImI2NHRvQmxvYiIsImI2NERhdGEiLCJjb250ZW50VHlwZSIsInNsaWNlU2l6ZSIsImJ5dGVDaGFyYWN0ZXJzIiwiYXRvYiIsImJ5dGVBcnJheXMiLCJvZmZzZXQiLCJieXRlTnVtYmVycyIsIkFycmF5IiwiY2hhckNvZGVBdCIsImJ5dGVBcnJheSIsIlVpbnQ4QXJyYXkiLCJibG9iIiwiQmxvYiIsImN1cnJlbnRQYWdlIiwiY2FsY0ZpcnN0Iiwic3BsaXQiLCJqb2luIiwidG9TdHJpbmciLCJ0b0xvd2VyQ2FzZSIsImxvYWRJTUciLCJJbWFnZSIsImFzcGVjdFJhdGlvIiwiY2FudmFzIiwicGVyY2VudENoYW5nZSIsImN0eCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJyZXNpemVkUmVzdWx0IiwidG9EYXRhVVJMIiwiY2FsbGJhY2siLCJuZXdJbWFnZSIsImJhc2U2NHJlc3VsdCIsImZpbGUiLCJwaG90b0lkIiwiTWF0aCIsInJhbmRvbSIsInN0b3JhZ2VSZWYiLCJzdG9yYWdlIiwidXBsb2FkVGFzayIsImNoaWxkIiwicHV0Iiwib24iLCJUYXNrRXZlbnQiLCJTVEFURV9DSEFOR0VEIiwic25hcHNob3QiLCJwcm9ncmVzcyIsImJ5dGVzVHJhbnNmZXJyZWQiLCJ0b3RhbEJ5dGVzIiwiVGFza1N0YXRlIiwiUEFVU0VEIiwiUlVOTklORyIsImRvd25sb2FkVVJMIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxXQUFBLE9BQUEsU0FBQUMsR0FBQSxNQUFBQSxHQUFBQyxtQkFDQUMsYUFBQSxPQUFBLFNBQUFGLEdBQUEsTUFBQUEsR0FBQUcsa0JBRUFDLFNBQUFDLE9BQUEsY0FBQSxlQUFBLG9CQUFBLFlBQUEsZUFBQSxXQUFBLGdCQUFBLFNBQUEsWUFBQSxrQkFBQSxZQUFBLHNCQUFBLGNBQUEscUJBQUEs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QUFwQixFQUFBaVcsR0FDQXZXLEVBQUFxQixVQUFBZixHQUFBbEIsS0FBQSxTQUFBb1gsR0FDQSxHQUFBckMsR0FBQW5VLEVBQUFpVSxlQUFBdUMsRUFDQXBiLFNBQUFDLElBQUEsV0FBQThZLEVBQ0EsSUFBQXNDLEdBQUF6VyxFQUFBb1UsZUFBQW9DLEdBQ0FFLEVBQUExVyxFQUFBd1UsVUFBQWlDLEVBQUF0QyxHQUNBdkcsR0FDQThHLFlBQUFQLEdBRUF3QyxHQUFBLEtBQUFDLEtBQUFDLFVBQUFsQixTQUFBLElBQ0FtQixFQUFBM1UsU0FBQTRVLFVBQUEvVixNQUNBZ1csRUFBQUYsRUFBQUcsTUFBQSxlQUFBTixHQUFBTyxJQUFBUixFQUFBOUksRUFDQW9KLEdBQUFHLEdBQUFoVixTQUFBNFUsUUFBQUssVUFBQUMsY0FDQSxTQUFBQyxHQUVBLEdBQUFDLEdBQUFELEVBQUFFLGlCQUFBRixFQUFBRyxXQUFBLEdBRUEsUUFEQXJjLFFBQUFDLElBQUEsYUFBQWtjLEVBQUEsVUFDQUQsRUFBQTNkLE9BQ0EsSUFBQXdJLFVBQUE0VSxRQUFBVyxVQUFBQyxPQUNBdmMsUUFBQUMsSUFBQSxtQkFDQSxNQUNBLEtBQUE4RyxVQUFBNFUsUUFBQVcsVUFBQUUsUUFDQXhjLFFBQUFDLElBQUEsdUJBR0EsU0FBQS9DLEdBQ0EsT0FBQUEsRUFBQTRULE1BQ0EsSUFBQSx1QkFDQSxLQUNBLEtBQUEsbUJBRUEsS0FDQSxLQUFBLHFCQUlBLFdBQ0E5USxRQUFBQyxJQUFBLGtCQUNBLElBQUF3YyxHQUFBYixFQUFBTSxTQUFBTyxXQUNBdEIsR0FBQS9WLEVBQUFrQixFQUFBbVcsRUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXV0aFdhaXQgPSBbXCJBdXRoXCIsIGZ1bmN0aW9uKEF1dGgpIHsgcmV0dXJuIEF1dGguJHdhaXRGb3JTaWduSW4oKTsgfV1cbnZhciBhdXRoUmVxdWlyZSA9IFtcIkF1dGhcIiwgZnVuY3Rpb24oQXV0aCkgeyByZXR1cm4gQXV0aC4kcmVxdWlyZVNpZ25JbigpOyB9XVxuXG5hbmd1bGFyLm1vZHVsZShcIlNpc3RlcnNBcHBcIiwgWydTaXN0ZXJzQ3RybHMnLCdTaXN0ZXJzRGlyZWN0aXZlcycsJ3VpLnJvdXRlcicsJ3VpLmJvb3RzdHJhcCcsJ2ZpcmViYXNlJywnYW5ndWxhck1vbWVudCcsJ25nQ2FydCcsJ25nU3RvcmFnZScsJ2FuZ3VsYXJQYXltZW50cycsJ25nQW5pbWF0ZScsJ3BpY2FyZHkuZm9udGF3ZXNvbWUnLCd0ZXh0QW5ndWxhcicsJ3VpLnJvdXRlci5tZXRhdGFncycsJ2FuZ3VsYXItcGFyYWxsYXgnXSlcblxuXG5cbi5ydW4oW1wiJHJvb3RTY29wZVwiLCBcIiRzdGF0ZVwiLFwiJGxvY2F0aW9uXCIsXCIkd2luZG93XCIsJ01ldGFUYWdzJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJHN0YXRlLCAkbG9jYXRpb24sICR3aW5kb3csTWV0YVRhZ3MpIHtcbiAgJHJvb3RTY29wZS5NZXRhVGFncyA9IE1ldGFUYWdzO1xuICAkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZUVycm9yXCIsIGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zLCBlcnJvcikge1xuICAgIC8vIFdlIGNhbiBjYXRjaCB0aGUgZXJyb3IgdGhyb3duIHdoZW4gdGhlICRyZXF1aXJlU2lnbkluIHByb21pc2UgaXMgcmVqZWN0ZWRcbiAgICAvLyBhbmQgcmVkaXJlY3QgdGhlIHVzZXIgYmFjayB0byB0aGUgaG9tZSBwYWdlXG4gICAgaWYgKGVycm9yID09PSBcIkFVVEhfUkVRVUlSRURcIikge1xuICAgICAgJHN0YXRlLmdvKFwibG9naW5cIik7XG4gICAgfVxuICB9KTtcbiAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN1Y2Nlc3MnLCBmdW5jdGlvbihldmVudCkge1xuICAgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID0gMDtcblxuICAgICAgICAgICAgICAgIGlmICghJHdpbmRvdy5nYSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuIFxuICAgICAgICAgICAgICAgICR3aW5kb3cuZ2EoJ3NlbmQnLCAncGFnZXZpZXcnLCB7IHBhZ2U6ICRsb2NhdGlvbi5wYXRoKCkgfSk7XG5cblxuICB9KTtcblxufV0pXG5cblxuXG5cbi5jb25maWcoWyckc3RhdGVQcm92aWRlcicsICckdXJsUm91dGVyUHJvdmlkZXInLCckbG9jYXRpb25Qcm92aWRlcicsJ1VJUm91dGVyTWV0YXRhZ3NQcm92aWRlcicsJyRwcm92aWRlJywgZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwkbG9jYXRpb25Qcm92aWRlciwgVUlSb3V0ZXJNZXRhdGFnc1Byb3ZpZGVyLCAkcHJvdmlkZSl7XG4gIFVJUm91dGVyTWV0YXRhZ3NQcm92aWRlclxuICAgICAgICAuc2V0RGVmYXVsdFRpdGxlKCdTSVNURVJTJylcbiAgICAgICAgLnNldERlZmF1bHREZXNjcmlwdGlvbignU2VhdHRsZSBkdW8uIFwiRHJpbmsgQ2hhbXBhZ25lXCIsIHRoZSBkZWJ1dCBhbGJ1bSwgY29taW5nIHNvb24hJylcbiAgICAgICAgLnNldFN0YXRpY1Byb3BlcnRpZXMoe1xuICAgICAgICAgICAgICAgICdvZzpzaXRlX25hbWUnOiAnU0lTVEVSUydcbiAgICAgICAgICAgIH0pXG4gICAgICAgIC5zZXRPR1VSTCh0cnVlKTtcblxuXG5cbiAgXG4gIFxuICBcbiAgXG4gICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcblxuICAkc3RhdGVQcm92aWRlclxuICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgdXJsOiAnLycsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMnLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU2VhdHRsZSBkdW8uIFwiRHJpbmsgQ2hhbXBhZ25lXCIsIHRoZSBkZWJ1dCBhbGJ1bSwgY29taW5nIHNvb24hJ1xuICAgICAgICAgICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ob21lLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdIb21lQ3RybCdcbiAgfSlcbiAgLnN0YXRlKCdhYm91dCcsIHtcbiAgICB1cmw6ICcvYWJvdXQnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Fib3V0Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdBYm91dEN0cmwnXG4gIH0pXG5cblxuICAuc3RhdGUoJ2Jsb2cnLCB7XG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9ibG9nLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdCbG9nTWFzdGVyQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIFwiQmxvZ1wiOiBmdW5jdGlvbihCbG9nUG9zdHMpe1xuICAgICAgICByZXR1cm4gQmxvZ1Bvc3RzKCkuJGxvYWRlZCgpO1xuICAgICAgfSAgICAgIFxuICAgIH1cbiAgfSlcblxuICAuc3RhdGUoJ2Jsb2ctbmV3Jywge1xuICAgIHVybDogJy9ibG9nL25ldycsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9uZXdCbG9nUG9zdC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnTmV3QmxvZ0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFJlcXVpcmUsXG4gICAgICBcIkFsbFRhZ3NcIjogZnVuY3Rpb24oQWxsVGFnc1NlcnZpY2Upe1xuICAgICAgICByZXR1cm4gQWxsVGFnc1NlcnZpY2UoKS4kbG9hZGVkKCk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuICAuc3RhdGUoJ2Jsb2ctZWRpdCcsIHtcbiAgICB1cmw6ICcvYmxvZy9lZGl0LzpzbHVnJyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2VkaXRCbG9nUG9zdC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnRWRpdEJsb2dDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhSZXF1aXJlLFxuICAgICAgXCJBbGxUYWdzXCI6IGZ1bmN0aW9uKEFsbFRhZ3NTZXJ2aWNlKXtcbiAgICAgICAgcmV0dXJuIEFsbFRhZ3NTZXJ2aWNlKCkuJGxvYWRlZCgpO1xuICAgICAgfSxcbiAgICAgIFwidGhpc1Bvc3RcIjogZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCBUaGlzUG9zdFNlcnZpY2Upe1xuICAgICAgICByZXR1cm4gVGhpc1Bvc3RTZXJ2aWNlKCRzdGF0ZVBhcmFtcy5zbHVnKS4kbG9hZGVkKCk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuICAuc3RhdGUoJ2Jsb2ctdGFncy1lZGl0Jywge1xuICAgIHVybDogJy9ibG9nL2VkaXRUYWdzLycsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9lZGl0VGFncy5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnRWRpdEJsb2dUYWdzQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoUmVxdWlyZSxcbiAgICAgIFwiQWxsVGFnc1wiOiBmdW5jdGlvbihBbGxUYWdzU2VydmljZSl7XG4gICAgICAgIHJldHVybiBBbGxUYWdzU2VydmljZSgpLiRsb2FkZWQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgLnN0YXRlKCdibG9nLm1haW4nLCB7XG4gICAgdXJsOiAnL2Jsb2cnLFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMgLSBCbG9nJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVXBkYXRlcywgbmV3cywgYW5kIGNvbW1lbnRhcnkgZnJvbSBTZWF0dGxlIGJhbmQgU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9ibG9nLWNvbnRlbnQuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0Jsb2dDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0XG4gICAgfVxuICB9KVxuICAgIC5zdGF0ZSgnYmxvZy5wYWdlJywge1xuICAgIHVybDogJy9ibG9nLzpwYWdlJyxcbiAgICBtZXRhVGFnczoge1xuICAgICAgICAgICAgdGl0bGU6ICdTSVNURVJTIC0gQmxvZycsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VwZGF0ZXMsIG5ld3MsIGFuZCBjb21tZW50YXJ5IGZyb20gU2VhdHRsZSBiYW5kIFNJU1RFUlMuJ1xuICAgICAgICB9LFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvYmxvZy1jb250ZW50Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdCbG9nQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCAgICAgXG4gICAgfVxuICB9KVxuXG4gICAgIC5zdGF0ZSgnYmxvZy5hcmNoaXZlJywge1xuICAgIHVybDogJy9ibG9nL2FyY2hpdmVzLzp5ZWFyLzptb250aCcsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnU0lTVEVSUyAtIEJsb2cnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVcGRhdGVzLCBuZXdzLCBhbmQgY29tbWVudGFyeSBmcm9tIFNlYXR0bGUgYmFuZCBTSVNURVJTLidcbiAgICAgICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2Jsb2ctY29udGVudC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQmxvZ0FyY2hpdmVDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0LFxuICAgICAgXCJCbG9nXCI6IGZ1bmN0aW9uKEJsb2dQb3N0cyl7XG4gICAgICAgIHJldHVybiBCbG9nUG9zdHMoKS4kbG9hZGVkKCk7XG4gICAgICB9LFxuICAgICAgXCJBcmNoaXZlXCI6IGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgQXJjaGl2ZVNob3dTZXJ2aWNlKXtcbiAgICAgICAgcmV0dXJuIEFyY2hpdmVTaG93U2VydmljZSgkc3RhdGVQYXJhbXMueWVhciwgJHN0YXRlUGFyYW1zLm1vbnRoKS4kbG9hZGVkKCk7XG4gICAgICB9ICAgICAgXG4gICAgfVxuICB9KVxuXG4gICAgLnN0YXRlKCdibG9nLmFyY2hpdmVQYWdlJywge1xuICAgICAgdXJsOiAnL2Jsb2cvYXJjaGl2ZXMvOnllYXIvOm1vbnRoLzpwYWdlJyxcbiAgICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMgLSBCbG9nJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVXBkYXRlcywgbmV3cywgYW5kIGNvbW1lbnRhcnkgZnJvbSBTZWF0dGxlIGJhbmQgU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2Jsb2ctY29udGVudC5odG1sJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdCbG9nQXJjaGl2ZUN0cmwnLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0LFxuICAgICAgICBcIkJsb2dcIjogZnVuY3Rpb24oQmxvZ1Bvc3RzKXtcbiAgICAgICAgICByZXR1cm4gQmxvZ1Bvc3RzKCkuJGxvYWRlZCgpO1xuICAgICAgICB9LFxuICAgICAgICBcIkFyY2hpdmVcIjogZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCBBcmNoaXZlU2hvd1NlcnZpY2Upe1xuICAgICAgICAgIHJldHVybiBBcmNoaXZlU2hvd1NlcnZpY2UoJHN0YXRlUGFyYW1zLnllYXIsICRzdGF0ZVBhcmFtcy5tb250aCkuJGxvYWRlZCgpO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLnN0YXRlKCdibG9nLnRhZ3MnLCB7XG4gICAgdXJsOiAnL2Jsb2cvdGFncy86dGFnTmFtZScsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnU0lTVEVSUyAtIEJsb2cnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVcGRhdGVzLCBuZXdzLCBhbmQgY29tbWVudGFyeSBmcm9tIFNlYXR0bGUgYmFuZCBTSVNURVJTLidcbiAgICAgICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2Jsb2ctY29udGVudC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQmxvZ1RhZ3NDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0LFxuICAgICAgXCJCbG9nXCI6IGZ1bmN0aW9uKEJsb2dQb3N0cyl7XG4gICAgICAgIHJldHVybiBCbG9nUG9zdHMoKS4kbG9hZGVkKCk7XG4gICAgICB9LFxuICAgICAgXCJUYWdzU2hvd1wiOiBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIFRhZ3NTaG93U2VydmljZSl7XG4gICAgICAgIHJldHVybiBUYWdzU2hvd1NlcnZpY2UoJHN0YXRlUGFyYW1zLnRhZ05hbWUpLiRsb2FkZWQoKTtcbiAgICAgIH0gICAgICBcbiAgICB9XG4gIH0pXG5cblxuXG4gIC5zdGF0ZSgnYmxvZy5zaG93Jywge1xuICAgIHVybDogJy9ibG9nL3Nob3cvOnNsdWcnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvYmxvZy1jb250ZW50Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdCbG9nU2hvd0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgICBcInRoaXNQb3N0XCI6IGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgVGhpc1Bvc3RTZXJ2aWNlKXsgICAgICAgIFxuICAgICAgICByZXR1cm4gVGhpc1Bvc3RTZXJ2aWNlKCRzdGF0ZVBhcmFtcy5zbHVnKS4kbG9hZGVkKCk7XG4gICAgICB9LFxuICAgICAgXCJCbG9nXCI6IGZ1bmN0aW9uKEJsb2dQb3N0cyl7XG4gICAgICAgIHJldHVybiBCbG9nUG9zdHMoKS4kbG9hZGVkKCk7XG4gICAgICB9ICAgICAgIFxuICAgIH0sXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiBmdW5jdGlvbih0aGlzUG9zdCl7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwid2hhdCBpcyBCbG9nPyBcIix0aGlzUG9zdCk7XG4gICAgICAgICAgICAgIHZhciB0aXRsZSA9IFwiU0lTVEVSUyAtIFwiICsgdGhpc1Bvc3RbMF0ucG9zdFRpdGxlO1xuICAgICAgICAgICAgICByZXR1cm4gdGl0bGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGZ1bmN0aW9uKHRoaXNQb3N0KXtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXNQb3N0WzBdLnBvc3RCb2R5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICB9KVxuICBcblxuXG4gIC5zdGF0ZSgnc2hvd3MnLCB7XG4gICAgdXJsOiAnL3Nob3dzJyxcbiAgICBtZXRhVGFnczoge1xuICAgICAgICAgICAgdGl0bGU6ICdTSVNURVJTIC0gU2hvd3MnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVcGNvbWluZyBzaG93cyBmb3IgU2VhdHRsZSBkdW8gU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc2hvd3Mvc2hvd3MuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1Nob3dzQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIGdldFNob3dzOiBmdW5jdGlvbihHZXRTaG93cyl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiYXBwIHJlc29sdmUgZW50ZXJlZFwiKTtcbiAgICAgICAgcmV0dXJuIEdldFNob3dzKCkuJGxvYWRlZCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAuc3RhdGUoJ3N0b3JlJywge1xuICAgIHVybDogJy9zdG9yZScsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnU0lTVEVSUyAtIFN0b3JlJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIG9mZmljaWFsIHN0b3JlIGZvciBTZWF0dGxlIGR1byBTSVNURVJTLidcbiAgICAgICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9zdG9yZS5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnU3RvcmVDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0LFxuICAgICAgXCJhbGxQcm9kdWN0c1wiOiBmdW5jdGlvbihQcm9kdWN0c1NlcnZpY2Upe1xuICAgICAgICByZXR1cm4gUHJvZHVjdHNTZXJ2aWNlLmFsbFByb2R1Y3RzKCk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIC5zdGF0ZSgnc3RvcmVDYXJ0Jywge1xuICAgIHVybDogJy9zdG9yZS9jYXJ0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9jYXJ0Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdTdG9yZUNhcnRDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0XG4gICAgfVxuICB9KVxuXG4gIC5zdGF0ZSgnc3RvcmVTaG93Jywge1xuICAgIHVybDogJy9zdG9yZS86aWQnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3N0b3JlL3N0b3JlU2hvdy5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnU3RvcmVTaG93Q3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIFwib25lUHJvZHVjdFwiOiBmdW5jdGlvbihQcm9kdWN0c1NlcnZpY2UsICRzdGF0ZVBhcmFtcyl7XG4gICAgICAgIHJldHVybiBQcm9kdWN0c1NlcnZpY2Uub25lUHJvZHVjdCgkc3RhdGVQYXJhbXMuaWQpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgLnN0YXRlKCdjaGVja291dCcsIHtcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9jaGVja291dFRlbXBsYXRlLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdDaGVja291dFRlbXBsYXRlQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICB9XG4gIH0pXG4gIC5zdGF0ZSgnY2hlY2tvdXQuYWRkcmVzcycsIHtcbiAgICB1cmw6ICcvc3RvcmUvY2hlY2tvdXQvYWRkcmVzcycsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc3RvcmUvY2hlY2tvdXRBZGRyZXNzLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdTdG9yZUFkZHJlc3NDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0XG4gICAgfVxuICB9KVxuICAuc3RhdGUoJ2NoZWNrb3V0LnBheW1lbnQnLCB7XG4gICAgdXJsOiAnL3N0b3JlL2NoZWNrb3V0L3BheW1lbnQnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3N0b3JlL2NoZWNrb3V0UGF5bWVudC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnU3RvcmVQYXltZW50Q3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIGN1cnJlbnRPcmRlcjogZnVuY3Rpb24oQ3VycmVudE9yZGVyU2VydmljZSl7XG4gICAgICAgIHJldHVybiBDdXJyZW50T3JkZXJTZXJ2aWNlLmdldCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAgLnN0YXRlKCdjaGVja291dC5jb25maXJtJywge1xuICAgIHVybDogJy9zdG9yZS9jaGVja291dC9jb25maXJtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9jaGVja291dENvbmZpcm0uaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1N0b3JlQ29uZmlybUN0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXRcbiAgICB9XG4gIH0pXG4gIFxuICBcbiAgLnN0YXRlKCdsb2dpbicsIHtcbiAgICB1cmw6ICcvbG9naW4nLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2xvZ2luLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdMb2dpbkN0cmwnXG4gIH0pXG5cbiAgXG4gICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxufV0pXG5cbi5maWx0ZXIoJ2N1dCcsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSwgZW5hYmxlLCB3b3Jkd2lzZSwgbWF4LCB0YWlsKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFuZ3VsYXIuZWxlbWVudCgnPGRpdi8+JykuaHRtbCh2YWx1ZSk7XG4gICAgY29uc29sZS5sb2coXCJzb3VyY2U6IFwiLHNvdXJjZSk7XG4gICAgdmFyIGxlbmd0aCA9IHNvdXJjZS50ZXh0KCkubGVuZ3RoO1xuICAgIGNvbnNvbGUubG9nKFwibGVuZ3RoOiBcIixsZW5ndGgpO1xuICAgIC8vIGlmICghcGxhaW5UZXh0KSByZXR1cm4gJyc7XG4gICAgLy8gaWYgKHBsYWluVGV4dCAmJiAhZW5hYmxlKSB7XG4gICAgLy8gICByZXR1cm4gdmFsdWU7XG4gICAgLy8gfSBlbHNlIGlmIChwbGFpblRleHQgJiYgZW5hYmxlKXtcbiAgICAvLyAgIG1heCA9IHBhcnNlSW50KG1heCwgMTApO1xuICAgIC8vICAgaWYgKCFtYXgpIHtcbiAgICAvLyAgICAgcmV0dXJuIHZhbHVlO1xuICAgIC8vICAgfVxuICAgIC8vICAgaWYgKHBsYWluVGV4dC5sZW5ndGggPD0gbWF4KXtcbiAgICAvLyAgICAgcmV0dXJuIHZhbHVlO1xuICAgIC8vICAgfSBcbiAgICAvLyAgIGVsZW1lbnRbMF0uaW5uZXJUZXh0ID0gcGxhaW5UZXh0LnN1YnN0cigwLCBtYXgpO1xuICAgIC8vICAgaWYgKHdvcmR3aXNlKSB7XG4gICAgLy8gICAgIHZhciBsYXN0c3BhY2UgPSBwbGFpblRleHQubGFzdEluZGV4T2YoJyAnKTtcbiAgICAvLyAgICAgaWYgKGxhc3RzcGFjZSAhPSAtMSkge1xuICAgIC8vICAgICAgIC8vQWxzbyByZW1vdmUgLiBhbmQgLCBzbyBpdHMgZ2l2ZXMgYSBjbGVhbmVyIHJlc3VsdC5cbiAgICAvLyAgICAgICBpZiAocGxhaW5UZXh0LmNoYXJBdChsYXN0c3BhY2UtMSkgPT0gJy4nIHx8IHZhbHVlLmNoYXJBdChsYXN0c3BhY2UtMSkgPT0gJywnKSB7XG4gICAgLy8gICAgICAgICBsYXN0c3BhY2UgPSBsYXN0c3BhY2UgLSAxO1xuICAgIC8vICAgICAgIH1cbiAgICAvLyAgICAgICBlbGVtZW50WzBdLmlubmVyVGV4dCA9IHZhbHVlLnN1YnN0cigwLCBsYXN0c3BhY2UpO1xuICAgIC8vICAgfVxuICAgIC8vIH1cbiAgICAgIFxuICAgIC8vIC8vICAgY29uc29sZS5sb2coXCJ2YWx1ZTogXCIsdmFsdWUpO1xuICAgIC8vIC8vICAgcmV0dXJuIGVsZW1lbnRbMF0ub3V0ZXJIVE1MICsgKHRhaWwgfHwgJ+KApicpO1xuICAgIC8vIH1cbiAgfTtcbn0pXG5cbi5maWx0ZXIoJ3RydXN0QXNSZXNvdXJjZVVybCcsIFsnJHNjZScsIGZ1bmN0aW9uKCRzY2UpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAkc2NlLnRydXN0QXNSZXNvdXJjZVVybCgnaHR0cDovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nK3ZhbCk7XG4gIH07XG59XSlcblxuXG4uZmlsdGVyKCdNb21lbnRGaWx0ZXInLCBbJ21vbWVudCcsIGZ1bmN0aW9uKG1vbWVudCl7XG4gIHJldHVybiBmdW5jdGlvbih2YWwpe1xuICAgIHJldHVybiAgbW9tZW50KHZhbCkuZm9ybWF0KCdkZGRkLCBNTU1NIERvLCBZWVlZJyk7XG4gIH1cbn1dKVxuXG4uZmlsdGVyKCd0b29PbGQnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50cykge1xuICAgIHZhciBjdXJyZW50RGF5ID0gbW9tZW50KCkudW5peCgpXG4gICAgdmFyIGZpbHRlcmVkID0gW107XG4gICAgYW5ndWxhci5mb3JFYWNoKGV2ZW50cywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIHZhciB0aGlzRXZlbnQgPSBldmVudC51bml4RGF0ZS8xMDAwO1xuICAgICAgaWYgKChjdXJyZW50RGF5IC0gdGhpc0V2ZW50KSA8PSA4NjQwMCkge1xuICAgICAgICBmaWx0ZXJlZC5wdXNoKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZmlsdGVyZWQ7XG4gIH07XG59KVxuXG4uZmlsdGVyKCdEZWxpdmVyeUVzdERhdGUnLCBbJ21vbWVudCcsIGZ1bmN0aW9uKG1vbWVudCl7XG4gIHJldHVybiBmdW5jdGlvbih2YWwpe1xuICAgIHJldHVybiAgbW9tZW50KHZhbCkuZm9ybWF0KCdkZGRkLCBNTU1NIERvJyk7XG4gIH1cbn1dKVxuXG4uZmlsdGVyKCd0aW1lQWdvJywgWydtb21lbnQnLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24odmFsKXtcbiAgICByZXR1cm4gbW9tZW50KHZhbCkuZnJvbU5vdygpO1xuICB9XG59XSlcblxuXG5cblxuLmZpbHRlcignY2VudHNUb0RvbGxhcnMnLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24odmFsKXtcbiAgICByZXR1cm4gIHZhbC8xMDA7XG4gIH1cbn0pO1xuXG5cblxuXG5cbiIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzQ3RybHMnLCBbJ1Npc3RlcnNTZXJ2aWNlcyddKVxuXG5cbi5jb250cm9sbGVyKCdNYWluQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyR0aW1lb3V0JywnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHRpbWVvdXQsJGh0dHApIHtcbiRzY29wZS4kb24oJ2xvYWRNYWluQ29udGFpbmVyJywgZnVuY3Rpb24gKGV2ZW50LCBkYXRhKSB7XG4gICAgaWYgKGRhdGEgPT09IFwibG9hZGVkXCIpe1xuICAgICAgJHNjb3BlLm1haW5Mb2FkZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUubWFpbkxvYWRlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSk7XG5cblxufV0pXG5cbi5jb250cm9sbGVyKCdIb21lQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyR0aW1lb3V0JywnJGh0dHAnLCdMb2FkZWRTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICR0aW1lb3V0LCRodHRwLExvYWRlZFNlcnZpY2UpIHtcbiAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYmEoMjQ3LCAyMzcsIDI0NSwgMCknO1xuICBtYWluLnN0eWxlLndpZHRoID0gJyc7XG4gIG1haW4uc3R5bGUucGFkZGluZyA9IFwiXCI7XG4gIFxuICAkc2NvcGUubG9hZGVkID0gTG9hZGVkU2VydmljZS5nZXQoKTtcbiAgdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gIGlmICghJHNjb3BlLmxvYWRlZCAmJiB3aWR0aCA+IDgwNil7IFxuICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICAgICAkc2NvcGUuZmFkZUhvbWUgPSB0cnVlO1xuICAgICAgTG9hZGVkU2VydmljZS5zZXQodHJ1ZSk7XG4gICAgfSwgMjUwMCk7XG4gIH0gZWxzZSB7XG4gICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICAgICAkc2NvcGUuZmFkZUhvbWUgPSB0cnVlO1xuICAgICAgTG9hZGVkU2VydmljZS5zZXQodHJ1ZSk7XG4gICAgfSwgMjUwMCk7XG4gIH0gXG5cblxuICAgICRzY29wZS5tYWlsY2hpbXBTdWJtaXQgPSBmdW5jdGlvbihmb3JtLCBlbWFpbCwgaXNOYXYpe1xuICAgIGlmKGZvcm0uJHZhbGlkKXtcbiAgICAgJHNjb3BlLmlzUG9wdXAgPSBmYWxzZTtcbiAgICB2YXIgdXJsID0gXCIvL3Npc3RlcnN0aGViYW5kLnVzMTQubGlzdC1tYW5hZ2UuY29tL3N1YnNjcmliZS9wb3N0LWpzb24/dT1iYzM4NzIwYjBiY2M3YTMyNjQxYmI1NzJjJmFtcDtpZD0yNDJmNGFkYzg5JkVNQUlMPVwiK2VtYWlsK1wiJmM9SlNPTl9DQUxMQkFDS1wiXG4gICAgJGh0dHAuanNvbnAodXJsKS50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKXtcbiAgICAgICRzY29wZS51c2VyID0ge307XG4gICAgICAgIGlmKGlzTmF2KXtcbiAgICAgICAgJHNjb3BlLm1haWxDb25maXJtID0gdHJ1ZTtcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgJHNjb3BlLm1haWxDb25maXJtID0gZmFsc2U7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIm1haWwgY29uZmlybSByZXNldFwiKTtcbiAgICAgICAgICB9LDcwMDApO1xuICAgICAgICB9XG4gICAgfSwgZnVuY3Rpb24gZXJyb3IocmVzKXtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgfSk7XG5cbiAgICB9XG4gIH1cblxuXG59XSlcblxuLmNvbnRyb2xsZXIoJ0Fib3V0Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCl7XG4gIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDEpJztcbiAgbWFpbi5zdHlsZS5wYWRkaW5nID0gXCIwXCI7XG4gIG1haW4uc3R5bGUud2lkdGggPSAnMTAwJSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG59KTsgIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCdBdXRoJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsIEF1dGgpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5zdWJtaXR0ZWQgPSBmYWxzZTtcbiAgJHNjb3BlLmxvZ2dlZCA9IGZhbHNlO1xuXG5cbiAgQXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgIGlmIChmaXJlYmFzZVVzZXIpIHtcbiAgICAgICRzY29wZS5sb2dnZWQgPSB0cnVlO1xuICAgICAgJHN0YXRlLmdvKCdob21lJyk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgbG9nZ2VkIGluLlwiKTtcbiAgICB9XG4gIH0pO1xuXG5cbiAgLy8gYmluZCBmb3JtIGRhdGEgdG8gdXNlciBtb2RlbFxuICAkc2NvcGUudXNlciA9IHt9XG5cblxuICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbigpIHtcbiAgICAkc2NvcGUuc3VibWl0dGVkID0gdHJ1ZTtcbiAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gbnVsbDtcbiAgICBBdXRoLiRzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCgkc2NvcGUudXNlci5lbWFpbCwgJHNjb3BlLnVzZXIucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gZmlyZWJhc2VVc2VyO1xuICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiQXV0aGVudGljYXRpb24gZmFpbGVkOlwiLCBlcnJvcik7XG4gICAgfSlcbiAgfTtcblxuXG59XSkgIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cblxuXG4uY29udHJvbGxlcignTmV3QmxvZ0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCckaHR0cCcsJ0F1dGgnLCdCbG9nUG9zdHMnLCdBbGxUYWdzJywnSGVscGVyU2VydmljZScsJ1N1Ym1pdEltYWdlJywnbW9tZW50JywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCBBdXRoLCBCbG9nUG9zdHMsIEFsbFRhZ3MsIEhlbHBlclNlcnZpY2UsIFN1Ym1pdEltYWdlLCBtb21lbnQpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5CbG9nUG9zdHMgPSBCbG9nUG9zdHMoKTtcbiAgJHNjb3BlLnRhZ3MgPSBBbGxUYWdzO1xuICAkc2NvcGUuY2hlY2tlZFRhZ3MgPSB7fTtcbiAgJHNjb3BlLmRhdGEgPSB7fTtcblxuICAkc2NvcGUucmVzZXRNZWRpYSA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLmRhdGEueW91dHViZSA9IFwiXCI7XG4gICAgJHNjb3BlLmRhdGEuaW1hZ2UgPSBcIlwiO1xuICB9XG5cbiAgJHNjb3BlLnN1Ym1pdCA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJzdWJtaXQgY2xpY2tlZFwiKTtcbiAgICBjb25zb2xlLmxvZyhcIndoYXQgaXMgcG9zdD8gXCIsJHNjb3BlLnBvc3QpO1xuICAgIGlmICgkc2NvcGUuZGF0YS5tZWRpYVNlbGVjdCA9PT0gJ2ltYWdlJyl7XG4gICAgICBTdWJtaXRJbWFnZSgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgJHNjb3BlLmRhdGEuaW1hZ2UsIGFkZFBvc3QpO1xuICAgIH0gZWxzZSBpZiAoJHNjb3BlLmRhdGEubWVkaWFTZWxlY3QgPT09ICd5b3V0dWJlJyl7XG4gICAgICAkc2NvcGUuZGF0YS55b3V0dWJlID0gSGVscGVyU2VydmljZS5wYXJzZVlvdVR1YmUoJHNjb3BlLmRhdGEueW91dHViZSk7XG4gICAgICBhZGRQb3N0KCRzY29wZS5wb3N0LCAkc2NvcGUuQmxvZ1Bvc3RzLCBudWxsLCAkc2NvcGUuZGF0YS55b3V0dWJlKTtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUuYWRkVGFnID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUudGFncy4kYWRkKHtcbiAgICAgIFwibmFtZVwiOiAkc2NvcGUuZGF0YS5uZXdUYWdcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlZil7XG4gICAgICAkc2NvcGUucG9zdElkID0gcmVmLmtleTtcbiAgICAgIGNvbnNvbGUubG9nKFwid2hhdCBpcyBwb3N0IGlkPyBcIixyZWYua2V5KTtcbiAgICAgICRzY29wZS5kYXRhLm5ld1RhZyA9IFwiXCI7XG4gICAgfSk7XG4gIH1cblxuICAkc2NvcGUucmVzaXplSW1nID0gZnVuY3Rpb24oaW1nKXtcbiAgICB2YXIgcmVzaXplID0gSGVscGVyU2VydmljZS5pbWdSZXNpemUoaW1nKTtcbiAgfVxuXG4gICRzY29wZS5kZWxldGVUYWcgPSBmdW5jdGlvbihpdGVtKXtcbiAgICAkc2NvcGUudGFncy4kcmVtb3ZlKGl0ZW0pLnRoZW4oZnVuY3Rpb24ocmVmKSB7XG4gIHJlZi5rZXkgPT09IGl0ZW0uJGlkOyAvLyB0cnVlXG59KTtcbiAgfVxuXG4gIHZhciBhZGRQb3N0ID0gZnVuY3Rpb24ocG9zdCwgcG9zdEFycmF5LCBpbWcsIHlvdXR1YmUpe1xuICAgIHZhciBzbHVnID0gSGVscGVyU2VydmljZS5zbHVnaWZ5KHBvc3QudGl0bGUpO1xuICAgIHZhciBwb3N0RGF0ZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIHZhciB5ZWFyID0gbW9tZW50KHBvc3REYXRlKS5mb3JtYXQoXCJZWVlZXCIpO1xuICAgIHZhciBtb250aCA9IG1vbWVudChwb3N0RGF0ZSkuZm9ybWF0KFwiTU1NTVwiKTtcblxuICAgIHZhciBuZXdUYWdzID0ge307XG4gICAgZm9yICh2YXIgcHJvcCBpbiAkc2NvcGUuY2hlY2tlZFRhZ3Mpe1xuICAgICAgICBuZXdUYWdzW3Byb3BdID0gJHNjb3BlLmNoZWNrZWRUYWdzW3Byb3BdO1xuICAgIH1cbiAgICB2YXIgdGhpc1Bvc3QgPSB7XG4gICAgICBwb3N0VGl0bGU6IHBvc3QudGl0bGUsXG4gICAgICBzbHVnOiBzbHVnLFxuICAgICAgcG9zdEJvZHk6IHBvc3QucG9zdEJvZHksXG4gICAgICB5b3V0dWJlOiB5b3V0dWJlID8geW91dHViZSA6IG51bGwsXG4gICAgICBpbWc6IGltZyA/IGltZyA6IG51bGwsXG4gICAgICB0YWdzOiBuZXdUYWdzLFxuICAgICAgdGltZXN0YW1wOiBwb3N0RGF0ZSAgIFxuICAgIH07XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJ0aGlzUG9zdDogXCIsdGhpc1Bvc3QpO1xuICAgIHBvc3RBcnJheS4kYWRkKHRoaXNQb3N0KS50aGVuKGZ1bmN0aW9uKHJlZil7XG4gICAgICB2YXIga2V5ID0gcmVmLmtleTtcbiAgICAgIHZhciBhcmNoaXZlUG9zdCA9IHtcbiAgICAgICAga2V5OiBrZXlcbiAgICAgIH1cbiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdhcmNoaXZlcy8nICsgeWVhciArICcvJyArIG1vbnRoICsgJy8nICsga2V5KS5zZXQoYXJjaGl2ZVBvc3QpO1xuICAgICAgLy8gZm9yIChwcm9wIGluIG5ld1RhZ3Mpe1xuICAgICAgLy8gICBpZiAobmV3VGFnc1twcm9wXSl7XG4gICAgICAvLyAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0YWdzLycgKyBwcm9wICsgJy9wb3N0cy8nICsga2V5KS5zZXQoYXJjaGl2ZVBvc3QpOyBcbiAgICAgIC8vICAgfVxuICAgICAgLy8gfVxuICAgICAgJHN0YXRlLmdvKCdibG9nLm1haW4nKTtcbiAgICB9KTtcbiAgfVxufV0pXG5cbi5jb250cm9sbGVyKCdFZGl0QmxvZ0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCAnJHRpbWVvdXQnLCAnJHN0YXRlUGFyYW1zJywnU2VuZERhdGFTZXJ2aWNlJywnQWxsVGFncycsJ3RoaXNQb3N0JywnSGVscGVyU2VydmljZScsJ1N1Ym1pdEltYWdlJywnJHVpYk1vZGFsJywnJGxvZycsJ0Jsb2dQb3N0cycsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCwgJHN0YXRlUGFyYW1zLCBTZW5kRGF0YVNlcnZpY2UsIEFsbFRhZ3MsIHRoaXNQb3N0LCBIZWxwZXJTZXJ2aWNlLCBTdWJtaXRJbWFnZSwgJHVpYk1vZGFsLCAkbG9nLCBCbG9nUG9zdHMpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5kYXRhID0ge307XG4gICRzY29wZS5wb3N0QXJyYXkgPSB0aGlzUG9zdDtcbiAgJHNjb3BlLnBvc3QgPSB0aGlzUG9zdFswXTtcbiAgJHNjb3BlLm9yaWdpbmFsVGFncyA9IGFuZ3VsYXIuY29weSgkc2NvcGUucG9zdC50YWdzKTtcbiAgJHNjb3BlLnRhZ3MgPSBBbGxUYWdzO1xuXG4gIGlmICgkc2NvcGUucG9zdC55b3V0dWJlKXtcbiAgICBjb25zb2xlLmxvZygkc2NvcGUucG9zdC55b3V0dWJlKTtcbiAgICB2YXIgeW91dHViZUlkID0gJHNjb3BlLnBvc3QueW91dHViZVxuICAgICRzY29wZS5kYXRhLnlvdXR1YmUgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9XCIrIHlvdXR1YmVJZDtcbiAgfVxuXG4gIFxuXG4gICRzY29wZS5jb25maXJtQmxvZ0RlbGV0ZSA9IGZ1bmN0aW9uKHBvc3QpIHtcbiAgICB2YXIgbW9kYWxJbnN0YW5jZSA9ICR1aWJNb2RhbC5vcGVuKHtcbiAgICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9kZWxldGVCbG9nQ29uZmlybU1vZGFsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ0RlbGV0ZUJsb2dDb25maXJtQ3RybCcsXG4gICAgICBzaXplOiAnc20nLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBcIlBvc3RcIjogcG9zdFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgbW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgIGNvbnNvbGUubG9nKFwic3VibWl0dGVkIG1vZGFsXCIpO1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG4gICAgfSk7XG4gIH07IFxuXG5cbiAgJHNjb3BlLmFkZFRhZyA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLnRhZ3MuJGFkZCh7XG4gICAgICBcIm5hbWVcIjogJHNjb3BlLmRhdGEubmV3VGFnXG4gICAgfSkudGhlbihmdW5jdGlvbihyZWYpe1xuICAgICAgJHNjb3BlLnBvc3RJZCA9IHJlZi5rZXk7XG4gICAgICBjb25zb2xlLmxvZyhcIndoYXQgaXMgcG9zdCBpZD8gXCIscmVmLmtleSk7XG4gICAgICAkc2NvcGUuZGF0YS5uZXdUYWcgPSBcIlwiO1xuICAgIH0pO1xuICB9XG5cbiAgJHNjb3BlLmRlbGV0ZVRhZyA9IGZ1bmN0aW9uKGl0ZW0pe1xuICAgICRzY29wZS50YWdzLiRyZW1vdmUoaXRlbSkudGhlbihmdW5jdGlvbihyZWYpIHtcbiAgcmVmLmtleSA9PT0gaXRlbS4kaWQ7IC8vIHRydWVcbn0pO1xuICB9XG5cblxuICAkc2NvcGUucmVzZXRNZWRpYSA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLmRhdGEueW91dHViZSA9IFwiXCI7XG4gICAgJHNjb3BlLmRhdGEuaW1hZ2UgPSBcIlwiO1xuICB9XG5cbiAgJHNjb3BlLnN1Ym1pdCA9IGZ1bmN0aW9uKCl7XG4gICAgaWYgKCRzY29wZS5kYXRhLm1lZGlhU2VsZWN0ID09PSAnaW1hZ2UnICYmICRzY29wZS5kYXRhLmltYWdlKXtcbiAgICAgIFN1Ym1pdEltYWdlKCRzY29wZS5wb3N0LCAkc2NvcGUucG9zdEFycmF5LCAkc2NvcGUuZGF0YS5pbWFnZSwgdXBkYXRlUG9zdCk7XG4gICAgfSBlbHNlIGlmICgkc2NvcGUuZGF0YS5tZWRpYVNlbGVjdCA9PT0gJ2ltYWdlJyAmJiAhJHNjb3BlLmRhdGEuaW1hZ2Upe1xuICAgICAgdXBkYXRlUG9zdCgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgJHNjb3BlLnBvc3QuaW1nLCBudWxsKTtcbiAgICB9IGVsc2UgaWYgKCRzY29wZS5kYXRhLm1lZGlhU2VsZWN0ID09PSAneW91dHViZScpe1xuICAgICAgJHNjb3BlLmRhdGEueW91dHViZSA9IEhlbHBlclNlcnZpY2UucGFyc2VZb3VUdWJlKCRzY29wZS5kYXRhLnlvdXR1YmUpO1xuICAgICAgdXBkYXRlUG9zdCgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgbnVsbCwgJHNjb3BlLmRhdGEueW91dHViZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIHVwZGF0ZVBvc3QgPSBmdW5jdGlvbihwb3N0LCBwb3N0QXJyYXksIGltZywgeW91dHViZSl7XG4gICAgdmFyIHNsdWcgPSBIZWxwZXJTZXJ2aWNlLnNsdWdpZnkocG9zdC5wb3N0VGl0bGUpO1xuICAgIGNvbnNvbGUubG9nKHNsdWcpO1xuICAgIHZhciB5ZWFyID0gbW9tZW50KHBvc3QudGltZXN0YW1wKS5mb3JtYXQoXCJZWVlZXCIpO1xuICAgIHZhciBtb250aCA9IG1vbWVudChwb3N0LnRpbWVzdGFtcCkuZm9ybWF0KFwiTU1NTVwiKTtcbiAgICB2YXIgbmV3VGFncyA9IHt9O1xuICAgIGZvciAodmFyIHByb3AgaW4gcG9zdC50YWdzKXtcbiAgICAgIG5ld1RhZ3NbcHJvcF0gPSBwb3N0LnRhZ3NbcHJvcF07XG4gICAgfVxuICAgIHBvc3Quc2x1ZyA9IHNsdWc7XG4gICAgcG9zdC50YWdzID0gbmV3VGFncztcbiAgICBwb3N0LnlvdXR1YmUgPSB5b3V0dWJlID8geW91dHViZSA6IG51bGw7XG4gICAgcG9zdC5pbWcgPSBpbWcgPyBpbWcgOiBudWxsO1xuICAgIHZhciB0aGlzUG9zdCA9IHtcbiAgICAgIHBvc3RUaXRsZTogcG9zdC5wb3N0VGl0bGUsXG4gICAgICBzbHVnOiBzbHVnLFxuICAgICAgcG9zdEJvZHk6IHBvc3QucG9zdEJvZHksXG4gICAgICB5b3V0dWJlOiBwb3N0LnlvdXR1YmUsXG4gICAgICBpbWc6IHBvc3QuaW1nLFxuICAgICAgdGFnczogbmV3VGFncyxcbiAgICAgIHRpbWVzdGFtcDogcG9zdC50aW1lc3RhbXAgICBcbiAgICB9O1xuICAgICRzY29wZS5wb3N0QXJyYXkuJHNhdmUocG9zdCkudGhlbihmdW5jdGlvbihyZWYpIHtcbiAgICAgIHZhciBrZXkgPSByZWYua2V5O1xuICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBrZXkpLnJlbW92ZSgpO1xuICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBrZXkpLnNldCh0aGlzUG9zdCk7XG4gICAgICBmb3IgKHByb3AgaW4gJHNjb3BlLm9yaWdpbmFsVGFncyl7XG4gICAgICAgIGlmICgkc2NvcGUub3JpZ2luYWxUYWdzW3Byb3BdID09PSB0cnVlKXtcbiAgICAgICAgICB2YXIgdXJsID0gJ3RhZ3MvJyArIHByb3AgKyAnL3Bvc3RzLycgKyBrZXk7XG4gICAgICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYodXJsKS5yZW1vdmUoKS50aGVuKGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZW1vdmUgZmFpbGVkOiBcIiArIGVycm9yLm1lc3NhZ2UpXG4gICAgICAgICAgfSk7IFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHByb3AgKyBcIiBub3QgYSB0YWcgZm9yIG9sZCBlZGl0IVwiKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgIGZvciAocHJvcCBpbiB0aGlzUG9zdC50YWdzKXtcbiAgICAgICAgaWYgKHRoaXNQb3N0LnRhZ3NbcHJvcF0gPT09IHRydWUpe1xuICAgICAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0YWdzLycgKyBwcm9wICsgJy9wb3N0cy8nICsga2V5KS5zZXQodGhpc1Bvc3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHByb3AgKyBcIiBub3QgYSB0YWcgZm9yIG5ldyBlZGl0IVwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sMTAwKVxuXG4gICAgICAkc3RhdGUuZ28oJ2Jsb2cubWFpbicpO1xuICAgIH0pO1xuICB9IFxufV0pICBcblxuXG4uY29udHJvbGxlcignRWRpdEJsb2dUYWdzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR1aWJNb2RhbEluc3RhbmNlLCB0YWcsIEJsb2cpIHtcbiAgJHNjb3BlLnByb21wdGVkID0gZmFsc2U7XG4gICRzY29wZS50YWcgPSBhbmd1bGFyLmNvcHkodGFnKTtcbiAgY29uc29sZS5sb2codGFnKTtcbiAgJHNjb3BlLm9rID0gZnVuY3Rpb24gKHRhZykge1xuICAgIHZhciBuZXdOYW1lID0ge1xuICAgICAgbmFtZTogJHNjb3BlLnRhZy5uYW1lXG4gICAgfTtcbiAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignL3RhZ3MvJyskc2NvcGUudGFnLiRpZCkudXBkYXRlKG5ld05hbWUpO1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gIH07XG5cbiAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgfTtcblxuICAkc2NvcGUuZGVsZXRlUHJvbXB0ID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUucHJvbXB0ZWQgPSB0cnVlO1xuICB9XG5cbiAgJHNjb3BlLmRlbGV0ZSA9IGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICBpZiAocmVzcG9uc2UgPT09IFwibm9cIil7XG4gICAgICAkc2NvcGUucHJvbXB0ZWQgPSBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlID09PSBcInllc1wiKXtcbiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCcvdGFncy8nKyRzY29wZS50YWcuJGlkKS5yZW1vdmUoKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQmxvZy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciB0aGlzUG9zdFRhZ3MgPSBCbG9nW2ldLnRhZ3M7XG4gICAgICAgIGlmICh0aGlzUG9zdFRhZ3NbJHNjb3BlLnRhZy4kaWRdID09PSB0cnVlKXtcbiAgICAgICAgICB0aGlzUG9zdFRhZ3NbJHNjb3BlLnRhZy4kaWRdID0gbnVsbDtcbiAgICAgICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignL2Jsb2dfcG9zdHMvJytCbG9nW2ldLiRpZCtcIi90YWdzXCIpLnVwZGF0ZSh0aGlzUG9zdFRhZ3MpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgJHVpYk1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcbiAgICB9IFxuICB9XG5cbn0pXG5cblxuLmNvbnRyb2xsZXIoJ0RlbGV0ZUJsb2dDb25maXJtQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR1aWJNb2RhbEluc3RhbmNlLCBQb3N0LCBtb21lbnQsICRsb2NhdGlvbikge1xuY29uc29sZS5sb2coUG9zdCk7XG5cbiRzY29wZS55ZXMgPSBmdW5jdGlvbigpe1xuICB2YXIgeWVhciA9IG1vbWVudChQb3N0LnRpbWVzdGFtcCkuZm9ybWF0KFwiWVlZWVwiKTtcbiAgdmFyIG1vbnRoID0gbW9tZW50KFBvc3QudGltZXN0YW1wKS5mb3JtYXQoXCJNTU1NXCIpO1xuICBjb25zb2xlLmxvZyhtb250aCArIFwiIG9mIFwiK3llYXIpO1xuICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYmxvZ19wb3N0cy8nK1Bvc3QuJGlkKS5yZW1vdmUoKTtcbiAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBQb3N0LiRpZCkucmVtb3ZlKCk7XG4gICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gICRsb2NhdGlvbi51cmwoJy9ibG9nJyk7XG59XG5cbiRzY29wZS5ubyA9IGZ1bmN0aW9uKCl7XG4gICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbn1cbiAgXG59KSIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzQ3RybHMnKVxuXG5cblxuLmNvbnRyb2xsZXIoJ0Jsb2dNYXN0ZXJDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJywnJGh0dHAnLCckdGltZW91dCcsJyRsb2NhdGlvbicsJyRzdGF0ZVBhcmFtcycsJ0F1dGgnLCdCbG9nJywnSGVscGVyU2VydmljZScsJ0luc3RhZ3JhbUZhY3RvcnknLCdBbGxUYWdzU2VydmljZScsJ1R3aXR0ZXJGYWN0b3J5JywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc3RhdGVQYXJhbXMsIEF1dGgsIEJsb2csIEhlbHBlclNlcnZpY2UsIEluc3RhZ3JhbUZhY3RvcnksIEFsbFRhZ3NTZXJ2aWNlLCBUd2l0dGVyRmFjdG9yeSl7XG4gICRzY29wZS5sb2FkZWRJbnN0YSA9IGZhbHNlO1xuICAkc2NvcGUubG9hZGVkVHdpdHRlciA9IGZhbHNlO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuIFxuICBJbnN0YWdyYW1GYWN0b3J5LnRoZW4oZnVuY3Rpb24oZGF0YSl7XG4gICAgJHNjb3BlLnBob3RvcyA9IGRhdGEuZGF0YTtcbiAgICAkc2NvcGUubG9hZGVkSW5zdGEgPSB0cnVlO1xuICAgIGlmICgkc2NvcGUubG9hZGVkVHdpdHRlcil7XG4gICAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0pXG4gIFR3aXR0ZXJGYWN0b3J5LnRoZW4oZnVuY3Rpb24oZGF0YSl7XG4gICBcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAkc2NvcGUudHdlZXREYXRlID0gZGF0YS5hbGxUd2VldERhdGEuY3JlYXRlZF9hdDtcbiAgICAkc2NvcGUudHdpdHRlclVzZXIgPSBkYXRhLmFsbFR3ZWV0RGF0YS51c2VyLm5hbWU7XG4gICAgJHNjb3BlLnR3aXR0ZXJIYW5kbGUgPSBkYXRhLmFsbFR3ZWV0RGF0YS51c2VyLnNjcmVlbl9uYW1lO1xuICAgICRzY29wZS50d2VldElkID0gZGF0YS5hbGxUd2VldERhdGEuaWRfc3RyO1xuICAgICRzY29wZS50d2VldCA9IGRhdGEudHdlZXRCb2R5O1xuICAgICRzY29wZS5mYXZvcml0ZXMgPSBkYXRhLmZhdm9yaXRlcztcbiAgICAkc2NvcGUucmV0d2VldHMgPSBkYXRhLnJldHdlZXRzO1xuICAgICRzY29wZS5sb2FkZWRUd2l0dGVyID0gdHJ1ZTtcbiAgICBpZiAoJHNjb3BlLmxvYWRlZEluc3RhKXtcbiAgICAgICRzY29wZS5sb2FkZWQgPSB0cnVlO1xuICAgIH1cbiAgfSlcbiAgJHNjb3BlLmVuYWJsZSA9IHRydWU7XG4gICRzY29wZS5hdXRoID0gQXV0aDtcbiAgJHNjb3BlLmF1dGguJG9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbihmaXJlYmFzZVVzZXIpIHtcbiAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gZmlyZWJhc2VVc2VyO1xuXG4gIH0pO1xufV0pXG5cblxuXG5cbi5jb250cm9sbGVyKCdCbG9nQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyRodHRwJywnJHRpbWVvdXQnLCckbG9jYXRpb24nLCckc3RhdGVQYXJhbXMnLCdBdXRoJywnQmxvZycsJ0hlbHBlclNlcnZpY2UnLCdJbnN0YWdyYW1GYWN0b3J5JywnQWxsVGFnc1NlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGh0dHAsICR0aW1lb3V0LCAkbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgQXV0aCwgQmxvZywgSGVscGVyU2VydmljZSwgSW5zdGFncmFtRmFjdG9yeSwgQWxsVGFnc1NlcnZpY2Upe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcbiAgbWFpbi5zdHlsZS53aWR0aCA9ICcnO1xuICBtYWluLnN0eWxlLnBhZGRpbmcgPSAnJztcbiAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgJHNjb3BlLmFsbFRhZ3MgPSBBbGxUYWdzU2VydmljZSgpO1xuXG4gICRzY29wZS5sb2NhdGlvbiA9ICRsb2NhdGlvbi4kJHBhdGg7XG4gIC8vIGNvbnNvbGUubG9nKFwibG9jYXRpb246IFwiLCRzY29wZS5sb2NhdGlvbik7XG4gIFxuICAvLyAkc2NvcGUucGhvdG9zID0gSW5zdGFncmFtLmRhdGE7XG4gIEluc3RhZ3JhbUZhY3RvcnkudGhlbihmdW5jdGlvbihkYXRhKXtcbiAgICAvLyBjb25zb2xlLmxvZyhcIndoYXQgaXMgZGF0YT8gXCIsZGF0YSk7XG4gICAgJHNjb3BlLnBob3RvcyA9IGRhdGEuZGF0YTtcbiAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTtcbiAgfSlcbiAgJHNjb3BlLmVuYWJsZSA9IHRydWU7XG4gICRzY29wZS5wYXJzZVRpdGxlID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMO1xuXG4gIC8vICRzY29wZS5hdXRoID0gQXV0aDtcbiAgLy8gJHNjb3BlLmF1dGguJG9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbihmaXJlYmFzZVVzZXIpIHtcbiAgLy8gICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gZmlyZWJhc2VVc2VyO1xuXG4gIC8vIH0pO1xuICAkc2NvcGUuYWxsUG9zdHMgPSBCbG9nO1xuICAkc2NvcGUucGFnZSA9ICRzdGF0ZVBhcmFtcy5wYWdlIHx8IDA7XG4gICRzY29wZS5wYWdlVXAgPSAnL2Jsb2cvJyArIChwYXJzZUludCgkc2NvcGUucGFnZSkgKyAxKTtcbiAgJHNjb3BlLnBhZ2VEb3duID0gJy9ibG9nLycgKyBIZWxwZXJTZXJ2aWNlLnBhZ2VEb3duKCRzY29wZS5wYWdlKTtcbiAgJHNjb3BlLmxlbmd0aCA9IEJsb2cubGVuZ3RoO1xuICAkc2NvcGUuZmlyc3QgPSBIZWxwZXJTZXJ2aWNlLmZpbmRGaXJzdCgkc2NvcGUubGVuZ3RoLCAkc2NvcGUucGFnZSk7XG5cblxuICAkc2NvcGUubGFzdCA9ICRzY29wZS5sZW5ndGggLSAoNCAqICRzY29wZS5wYWdlKTtcbiAgJHNjb3BlLnBvc3RzID0gQmxvZy5zbGljZSgkc2NvcGUuZmlyc3QsICRzY29wZS5sYXN0KTtcblxuICBcblxuICAkc2NvcGUuZWRpdFBvc3QgPSBmdW5jdGlvbihzbHVnKXsgXG4gICAgJGxvY2F0aW9uLnVybCgnL2Jsb2cvZWRpdC8nK3NsdWcpO1xuICB9XG5cbiAgXG5cbn1dKVxuXG5cbi5jb250cm9sbGVyKCdCbG9nQXJjaGl2ZUN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCckdGltZW91dCcsJyRzdGF0ZVBhcmFtcycsJyRsb2NhdGlvbicsICdCbG9nJywnQXJjaGl2ZScsJ0F1dGgnLCdIZWxwZXJTZXJ2aWNlJywnQWxsVGFnc1NlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHRpbWVvdXQsICRzdGF0ZVBhcmFtcywgJGxvY2F0aW9uLCBCbG9nLCBBcmNoaXZlLCBBdXRoLCBIZWxwZXJTZXJ2aWNlLCBBbGxUYWdzU2VydmljZSl7XG4gICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ25vdExvYWRlZCcpO1xuICAgJHNjb3BlLmxvY2F0aW9uID0gJGxvY2F0aW9uLiQkcGF0aDtcbiAgJHNjb3BlLmFsbFRhZ3MgPSBBbGxUYWdzU2VydmljZSgpO1xuICAkc2NvcGUuZW5hYmxlID0gdHJ1ZTtcbiAgLy8gJHNjb3BlLnBob3RvcyA9IEluc3RhZ3JhbS5kYXRhO1xuICAkc2NvcGUuZnVsbEJsb2cgPSBCbG9nO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQXJjaGl2ZS5sZW5ndGg7IGkrKyl7XG4gICAgdmFyIGtleSA9IEFyY2hpdmVbaV0uJGlkO1xuICAgIGZvciAodmFyIGogPSAwOyBqIDwgQmxvZy5sZW5ndGg7IGorKyl7XG4gICAgICB2YXIgYmxvZ0tleSA9IEJsb2dbal0uJGlkO1xuICAgICAgaWYgKGtleSA9PT0gYmxvZ0tleSl7XG4gICAgICAgIHJlc3VsdC5wdXNoKEJsb2dbal0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgJHNjb3BlLmFsbFBvc3RzID0gcmVzdWx0OyBcbiAgJHNjb3BlLnBhcmFtcyA9ICRzdGF0ZVBhcmFtcztcblxuXG4gICRzY29wZS5wYXJzZVRpdGxlID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMO1xuXG5cbiAgJHNjb3BlLmF1dGggPSBBdXRoO1xuICAkc2NvcGUuYXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgICRzY29wZS5maXJlYmFzZVVzZXIgPSBmaXJlYmFzZVVzZXI7XG5cbiAgfSk7XG4gICRzY29wZS5wYWdlID0gJHN0YXRlUGFyYW1zLnBhZ2UgfHwgMDtcbiAgJHNjb3BlLnBhZ2VVcCA9ICcvYmxvZy9hcmNoaXZlcy8nICsgJHN0YXRlUGFyYW1zLnllYXIgKyAnLycgKyAkc3RhdGVQYXJhbXMubW9udGggKyAnLycgKyAocGFyc2VJbnQoJHNjb3BlLnBhZ2UpICsgMSk7XG4gICRzY29wZS5wYWdlRG93biA9ICcvYmxvZy9hcmNoaXZlcy8nICsgJHN0YXRlUGFyYW1zLnllYXIgKyAnLycgKyAkc3RhdGVQYXJhbXMubW9udGggKyAnLycgKyBIZWxwZXJTZXJ2aWNlLnBhZ2VEb3duKCRzY29wZS5wYWdlKTtcbiAgJHNjb3BlLmxlbmd0aCA9ICRzY29wZS5hbGxQb3N0cy5sZW5ndGg7XG4gICRzY29wZS5maXJzdCA9IEhlbHBlclNlcnZpY2UuZmluZEZpcnN0KCRzY29wZS5sZW5ndGgsICRzY29wZS5wYWdlKTtcblxuXG4gICRzY29wZS5sYXN0ID0gJHNjb3BlLmxlbmd0aCAtICg0ICogJHNjb3BlLnBhZ2UpO1xuICAvLyBjb25zb2xlLmxvZyhcIkxhc3Q6IFwiLCRzY29wZS5sYXN0KTtcbiAgJHNjb3BlLnBvc3RzID0gJHNjb3BlLmFsbFBvc3RzLnNsaWNlKCRzY29wZS5maXJzdCwgJHNjb3BlLmxhc3QpO1xuICAvLyBjb25zb2xlLmxvZygkc2NvcGUucG9zdHMpO1xuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTsgICAgXG4gICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7XG4gIH0pXG5cbiAgJHNjb3BlLmVkaXRQb3N0ID0gZnVuY3Rpb24ocG9zdCl7XG4gICAgdmFyIHRpdGxlUGFyc2VkID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMKHBvc3QucG9zdFRpdGxlKTtcbiAgICAkbG9jYXRpb24udXJsKCcvYmxvZy9lZGl0LycrdGl0bGVQYXJzZWQpO1xuICB9XG59XSkgXG5cblxuLmNvbnRyb2xsZXIoJ0Jsb2dUYWdzQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyRzdGF0ZVBhcmFtcycsJyRsb2NhdGlvbicsICckdGltZW91dCcsJ0Jsb2cnLCdUYWdzU2hvdycsJ0F1dGgnLCdIZWxwZXJTZXJ2aWNlJywnQWxsVGFnc1NlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHN0YXRlUGFyYW1zLCAkbG9jYXRpb24sICR0aW1lb3V0LCBCbG9nLCBUYWdzU2hvdywgQXV0aCwgSGVscGVyU2VydmljZSwgQWxsVGFnc1NlcnZpY2Upe1xuICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdub3RMb2FkZWQnKTtcbiAgICRzY29wZS5sb2NhdGlvbiA9ICRsb2NhdGlvbi4kJHBhdGg7XG4gICRzY29wZS5hbGxUYWdzID0gQWxsVGFnc1NlcnZpY2UoKTtcbiAgJHNjb3BlLmVuYWJsZSA9IHRydWU7XG4gICRzY29wZS50YWdOYW1lID0gVGFnc1Nob3dbMF0ubmFtZTtcbiAgdmFyIHRoaXNUYWcgPSBUYWdzU2hvd1swXS4kaWQ7XG4gIHZhciBzZWxlY3RQb3N0cyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IEJsb2cubGVuZ3RoOyBpKyspe1xuICAgIHZhciB0aGlzUG9zdFRhZ3MgPSBCbG9nW2ldLnRhZ3M7XG4gICAgaWYgKHRoaXNQb3N0VGFnc1t0aGlzVGFnXSl7XG4gICAgICBzZWxlY3RQb3N0cy5wdXNoKEJsb2dbaV0pO1xuICAgIH1cbiAgfTtcblxuXG5cblxuXG5cblxuICBcbiAgLy8gdmFyIGxlbmd0aCA9IDA7XG4gIC8vIHZhciBpO1xuICAvLyBmb3IgKGkgaW4gYWxsUG9zdHMpIHtcbiAgLy8gICBpZiAoYWxsUG9zdHMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgLy8gICAgICAgbGVuZ3RoKys7XG4gIC8vICAgICAgIHNlbGVjdFBvc3RzLnB1c2goYWxsUG9zdHNbaV0pO1xuICAvLyAgIH1cbiAgLy8gfVxuICAvLyAkc2NvcGUucGFyc2VUaXRsZSA9IEhlbHBlclNlcnZpY2UudGl0bGVUb1VSTDtcblxuXG5cbiAgJHNjb3BlLmF1dGggPSBBdXRoO1xuICAkc2NvcGUuYXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgICRzY29wZS5maXJlYmFzZVVzZXIgPSBmaXJlYmFzZVVzZXI7XG5cbiAgfSk7XG4gICRzY29wZS5wYWdlID0gJHN0YXRlUGFyYW1zLnBhZ2UgfHwgMDtcbiAgJHNjb3BlLnBhZ2VVcCA9ICcvYmxvZy90YWdzLycgKyAkc3RhdGVQYXJhbXMudGFnTmFtZSAgKyAnLycgKyAocGFyc2VJbnQoJHNjb3BlLnBhZ2UpICsgMSk7XG4gICRzY29wZS5wYWdlRG93biA9ICcvYmxvZy90YWdzLycgKyAkc3RhdGVQYXJhbXMudGFnTmFtZSArICcvJyArIEhlbHBlclNlcnZpY2UucGFnZURvd24oJHNjb3BlLnBhZ2UpO1xuICAkc2NvcGUubGVuZ3RoID0gbGVuZ3RoO1xuICAkc2NvcGUuZmlyc3QgPSBIZWxwZXJTZXJ2aWNlLmZpbmRGaXJzdCgkc2NvcGUubGVuZ3RoLCAkc2NvcGUucGFnZSk7XG5cbiAgJHNjb3BlLmxhc3QgPSAkc2NvcGUubGVuZ3RoIC0gKDQgKiAkc2NvcGUucGFnZSk7XG4gIGNvbnNvbGUubG9nKFwiTGFzdDogXCIsJHNjb3BlLmxhc3QpO1xuICAkc2NvcGUucG9zdHMgPSBzZWxlY3RQb3N0cy5zbGljZSgkc2NvcGUuZmlyc3QsICRzY29wZS5sYXN0KTtcbiAgY29uc29sZS5sb2coJHNjb3BlLnBvc3RzKTtcblxuICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7ICAgXG4gIH0pXG5cbiAgJHNjb3BlLmVkaXRQb3N0ID0gZnVuY3Rpb24ocG9zdCl7XG4gICAgdmFyIHRpdGxlUGFyc2VkID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMKHBvc3QucG9zdFRpdGxlKTtcbiAgICAkbG9jYXRpb24udXJsKCcvYmxvZy9lZGl0LycrdGl0bGVQYXJzZWQpO1xuICB9XG59XSkgXG5cblxuLmNvbnRyb2xsZXIoJ0Jsb2dTaG93Q3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyRzdGF0ZVBhcmFtcycsJyRsb2NhdGlvbicsJyR0aW1lb3V0JywndGhpc1Bvc3QnLCdCbG9nJywnQWxsVGFnc1NlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHN0YXRlUGFyYW1zLCAkbG9jYXRpb24sICR0aW1lb3V0LCB0aGlzUG9zdCwgQmxvZywgQWxsVGFnc1NlcnZpY2Upe1xuICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbm90TG9hZGVkJyk7XG4gJHNjb3BlLmxvY2F0aW9uID0gJGxvY2F0aW9uLiQkcGF0aDtcbiAkc2NvcGUuYWxsVGFncyA9IEFsbFRhZ3NTZXJ2aWNlKCk7XG4gJHNjb3BlLmVuYWJsZSA9IGZhbHNlO1xuICRzY29wZS5yZWNlbnRQb3N0cyA9IEJsb2c7XG4gY29uc29sZS5sb2coJHNjb3BlLnJlY2VudFBvc3RzKTtcbiAvLyAkc2NvcGUucGhvdG9zID0gSW5zdGFncmFtLmRhdGE7IFxuICRzY29wZS5wb3N0cyA9IHRoaXNQb3N0O1xuICRzY29wZS5hbGxQb3N0cyA9IHRoaXNQb3N0O1xuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTsgIFxuICAgICRzY29wZS5sb2FkZWQgPSB0cnVlO1xuICB9KVxufV0pICBcblxuXG4uY29udHJvbGxlcignQmxvZ1NpZGViYXJDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJywnJHN0YXRlUGFyYW1zJywnJHRpbWVvdXQnLCdBcmNoaXZlU2VydmljZScsJ0FsbFRhZ3NTZXJ2aWNlJywnQmxvZ1Bvc3RzJywnSGVscGVyU2VydmljZScsJyR1aWJNb2RhbCcsJyRsb2cnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHN0YXRlUGFyYW1zLCR0aW1lb3V0LCBBcmNoaXZlU2VydmljZSwgQWxsVGFnc1NlcnZpY2UsIEJsb2dQb3N0cywgSGVscGVyU2VydmljZSwgJHVpYk1vZGFsLCAkbG9nKXtcbiBcbiAgJHNjb3BlLnJlY2VudFBvc3RzID0gQmxvZ1Bvc3RzKCk7XG4gICRzY29wZS5wYXJzZVRpdGxlID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMO1xuICAkc2NvcGUueWVhcnMgPSBBcmNoaXZlU2VydmljZS55ZWFycygpO1xuICAkc2NvcGUueWVhcnMuJGxvYWRlZCgpLnRoZW4oZnVuY3Rpb24oKXtcbiAgfSlcblxuICAkc2NvcGUuYWxsVGFncyA9IEFsbFRhZ3NTZXJ2aWNlKCk7XG5cbiAgJHNjb3BlLm5ld0Jsb2dQb3N0ID0gZnVuY3Rpb24oKXtcbiAgICAkc3RhdGUuZ28oXCJibG9nLW5ld1wiKTtcbiAgfVxuXG4gICAgJHNjb3BlLmVkaXRUYWcgPSBmdW5jdGlvbih0YWcpIHtcbiAgICAvLyBjb25zb2xlLmxvZyh3aGljaFBhZ2UpO1xuICAgIC8vIGNvbnNvbGUubG9nKGluZGV4KTtcbiAgICB2YXIgbW9kYWxJbnN0YW5jZSA9ICR1aWJNb2RhbC5vcGVuKHtcbiAgICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9lZGl0VGFnc01vZGFsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ0VkaXRCbG9nVGFnc0N0cmwnLFxuICAgICAgc2l6ZTogJ2xnJyxcbiAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgXCJCbG9nXCI6IGZ1bmN0aW9uKEJsb2dQb3N0cyl7XG4gICAgICAgIHJldHVybiBCbG9nUG9zdHMoKS4kbG9hZGVkKCk7XG4gICAgICAgIH0sICAgXG4gICAgICAgIHRhZzogdGFnXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgY29uc29sZS5sb2coXCJzdWJtaXR0ZWQgbW9kYWxcIik7XG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgJGxvZy5pbmZvKCdNb2RhbCBkaXNtaXNzZWQgYXQ6ICcgKyBuZXcgRGF0ZSgpKTtcbiAgICB9KTtcbiAgfTsgXG5cbn1dKTsiLCJhbmd1bGFyLm1vZHVsZSgnU2lzdGVyc0N0cmxzJylcblxuXG4uY29udHJvbGxlcignZWRpdE1vZGFsQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR1aWJNb2RhbEluc3RhbmNlLCBlZGl0U2hvdywgaW5kZXgsICRmaXJlYmFzZUFycmF5KSB7XG4gICRzY29wZS5zaG93cyA9IGVkaXRTaG93O1xuICAkc2NvcGUuc2hvdyA9IGVkaXRTaG93W2luZGV4XTtcblxuICBjb25zb2xlLmxvZyhcImluZGV4IGlzIFwiLGluZGV4KTtcbiAgJHNjb3BlLmRhdGVPYmogPSBuZXcgRGF0ZSgkc2NvcGUuc2hvdy51bml4ICogMTAwMCk7XG4gIGNvbnNvbGUubG9nKCRzY29wZS5kYXRlT2JqKTtcblxuXG5cbiAgJHNjb3BlLm9rID0gZnVuY3Rpb24gKCkge1xuICAgICRzY29wZS5zaG93LmRhdGUgPSBtb21lbnQoJHNjb3BlLmRhdGVPYmopLmZvcm1hdCgnZGRkLCBNTU1NIERvJyk7XG4gICAgJHNjb3BlLnNob3cudW5peCA9ICRzY29wZS5kYXRlT2JqLmdldFRpbWUoKSAvIDEwMDA7XG4gICAgJHNjb3BlLnNob3dzLiRzYXZlKCRzY29wZS5zaG93KS50aGVuKGZ1bmN0aW9uKHJlZikge1xuICAgICAgY29uc29sZS5sb2coXCJzdWNjZXNzXCIpO1xuICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVycm9yOlwiLCBlcnJvcik7XG4gICAgfSk7XG4gICAgJHVpYk1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcbiAgfTtcblxuICAkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICB9O1xuXG4gICRzY29wZS5kZWxldGUgPSBmdW5jdGlvbigpe1xuICAgICRzY29wZS5zaG93cy4kcmVtb3ZlKCRzY29wZS5zaG93KS50aGVuKGZ1bmN0aW9uKHJlZil7XG4gICAgICBjb25zb2xlLmxvZyhcInN1Y2Nlc3NmdWwgZGVsZXRlOiBcIixyZWYpO1xuICAgIH0sIGZ1bmN0aW9uKGVycm9yKXtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLGVycm9yKVxuICAgIH0pO1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gIH1cblxufSlcblxuXG4uY29udHJvbGxlcignbmV3TW9kYWxDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJHVpYk1vZGFsSW5zdGFuY2UsICRmaXJlYmFzZUFycmF5KSB7XG5cbiAgJHNjb3BlLnNob3cgPSB7fTtcbiAgdmFyIHNob3dzUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3Nob3dzJyk7XG4gICRzY29wZS5zaG93c0FycmF5ID0gJGZpcmViYXNlQXJyYXkoc2hvd3NSZWYpO1xuXG4gICRzY29wZS5vayA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhpc0RhdGUgPSBtb21lbnQoJHNjb3BlLnNob3cuc2hvd0RhdGUpLmZvcm1hdCgnZGQsIE1NTU0gRG8nKTtcbiAgICB2YXIgdGhpc1VuaXggPSAkc2NvcGUuc2hvdy5zaG93RGF0ZS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgIGNvbnNvbGUubG9nKHRoaXNEYXRlKTtcbiAgICB2YXIgb2JqZWN0ID0ge1xuICAgICAgXCJkYXRlXCI6IHRoaXNEYXRlLFxuICAgICAgXCJ1bml4XCI6IHRoaXNVbml4LFxuICAgICAgXCJsb2NhdGlvblwiOiAkc2NvcGUuc2hvdy5zaG93TG9jYXRpb24sXG4gICAgICBcInZlbnVlXCI6ICRzY29wZS5zaG93LnZlbnVlLFxuICAgICAgXCJ2ZW51ZUxpbmtcIjogJHNjb3BlLnNob3cudmVudWVMaW5rIHx8IFwiXCIsXG4gICAgICBcInRpY2tldExpbmtcIjogJHNjb3BlLnNob3cudGlja2V0TGluayB8fCBcIlwiXG4gICAgfVxuICAgIGNvbnNvbGUubG9nKG9iamVjdCk7XG4gICAgJHNjb3BlLnNob3dzQXJyYXkuJGFkZChvYmplY3QpO1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gIH07XG5cbiAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgfTtcbn0pXG5cblxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnU2lzdGVyc0N0cmxzJylcblxuXG4uY29udHJvbGxlcignTmF2Q3RybCcsIFsnJHNjb3BlJywnJHRpbWVvdXQnLCckbG9nJywnJHVpYk1vZGFsJywnJGh0dHAnLCdBdXRoJywnJHN0YXRlJywnJHNlc3Npb25TdG9yYWdlJywnJGxvY2F0aW9uJywnJHdpbmRvdycsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQsJGxvZywgJHVpYk1vZGFsLCAkaHR0cCwgQXV0aCwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2UsJGxvY2F0aW9uLCAkd2luZG93KXtcbiAgLy8gJHNjb3BlLnNlc3Npb25TdG9yYWdlID0gJHNlc3Npb25TdG9yYWdlO1xuICAvLyBpZiAoISRzY29wZS5zZXNzaW9uU3RvcmFnZS5oYXNoKXtcbiAgLy8gICAkc2NvcGUuc2Vzc2lvblN0b3JhZ2UuaGFzaCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO1xuICAvLyB9IGVsc2Uge1xuICAvLyAgIGNvbnNvbGUubG9nKFwiYWxyZWFkeSBhIHNlc3Npb24gaGFzaFwiKTtcbiAgLy8gfVxuICAvLyBjb25zb2xlLmxvZyhcIldoYXQgaXMgc2Vzc2lvbiBzdG9yYWdlPyBcIiwkc2NvcGUuc2Vzc2lvblN0b3JhZ2UpO1xuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcbiAgfSk7XG5cblxuXG4gICRzY29wZS51c2VyID0ge307XG4gICRzY29wZS5tYWlsQ29uZmlybSA9IGZhbHNlO1xuICB2YXIgdyA9IHdpbmRvdy5pbm5lcldpZHRoIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCB8fCBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoO1xuICB2YXIgaCA9IHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IHx8IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0O1xuICAkc2NvcGUuaGVpZ2h0ID0gaDtcblxuICB2YXIgbW9iaWxlQkcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vYmlsZS1iYWNrZ3JvdW5kLWRpdlwiKTtcbiAgaWYgKHcgPCA5MDApe1xuICBtb2JpbGVCRy5zdHlsZS5oZWlnaHQgPSBoICsgXCJweFwiO1xuICB9IGVsc2Uge1xuICBtb2JpbGVCRy5zdHlsZS5oZWlnaHQgPSAwICsgXCJweFwiOyBcbiAgfVxuICAvLyBjb25zb2xlLmxvZyhcImlubmVyIHdpZHRoOiBcIix3aWR0aCk7XG4gIGlmICghJHNjb3BlLmxvYWRlZCAmJiB3ID4gODA2KXsgXG4gICAgJHNjb3BlLm1vYmlsZVdpZHRoID0gZmFsc2U7XG4gIH0gZWxzZSB7XG4gICAgICRzY29wZS5tb2JpbGVXaWR0aCA9IHRydWU7XG4gIH0gXG5cblxuXG5cbiAgXG5cbiAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAvLyBPVkVSTEFZIENSRUFUSU9OXG4gICBcbiAgICAgIGlmICh3ID49IDY3OCl7XG4gICAgICBpZiAoJHNjb3BlLmZpcmViYXNlVXNlciA9PT0gbnVsbCAmJiAkbG9jYXRpb24uJCRwYXRoICE9PSBcIi9sb2dpblwiKXtcbiAgICAgICAgY29uc29sZS5sb2coXCJlbnRlcmluZyBwb3B1cFwiKTtcbiAgICAgICAgXG4gICAgICAgIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJvdmVybGF5TWFpbFwiKSl7XG4gICAgICAgICAgXG4gICAgICAgICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgZGl2LmlkID0gXCJvdmVybGF5TWFpbFwiO1xuICAgICAgICAgIGRpdi5jbGFzc05hbWUgPSBcIm92ZXJsYXktc3RhcnRcIjtcbiAgICAgICAgICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gICAgICAgICAgdmFyIHBvcFVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3AtdXBcIik7XG4gICAgICAgICAgY29uc29sZS5sb2coYm9keS5zY3JvbGxIZWlnaHQpO1xuICAgICAgICAgIGRpdi5zdHlsZS5oZWlnaHQgPSBib2R5LnNjcm9sbEhlaWdodCArIFwicHhcIjtcbiAgICAgICAgICBwb3BVcC5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgICAgIHZhciBvdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNvdmVybGF5TWFpbFwiKTtcbiAgICAgICAgICBvdmVybGF5LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdmFyIHNjcm9sbFRvcCA9ICR3aW5kb3cucGFnZVlPZmZzZXQ7XG4gICAgICAgIC8vIHZhciBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNvdmVybGF5LWNvbnRlbnRcIik7XG4gICAgICAgIC8vIGNvbnRlbnQuc3R5bGUudG9wID0gc2Nyb2xsVG9wICsgXCJweFwiO1xuICAgICAgICAkc2NvcGUuaXNQb3B1cCA9IHRydWU7XG4gICAgICB9XG4gICAgfTtcbiAgfSw2MDAwKVxuICAgIFxuXG4gICRzY29wZS5jbG9zZVBvcHVwID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUuaXNQb3B1cCA9IGZhbHNlO1xuICB9XG4gICAgXG4gICBcbiAgXG4gICRzY29wZS50b1N0b3JlID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUuaXNQb3B1cCA9IGZhbHNlO1xuICAgICRzdGF0ZS5nbyhcInN0b3JlXCIpO1xuICB9XG5cblxuXG5cbiAgJHNjb3BlLnRvZ2dsZSA9IHRydWU7XG4gIHZhciB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gIGlmICh3aWR0aCA+IDgwNil7XG4gICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICAgIH0sIDEwMCk7XG4gIH0gZWxzZSB7XG4gICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICB9XG59XSlcblxuLmNvbnRyb2xsZXIoJ0Zvb3RlckN0cmwnLCBbJyRzY29wZScsJyR0aW1lb3V0JywnJGxvZycsJyR1aWJNb2RhbCcsJyRodHRwJywnQXV0aCcsJyRzdGF0ZScsJyRzZXNzaW9uU3RvcmFnZScsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQsJGxvZywgJHVpYk1vZGFsLCAkaHR0cCwgQXV0aCwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2Upe1xuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcbiAgfSk7XG4gIFxuICAkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKXtcbiAgICAvLyBjb25zb2xlLmxvZyhcImNsaWNrZWQgbG9nIG91dFwiKTtcbiAgICBBdXRoLiRzaWduT3V0KCk7XG4gIH07XG5cbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24oKXtcbiAgICAvLyBjb25zb2xlLmxvZyhcImNsaWNrZWQgbG9nIGluXCIpO1xuICAgICRzdGF0ZS5nbygnbG9naW4nKTsgIFxuICB9XG5cblxuXG5cbiAgdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gIGlmICh3aWR0aCA+IDgwNil7XG4gICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICAgIH0sIDEwMCk7XG4gIH0gZWxzZSB7XG4gICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICB9XG59XSlcblxuXG5cblxuXG4uY29udHJvbGxlcignTWFpbE1vZGFsQ3RybCcsIFsnJHNjb3BlJywnJHRpbWVvdXQnLCckdWliTW9kYWwnLCckdWliTW9kYWxJbnN0YW5jZScsJyRodHRwJywnQXV0aCcsJyRzdGF0ZScsJyRzZXNzaW9uU3RvcmFnZScsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQsJHVpYk1vZGFsLCR1aWJNb2RhbEluc3RhbmNlLCAkaHR0cCwgQXV0aCwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2Upe1xuICAkc2NvcGUuY2xvc2UgPSBmdW5jdGlvbigpe1xuICAgIC8vIGNvbnNvbGUubG9nKCR1aWJNb2RhbEluc3RhbmNlKVxuICAgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICB9XG5cblxufV0pIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cbi5jb250cm9sbGVyKCdTaG93c0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCdjdXJyZW50QXV0aCcsJyR1aWJNb2RhbCcsJyRsb2cnLCckZmlyZWJhc2VBcnJheScsJ21vbWVudCcsJ0F1dGgnLCdnZXRTaG93cycsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBjdXJyZW50QXV0aCwgJHVpYk1vZGFsLCRsb2csICRmaXJlYmFzZUFycmF5LCBtb21lbnQsIEF1dGgsIGdldFNob3dzKXtcbnZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xuICBtYWluLnN0eWxlLndpZHRoID0gJyc7XG4gIG1haW4uc3R5bGUucGFkZGluZyA9ICcnO1xuJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgJHNjb3BlLnNob3dzID0gZ2V0U2hvd3M7XG5cbiAgJHNjb3BlLmF1dGggPSBBdXRoO1xuICAkc2NvcGUuYXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgICRzY29wZS5maXJlYmFzZVVzZXIgPSBmaXJlYmFzZVVzZXI7XG4gICAgLy8gY29uc29sZS5sb2coXCJmaXJlYmFzZSB1c2VyIGlzIFwiLCRzY29wZS5maXJlYmFzZVVzZXIpO1xuICB9KTtcblxuXG4gICRzY29wZS5vcGVuID0gZnVuY3Rpb24od2hpY2hQYWdlLCBpbmRleCkge1xuICAgIC8vIGNvbnNvbGUubG9nKHdoaWNoUGFnZSk7XG4gICAgLy8gY29uc29sZS5sb2coaW5kZXgpO1xuICAgIHZhciBtb2RhbEluc3RhbmNlID0gJHVpYk1vZGFsLm9wZW4oe1xuICAgICAgYW5pbWF0aW9uOiB0cnVlLFxuICAgICAgYmFja2Ryb3A6IHRydWUsXG4gICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zaG93cy8nK3doaWNoUGFnZSsnU2hvd01vZGFsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogd2hpY2hQYWdlKydNb2RhbEN0cmwnLFxuICAgICAgc2l6ZTogJ2xnJyxcbiAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgZWRpdFNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gJHNjb3BlLnNob3dzO1xuICAgICAgICB9LFxuICAgICAgICBpbmRleDogaW5kZXhcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24gKHNlbGVjdGVkSXRlbSkge1xuICAgICAgJHNjb3BlLnNlbGVjdGVkID0gc2VsZWN0ZWRJdGVtO1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG4gICAgfSk7XG4gIH07IFxuXG59XSkgIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cblxuLmNvbnRyb2xsZXIoJ1N0b3JlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkaHR0cCwgJHRpbWVvdXQsICRsb2NhdGlvbiwgJHNlc3Npb25TdG9yYWdlLCBhbGxQcm9kdWN0cywgUHJvZHVjdHNTZXJ2aWNlKXtcbiAgICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xuICAgIG1haW4uc3R5bGUud2lkdGggPSAnJztcbiAgICBtYWluLnN0eWxlLnBhZGRpbmcgPSAnJztcbiAgICAkc2NvcGUubG9hZGVkID0gZmFsc2U7XG4gICAgJHNjb3BlLnByb2R1Y3RzID0gYWxsUHJvZHVjdHM7XG5cblxuICAgIFxuICAgICRzY29wZS5zaG93UHJvZHVjdCA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgICRzdGF0ZS5nbygnc3RvcmVTaG93Jywge2lkOmlkfSk7XG4gICAgfVxuXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7IFxuICAgIH0pXG4gXG59KVxuXG4uY29udHJvbGxlcignU3RvcmVDYXJ0Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkaHR0cCwgJHRpbWVvdXQsICRsb2NhdGlvbiwgJHNlc3Npb25TdG9yYWdlKXtcbiAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG5cbiAgJHNjb3BlLnRvQ2hlY2tvdXQgPSBmdW5jdGlvbigpe1xuICAgICRsb2NhdGlvbi51cmwoJy9zdG9yZS9jaGVja291dC9hZGRyZXNzJyk7XG4gIH1cblxuICAkc2NvcGUuY29udGludWUgPSBmdW5jdGlvbigpe1xuICAgICRsb2NhdGlvbi51cmwoJy9zdG9yZScpO1xuICB9XG59KVxuXG5cblxuLmNvbnRyb2xsZXIoJ1N0b3JlU2hvd0N0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZVBhcmFtcywgJHN0YXRlLCAkaHR0cCwgJHRpbWVvdXQsICRsb2NhdGlvbiwgJHNlc3Npb25TdG9yYWdlLCBvbmVQcm9kdWN0KXtcbiAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4kc2NvcGUucHJvZHVjdCA9IG9uZVByb2R1Y3Q7XG4kc2NvcGUuaW1hZ2VzID0gb25lUHJvZHVjdC5pbWFnZXM7XG52YXIgY3VycmVudEFjdGl2ZVNyYyA9ICRzY29wZS5pbWFnZXNbMF07XG5cbiRzY29wZS5za3VzID0gJHNjb3BlLnByb2R1Y3Quc2t1cy5kYXRhO1xuXG4kc2NvcGUuZGF0YSA9IHt9O1xuJHNjb3BlLmRhdGEuc2VsZWN0ZWQgPSAkc2NvcGUucHJvZHVjdC5za3VzLmRhdGFbMF07XG5cblxudmFyIG1haW5JbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW4tcHJvZHVjdC1waG90byBpbWdcIik7XG5tYWluSW1nLnNyYyA9ICRzY29wZS5pbWFnZXNbMF07XG5cblxuJHNjb3BlLmlzQWN0aXZlSW1nID0gZnVuY3Rpb24oKXtcbiAgaWYgKHRoaXMuaW1nID09PSBjdXJyZW50QWN0aXZlU3JjKXtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuXG5cbiRzY29wZS5jaGFuZ2VBY3RpdmUgPSBmdW5jdGlvbigpe1xuICBjdXJyZW50QWN0aXZlU3JjID0gdGhpcy5pbWc7XG4gIG1haW5JbWcuc3JjID0gdGhpcy5pbWc7XG59XG5cblxuXG5cblxuXG5cbn0pXG5cblxuXG5cblxuXG4uY29udHJvbGxlcignQ2hlY2tvdXRUZW1wbGF0ZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGh0dHAsICR0aW1lb3V0LCAkbG9jYXRpb24sICRsb2NhbFN0b3JhZ2Upe1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuICAkc2NvcGUuJHN0b3JhZ2UgPSAkbG9jYWxTdG9yYWdlO1xuXG4gICRzY29wZS4kb24oJ2NhcnRDaGFuZ2UnLCBmdW5jdGlvbihldmVudCwgZGF0YSkgeyBcbiAgICAkc2NvcGUuc2hvd1BhdGggPSBkYXRhOyBcbiAgfSk7XG4gIGlmICghJHNjb3BlLnNob3dQYXRoKXtcbiAgICAkc2NvcGUuc2hvd1BhdGggPSAkc2NvcGUuJHN0b3JhZ2UucGF0aENvdW50O1xuICB9XG5cblxufSlcblxuXG5cblxuXG5cbi5jb250cm9sbGVyKCdTdG9yZUFkZHJlc3NDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICR3aW5kb3csICR0aW1lb3V0LCAkaHR0cCwgJGxvY2F0aW9uLCAkbG9jYWxTdG9yYWdlLCBuZ0NhcnQsICRyb290U2NvcGUsIEN1cnJlbnRPcmRlclNlcnZpY2Upe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgyNDcsIDIzNywgMjQ1LCAwKSc7XG5cbiAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgJHNjb3BlLiRzdG9yYWdlID0gJGxvY2FsU3RvcmFnZTtcbiAgJHNjb3BlLmNhcnRJdGVtcyA9IG5nQ2FydC5nZXRJdGVtcygpO1xuICAkcm9vdFNjb3BlLnBhdGggPSAkbG9jYXRpb24uJCRwYXRoO1xuICBpZiAoISRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQgfHwgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCA8IDEpe1xuICAgICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQgPSAwO1xuICAgICRzY29wZS4kZW1pdCgnY2FydENoYW5nZScsICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQpOyBcbiAgfSBcbiAgXG4gICRzY29wZS5sb2FkZWQgPSBbXTtcblxuXG4gICRzY29wZS5kYXRhID0ge1xuICAgIFwic2hpcHBpbmdcIjoge1xuICAgICAgXCJjb3VudHJ5XCI6IHt9XG4gICAgfSxcbiAgICBcImJpbGxpbmdcIjoge1xuICAgICAgXCJjb3VudHJ5XCI6IHt9XG4gICAgfVxuICB9O1xuICAkc2NvcGUubWFpbGluZ0xpc3RBZGQgPSB0cnVlO1xuICAkc2NvcGUuc2hpcHBpbmdTYW1lQm9vbCA9IGZhbHNlO1xuXG5cbiAgLy8gUkVRVUVTVFMgRk9SIEpTT04gREFUQSBGT1IgTkctT1BUSU9OU1xuXG4gICRodHRwLmdldCgnL2pzL0pTT04vY291bnRyaWVzLmpzb24nKS5zdWNjZXNzIChmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgJHNjb3BlLmNvdW50cmllcyA9IGRhdGE7XG4gICAgICAgICRzY29wZS5kYXRhLnNoaXBwaW5nLmNvdW50cnkgPSAkc2NvcGUuY291bnRyaWVzWzBdO1xuICAgICAgICAkc2NvcGUuZGF0YS5iaWxsaW5nLmNvdW50cnkgPSAkc2NvcGUuY291bnRyaWVzWzBdO1xuICAgICAgICAkc2NvcGUubG9hZGVkLnB1c2goXCJnb1wiKTtcbiAgfSk7XG5cbiAgJGh0dHAuZ2V0KCcvanMvSlNPTi9zdGF0ZXMuanNvbicpLnN1Y2Nlc3MgKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAkc2NvcGUuc3RhdGVzID0gZGF0YTtcbiAgICAgICAgJHNjb3BlLmxvYWRlZC5wdXNoKFwiZ29cIik7XG4gIH0pO1xuXG4gICRodHRwLmdldCgnL2pzL0pTT04vcHJvdmluY2VzLmpzb24nKS5zdWNjZXNzIChmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgJHNjb3BlLnByb3ZpbmNlcyA9IGRhdGE7XG4gICAgICAgICRzY29wZS5sb2FkZWQucHVzaChcImdvXCIpO1xuICB9KTtcblxuXG5cbiAgJHNjb3BlLmlzU2hpcHBpbmdTYW1lID0gZnVuY3Rpb24oKXtcbiAgICBpZiAoJHNjb3BlLmRhdGEuc2hpcHBpbmdTYW1lKXtcbiAgICAgICRzY29wZS5kYXRhLmJpbGxpbmcgPSAkc2NvcGUuZGF0YS5zaGlwcGluZztcbiAgICAgICRzY29wZS5zaGlwcGluZ1NhbWVCb29sID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHNjb3BlLmRhdGEuYmlsbGluZyA9IHt9O1xuICAgICAgJHNjb3BlLnNoaXBwaW5nU2FtZUJvb2wgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuXG4gICRzY29wZS5jb3VudHJ5Q2hhbmdlID0gZnVuY3Rpb24oY291bnRyeSl7XG4gICAgaWYgKGNvdW50cnkuY29kZSA9PT0gJ1VTJyl7XG4gICAgICAkc2NvcGUuc2hpcHBpbmdUeXBlID0gJHNjb3BlLnNoaXBSYXRlcy5kb21lc3RpYztcbiAgICB9IGVsc2Uge1xuICAgICAgJHNjb3BlLnNoaXBwaW5nVHlwZSA9ICRzY29wZS5zaGlwUmF0ZXMuaW50ZXJuYXRpb25hbDtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUuc3VibWl0Rm9ybSA9IGZ1bmN0aW9uKGZvcm0pe1xuICAgICBpZihmb3JtLiR2YWxpZCl7XG4gICAgICBcbiAgICAkc2NvcGUubG9hZGVkID0gW107XG4gICAgdmFyIHNoaXAgPSAkc2NvcGUuZGF0YS5zaGlwcGluZztcbiAgICB2YXIgYmlsbCA9ICRzY29wZS5kYXRhLmJpbGxpbmc7IFxuICAgICRzY29wZS5jb3B5SXRlbXMgPSBhbmd1bGFyLmNvcHkoJHNjb3BlLmNhcnRJdGVtcyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAkc2NvcGUuY29weUl0ZW1zLmxlbmd0aDsgaSsrKXtcbiAgICAgIGRlbGV0ZSAkc2NvcGUuY29weUl0ZW1zW2ldLl9kYXRhO1xuICAgICAgZGVsZXRlICRzY29wZS5jb3B5SXRlbXNbaV0uYXR0cjtcbiAgICB9XG4gICAgJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzID0gJHNjb3BlLmRhdGEuYmlsbGluZztcbiAgICB2YXIgcmVxID0ge1xuICAgICAgdXJsOiAnL3N0cmlwZS9jcmVhdGVPcmRlcicsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIHBhcmFtczoge1xuICAgICAgICBvcmRlcjoge1xuICAgICAgICAgIGN1cnJlbmN5OiAndXNkJyxcbiAgICAgICAgICBpdGVtczogJHNjb3BlLmNvcHlJdGVtcyxcbiAgICAgICAgICBzaGlwcGluZzoge1xuICAgICAgICAgICAgbmFtZTogc2hpcC5uYW1lLFxuICAgICAgICAgICAgYWRkcmVzczoge1xuICAgICAgICAgICAgICBsaW5lMTogc2hpcC5hZGRyZXNzMSxcbiAgICAgICAgICAgICAgbGluZTI6IHNoaXAuYWRkcmVzczIgfHwgbnVsbCxcbiAgICAgICAgICAgICAgY2l0eTogc2hpcC5jaXR5LFxuICAgICAgICAgICAgICBzdGF0ZTogc2hpcC5zdGF0ZVByb3ZpbmNlLnNob3J0IHx8IG51bGwsXG4gICAgICAgICAgICAgIGNvdW50cnk6IHNoaXAuY291bnRyeS5jb2RlLFxuICAgICAgICAgICAgICBwb3N0YWxfY29kZTogc2hpcC5wb3N0YWxDb2RlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlbWFpbDogc2hpcC5lbWFpbCxcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgdGF4UmF0ZTogbmdDYXJ0LmdldFRheFJhdGUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gXG4gICAgJGh0dHAocmVxKS50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKSB7XG5cbiAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzID09PSAnY3JlYXRlZCcpe1xuICAgICAgICAgICAgJHNjb3BlLiRzdG9yYWdlLm1haWxpbmdMaXN0ID0gJHNjb3BlLm1haWxpbmdMaXN0QWRkO1xuICAgICAgICAgICAgaWYgKCEkc2NvcGUuJHN0b3JhZ2UuYWRkcmVzc1N1Ym1pdCl7XG4gICAgICAgICAgICAgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCsrO1xuICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnY2FydENoYW5nZScsICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQpOyAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2UuYWRkcmVzc1N1Ym1pdCA9IHRydWU7ICAgICAgICAgICAgXG4gICAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2Uub3JkZXJEYXRhID0gcmVzO1xuICAgICAgICAgICAgJHNjb3BlLiRldmFsQXN5bmMoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgJGxvY2F0aW9uLnVybCgnL3N0b3JlL2NoZWNrb3V0L3BheW1lbnQnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICRzY29wZS5sb2FkZWQgPSBbMSwgMiwgM107XG4gICAgICAgICAgICAkc2NvcGUuZXJyb3JNZXNzYWdlID0gcmVzLmRhdGEubWVzc2FnZTtcbiAgICAgICAgICB9IFxuICAgICAgICB9LCBmdW5jdGlvbiBlcnJvcihyZXMpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yIFwiLHJlcyk7ICAgICAgICAgICAgIFxuICAgICAgICB9KTtcblxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcImZvcm0gaW52YWxpZCEhXCIpO1xuICAgICAgfVxuXG4gIH1cblxuXG4gICAgJHNjb3BlLmdldFRheFJhdGUgPSBmdW5jdGlvbihjb3VudHJ5LCBzdGF0ZVByb3ZpbmNlLCBwb3N0YWxDb2RlKXtcbiAgICBpZiAoY291bnRyeS5jb2RlID09PSAnVVMnICYmIHN0YXRlUHJvdmluY2Uuc2hvcnQgPT09ICdXQScgJiYgcG9zdGFsQ29kZSl7XG4gICAgICBpZiAoJHdpbmRvdy5sb2NhbFN0b3JhZ2UuY3VycmVudFdhUmF0ZSl7XG4gICAgICAgIHZhciBwYXJzZWRUYXggPSBwYXJzZUZsb2F0KCR3aW5kb3cubG9jYWxTdG9yYWdlLmN1cnJlbnRXYVJhdGUpXG4gICAgICAgIG5nQ2FydC5zZXRUYXhSYXRlKHBhcnNlZFRheCk7ICAgIFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlcSA9IHtcbiAgICAgICAgICB1cmw6ICcvdGF4UmF0ZScsXG4gICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIGNvdW50cnk6ICd1c2EnLFxuICAgICAgICAgICAgcG9zdGFsOiBwb3N0YWxDb2RlXG4gICAgICAgICAgfVxuICAgICAgICB9IFxuXG4gICAgICAgICRodHRwKHJlcSkudGhlbihmdW5jdGlvbiBzdWNjZXNzKHJlcykge1xuICAgICAgICAgIG5nQ2FydC5zZXRUYXhSYXRlKHJlcy5kYXRhLnRvdGFsUmF0ZSk7IFxuICAgICAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLmN1cnJlbnRXYVJhdGUgPSByZXMuZGF0YS50b3RhbFJhdGU7ICAgXG4gICAgICAgIH0sIGZ1bmN0aW9uIGVycm9yKHJlcykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3IgXCIscmVzKTsgICAgICAgICAgICAgXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY291bnRyeS5jb2RlID09PSAnVVMnICYmIHN0YXRlUHJvdmluY2Uuc2hvcnQgIT09ICdXQScpe1xuICAgICAgbmdDYXJ0LnNldFRheFJhdGUoMCk7XG4gICAgfSBlbHNlIGlmIChjb3VudHJ5LmNvZGUgIT09ICdVUycpe1xuICAgICAgbmdDYXJ0LnNldFRheFJhdGUoMCk7XG4gICAgfVxuICB9XG5cblxuXG5cblxufSlcblxuXG5cbi5jb250cm9sbGVyKCdTdG9yZVBheW1lbnRDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkbG9jYWxTdG9yYWdlLCBuZ0NhcnQsICRyb290U2NvcGUsIGN1cnJlbnRPcmRlcil7XG4gIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI0NywgMjM3LCAyNDUsIDApJztcbiAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgJHJvb3RTY29wZS5wYXRoID0gJGxvY2F0aW9uLiQkcGF0aDtcbiAgJHNjb3BlLiRzdG9yYWdlID0gJGxvY2FsU3RvcmFnZTtcbiAgJHNjb3BlLnBhdGhDb3VudCA9IHBhcnNlSW50KCRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQpOyBcbiAgJHNjb3BlLnNoaXBPcHRpb25zID0gJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YS5kYXRhLnNoaXBwaW5nX21ldGhvZHM7XG4gICRzY29wZS5zYXZlZFNlbGVjdGVkU2hpcCA9ICRzY29wZS4kc3RvcmFnZS5vcmRlckRhdGEuZGF0YS5zZWxlY3RlZF9zaGlwcGluZ19tZXRob2Q7XG5cbiAgXG5cblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgJHNjb3BlLnNoaXBPcHRpb25zLmxlbmd0aDsgaSsrKXtcbiAgICBpZiAoJHNjb3BlLnNoaXBPcHRpb25zW2ldLmlkID09PSAkc2NvcGUuc2F2ZWRTZWxlY3RlZFNoaXApe1xuICAgICAgJHNjb3BlLnNlbGVjdGVkU2hpcCA9ICRzY29wZS5zaGlwT3B0aW9uc1tpXTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBcbiAgICRzY29wZS4kd2F0Y2goJ3NlbGVjdGVkU2hpcCcsIGZ1bmN0aW9uIChuZXdWYWx1ZSwgb2xkVmFsdWUsIHNjb3BlKSB7XG4gICAgbmdDYXJ0LnNldFNoaXBwaW5nKCRzY29wZS5zZWxlY3RlZFNoaXAuYW1vdW50KTsgIFxuICB9LCBmYWxzZSk7XG5cbiAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICRzY29wZS5sb2FkZWQgPSB0cnVlOyBcbiAgfSlcblxuICBcbiAgXG4gICRzY29wZS5zdWJtaXRGb3JtID0gZnVuY3Rpb24oZm9ybSl7XG4gICAgLy8gaWYoZm9ybS4kdmFsaWQpe1xuICAgICAgJHNjb3BlLmxvYWRlZCA9IGZhbHNlOyBcbiAgICAgIFN0cmlwZS5jYXJkLmNyZWF0ZVRva2VuKHtcbiAgICAgICAgbnVtYmVyOiAkc2NvcGUubnVtYmVyLFxuICAgICAgICBjdmM6ICRzY29wZS5jdmMsXG4gICAgICAgIGV4cDogJHNjb3BlLmV4cGlyeSxcbiAgICAgICAgbmFtZTogJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzLm5hbWUsXG4gICAgICAgIGFkZHJlc3NfbGluZTE6ICRzY29wZS4kc3RvcmFnZS5iaWxsaW5nQWRkcmVzcy5hZGRyZXNzMSxcbiAgICAgICAgYWRkcmVzc19saW5lMjogJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzLmFkZHJlc3MyIHx8IG51bGwsXG4gICAgICAgIGFkZHJlc3NfY2l0eTogJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzLmNpdHksXG4gICAgICAgIGFkZHJlc3Nfc3RhdGU6ICRzY29wZS4kc3RvcmFnZS5iaWxsaW5nQWRkcmVzcy5zdGF0ZVByb3ZpbmNlLnNob3J0IHx8IG51bGwsXG4gICAgICAgIGFkZHJlc3NfemlwOiAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MucG9zdGFsQ29kZSxcbiAgICAgICAgYWRkcmVzc19jb3VudHJ5OiAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MuY291bnRyeS5jb2RlXG4gICAgICB9LCBoYW5kbGVTdHJpcGUpO1xuICAgIC8vIH0gZWxzZSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcImZvcm0gaW52YWxpZCEhXCIpO1xuICAgIC8vIH1cbiAgfVxuXG4gIHZhciBoYW5kbGVTdHJpcGUgPSBmdW5jdGlvbihzdGF0dXMsIHJlc3BvbnNlKXtcbiAgICBpZihyZXNwb25zZS5lcnJvcikge1xuICAgIC8vIHRoZXJlIHdhcyBhbiBlcnJvci4gRml4IGl0LlxuICB9IGVsc2Uge1xuICAgIHRva2VuID0gcmVzcG9uc2U7XG4gICAgXG5cbiAgICB2YXIgcmVxID0ge1xuICAgICAgdXJsOiAnL3N0cmlwZS91cGRhdGVTaGlwcGluZycsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIHBhcmFtczoge1xuICAgICAgICB0b2tlbjogdG9rZW4sXG4gICAgICAgIG9yZGVySWQ6ICRzY29wZS4kc3RvcmFnZS5vcmRlckRhdGEuZGF0YS5pZCxcbiAgICAgICAgc2VsZWN0ZWRTaGlwOiAkc2NvcGUuc2VsZWN0ZWRTaGlwLmlkXG4gICAgICB9XG4gICAgfVxuXG4gICAgJGh0dHAocmVxKS50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgIGlmICghJHNjb3BlLiRzdG9yYWdlLnBheW1lbnRTdWJtaXQpe1xuICAgICAgICAgICAgICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQrKztcbiAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2NhcnRDaGFuZ2UnLCAkc2NvcGUuJHN0b3JhZ2UucGF0aENvdW50KTsgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHNjb3BlLiRzdG9yYWdlLnBheW1lbnRTdWJtaXQgPSB0cnVlOyAgXG4gICAgICAgICAgJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YSA9IHJlcztcbiAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2UudG9rZW5EYXRhID0gdG9rZW47XG4gICAgICAgICAgJGxvY2F0aW9uLnVybCgnL3N0b3JlL2NoZWNrb3V0L2NvbmZpcm0nKTsgICBcbiAgICAgICAgfSwgZnVuY3Rpb24gZXJyb3IocmVzKSB7XG4gICAgICAgICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7IFxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3IgXCIscmVzKTsgICAgICAgICAgICAgXG4gICAgICAgIH0pO1xuICB9XG4gIH1cblxuXG59KVxuXG5cbi5jb250cm9sbGVyKCdTdG9yZUNvbmZpcm1DdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkbG9jYWxTdG9yYWdlLCBuZ0NhcnQsICRyb290U2NvcGUpe1xudmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYmEoMjQ3LCAyMzcsIDI0NSwgMCknO1xuJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiRzY29wZS4kc3RvcmFnZSA9ICRsb2NhbFN0b3JhZ2U7XG4kc2NvcGUucGF0aENvdW50ID0gcGFyc2VJbnQoJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCk7IFxuJHNjb3BlLm9yZGVyQ29tcGxldGUgPSBmYWxzZTtcbiRyb290U2NvcGUucGF0aCA9ICRsb2NhdGlvbi4kJHBhdGg7XG4kc2NvcGUubmdDYXJ0ID0gbmdDYXJ0O1xuJHNjb3BlLnRva2VuID0gJHNjb3BlLiRzdG9yYWdlLnRva2VuRGF0YTtcbiRzY29wZS5vcmRlciA9ICRzY29wZS4kc3RvcmFnZS5vcmRlckRhdGEuZGF0YTtcbnZhciBpdGVtcyA9ICRzY29wZS5vcmRlci5pdGVtcztcbmZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspe1xuICBpZiAoaXRlbXNbaV0udHlwZSA9PT0gJ3NoaXBwaW5nJyl7XG4gICAgJHNjb3BlLnNoaXBTZXJ2aWNlID0gaXRlbXNbaV0uZGVzY3JpcHRpb247XG4gIH1cbn1cbiR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICRzY29wZS5sb2FkZWQgPSB0cnVlO1xufSlcbiAgXG5cblxuJHNjb3BlLmNyZWF0ZUNoYXJnZSA9IGZ1bmN0aW9uKCl7XG4gICRzY29wZS5sb2FkZWQgPSBmYWxzZTsgXG4gIHZhciByZXEgPSB7XG4gICAgICAgIHVybDogJy9zdHJpcGUvb3JkZXJDb21wbGV0ZScsXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBvcmRlcklkOiAkc2NvcGUub3JkZXIuaWQsXG4gICAgICAgICAgdG9rZW46ICRzY29wZS50b2tlbi5pZFxuICAgICAgICB9XG4gICAgICB9IFxuXG4gICAgICAkaHR0cChyZXEpLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXMpIHtcbiAgICAgICAgJHNjb3BlLm9yZGVyQ29tcGxldGUgPSB0cnVlO1xuICAgICAgICBpZiAoJHNjb3BlLiRzdG9yYWdlLm1haWxpbmdMaXN0KXtcbiAgICAgICAgICBtYWlsY2hpbXBTdWJtaXQoKTtcbiAgICAgICAgfVxuICAgICAgICBuZ0NhcnQuc2V0VGF4UmF0ZSgpO1xuICAgICAgICBuZ0NhcnQuc2V0U2hpcHBpbmcoKTsgICBcbiAgICAgICAgbmdDYXJ0LmVtcHR5KCk7XG4gICAgICAgICRsb2NhbFN0b3JhZ2UuJHJlc2V0KCk7XG4gICAgICB9LCBmdW5jdGlvbiBlcnJvcihyZXMpIHtcbiAgICAgICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7IFxuICAgIC8vZG8gc29tZXRoaW5nIGlmIHRoZSByZXNwb25zZSBoYXMgYW4gZXJyb3JcbiAgICBjb25zb2xlLmxvZyhcImVycm9yIFwiLHJlcyk7XG4gIH0pO1xufVxuXG5cblxuXG5cbnZhciBtYWlsY2hpbXBTdWJtaXQgPSBmdW5jdGlvbigpe1xuICAgIHZhciB1cmwgPSBcIi8vc2lzdGVyc3RoZWJhbmQudXMxNC5saXN0LW1hbmFnZS5jb20vc3Vic2NyaWJlL3Bvc3QtanNvbj91PWJjMzg3MjBiMGJjYzdhMzI2NDFiYjU3MmMmYW1wO2lkPTI0MmY0YWRjODkmRU1BSUw9XCIrJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YS5kYXRhLmVtYWlsK1wiJmM9SlNPTl9DQUxMQkFDS1wiXG4gICAgJGh0dHAuanNvbnAodXJsKS50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKXtcbiAgICB9LCBmdW5jdGlvbiBlcnJvcihyZXMpe1xuICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICB9KTtcbn1cblxuXG5cblxuXG59KTsiLCJhbmd1bGFyLm1vZHVsZSgnU2lzdGVyc0RpcmVjdGl2ZXMnLCBbXSlcblxuXG5cblxuLmRpcmVjdGl2ZShcImZpbGVyZWFkXCIsIFtmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgIGZpbGVyZWFkOiBcIj1cIlxuICAgICAgICB9LFxuICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuYmluZChcImNoYW5nZVwiLCBmdW5jdGlvbiAoY2hhbmdlRXZlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGxvYWRFdmVudCkge1xuICAgICAgICAgICAgICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGUuZmlsZXJlYWQgPSBsb2FkRXZlbnQudGFyZ2V0LnJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGNoYW5nZUV2ZW50LnRhcmdldC5maWxlc1swXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1dKVxuXG5cblxuLmRpcmVjdGl2ZShcImNvdW50cnlOYW1lXCIsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCkge1xuICByZXR1cm4ge1xuICAgIHRlbXBsYXRlOiBcIjxzcGFuPnt7bmFtZX19PC9zcGFuPlwiLFxuICAgIHNjb3BlOiB7XG4gICAgICBjb3VudHJ5Q29kZTogXCI9XCJcbiAgICB9LFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlKSB7XG4gICAgICAkaHR0cC5nZXQoJy9qcy9KU09OL2NvdW50cmllcy5qc29uJykudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIHZhciBjb3VudHJpZXMgPSBkYXRhLmRhdGE7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY291bnRyaWVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGlmIChjb3VudHJpZXNbaV0uY29kZSA9PT0gc2NvcGUuY291bnRyeUNvZGUpe1xuICAgICAgICAgICAgICAgIHNjb3BlLm5hbWUgPSBjb3VudHJpZXNbaV0ubmFtZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIHNjb3BlLm5hbWUgPSBcInVua25vd25cIjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufV0pO1xuXG5cblxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnU2lzdGVyc1NlcnZpY2VzJywgWyduZ1Jlc291cmNlJ10pXG5cblxuLmZhY3RvcnkoJ0xvYWRlZFNlcnZpY2UnLCBmdW5jdGlvbigpIHtcbiB2YXIgbG9hZGVkID0gZmFsc2U7XG4gZnVuY3Rpb24gc2V0KGRhdGEpIHtcbiAgIGxvYWRlZCA9IGRhdGE7XG4gfVxuIGZ1bmN0aW9uIGdldCgpIHtcbiAgcmV0dXJuIGxvYWRlZDtcbiB9XG5cbiByZXR1cm4ge1xuICBzZXQ6IHNldCxcbiAgZ2V0OiBnZXRcbiB9XG5cbn0pXG5cbi5mYWN0b3J5KFwiQXV0aFwiLCBbXCIkZmlyZWJhc2VBdXRoXCIsXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUF1dGgpIHtcbiAgICByZXR1cm4gJGZpcmViYXNlQXV0aCgpO1xuICB9XG5dKVxuXG5cbi5mYWN0b3J5KFwiUHJvZHVjdHNTZXJ2aWNlXCIsIFtcIiRodHRwXCIsXCIkcVwiLCBmdW5jdGlvbigkaHR0cCwgJHEpe1xuICByZXR1cm4ge1xuICAgIGFsbFByb2R1Y3RzOiBmdW5jdGlvbigpe1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiaW5zaWRlIGFsbCBwcm9kdWN0cyBzZXJ2aWNlXCIpXG4gICAgICAkaHR0cC5nZXQoJy9zdHJpcGUvYWxsUHJvZHVjdHMnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAvLyBwcm9kdWN0cyA9IGRhdGEuZGF0YTtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhLmRhdGEpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcInByb2R1Y3RzIGluIHNlcnZpY2U6IFwiLHByb2R1Y3RzKTsgICBcbiAgICAgIH0pOyBcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlOyAgIFxuICAgIH0sXG4gICAgb25lUHJvZHVjdDogZnVuY3Rpb24ocHJvZHVjdElkKXtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwid2hhdCdzIGlkPyBcIixwcm9kdWN0SWQpO1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgIHZhciByZXEgPSB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogJy9zdHJpcGUvb25lUHJvZHVjdCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHByb2R1Y3RJZDogcHJvZHVjdElkXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICRodHRwKHJlcSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJzdWNjZXNzISEhXCIpXG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICB9KVxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuICB9XG59XSlcblxuLnNlcnZpY2UoJ0luc3RhZ3JhbUZhY3RvcnknLCBbJyRodHRwJywgJyRxJywgXG4gIGZ1bmN0aW9uICgkaHR0cCwgJHEpIHtcbiAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICRodHRwKHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgdXJsOiAnL2luc3RhZ3JhbScsXG4gICAgICAgIGNhY2hlOiB0cnVlXG4gICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgIH0pLmVycm9yKGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgZGVmZXJyZWQucmVqZWN0KG1zZyk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG59XSlcblxuLnNlcnZpY2UoJ1R3aXR0ZXJGYWN0b3J5JywgWyckaHR0cCcsICckcScsIFxuICBmdW5jdGlvbiAoJGh0dHAsICRxKSB7XG4gICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAkaHR0cCh7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogJy90d2l0dGVyJyxcbiAgICAgICAgY2FjaGU6IHRydWVcbiAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgfSkuZXJyb3IoZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBkZWZlcnJlZC5yZWplY3QobXNnKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbn1dKVxuXG5cblxuXG4uZmFjdG9yeShcIkdldFNob3dzXCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsXCJtb21lbnRcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5LCBtb21lbnQpe1xuICAgIHZhciBjdXJyZW50RGF5ID0gbW9tZW50KCkudW5peCgpO1xuICAgIC8vIGNvbnNvbGUubG9nKFwiY3VycmVudCBkYXk6IFwiLGN1cnJlbnREYXkpO1xuICAgIHJldHVybiBmdW5jdGlvbigpe1xuICAgIHZhciBzaG93c1JlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdzaG93cycpLm9yZGVyQnlDaGlsZChcInVuaXhcIikuc3RhcnRBdChjdXJyZW50RGF5KTtcbiAgICAvLyBjb25zb2xlLmxvZyhcIkknbSBpbiBHZXRTaG93c1wiKTtcbiAgICByZXR1cm4gJGZpcmViYXNlQXJyYXkoc2hvd3NSZWYpO1xuICB9XG59XSlcblxuXG5cblxuXG4uZmFjdG9yeShcIkJsb2dQb3N0c1wiLCBbXCIkZmlyZWJhc2VBcnJheVwiLCBcbiAgZnVuY3Rpb24oJGZpcmViYXNlQXJyYXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJsb2dSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYmxvZ19wb3N0cycpLm9yZGVyQnlDaGlsZChcInRpbWVzdGFtcFwiKTtcbiAgICByZXR1cm4gJGZpcmViYXNlQXJyYXkoYmxvZ1JlZik7XG4gIH1cbn1dKVxuXG5cbi5mYWN0b3J5KFwiVGhpc1Bvc3RTZXJ2aWNlXCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5KXtcbiAgICByZXR1cm4gZnVuY3Rpb24oc2x1Zyl7XG4gICAgICB2YXIgcG9zdFJlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdibG9nX3Bvc3RzJyk7XG4gICAgICB2YXIgdGhpc1Bvc3RSZWYgPSBwb3N0UmVmLm9yZGVyQnlDaGlsZCgnc2x1ZycpLmVxdWFsVG8oc2x1Zyk7XG4gICAgICByZXR1cm4gJGZpcmViYXNlQXJyYXkodGhpc1Bvc3RSZWYpO1xuICAgIH1cbiAgfVxuICBdKVxuXG4uZmFjdG9yeShcIkFsbFRhZ3NTZXJ2aWNlXCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsIFxuICBmdW5jdGlvbigkZmlyZWJhc2VBcnJheSkge1xuICByZXR1cm4gZnVuY3Rpb24oKXtcbiAgICAgIHZhciB0YWdSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndGFncycpO1xuICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KHRhZ1JlZik7XG4gIH1cbn1dKVxuXG4uZmFjdG9yeShcIlRhZ3NTaG93U2VydmljZVwiLCBbXCIkZmlyZWJhc2VBcnJheVwiLCBcbiAgZnVuY3Rpb24oJGZpcmViYXNlT2JqZWN0KSB7XG4gIHJldHVybiBmdW5jdGlvbih0YWdOYW1lKXtcbiAgICAgIHZhciB0YWdSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndGFncycpO1xuICAgICAgdmFyIHRhZ1Nob3dSZWYgPSB0YWdSZWYub3JkZXJCeUNoaWxkKCduYW1lJykuZXF1YWxUbyh0YWdOYW1lKTtcbiAgICAgIHJldHVybiAkZmlyZWJhc2VPYmplY3QodGFnU2hvd1JlZik7XG4gIH1cbn1dKVxuXG5cbi5mYWN0b3J5KFwiQXJjaGl2ZVNlcnZpY2VcIiwgW1wiJGZpcmViYXNlQXJyYXlcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5KXtcbiAgICByZXR1cm4ge1xuICAgICAgeWVhcnM6IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgeWVhclJlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdhcmNoaXZlcycpO1xuICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KHllYXJSZWYpXG4gICAgICB9LFxuICAgICAgbW9udGhzOiBmdW5jdGlvbih5ZWFyKXtcbiAgICAgIHZhciBtb250aFJlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdhcmNoaXZlcy8nK3llYXIpO1xuICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KG1vbnRoUmVmKVxuICAgICAgfVxuICAgIH1cbn1dKVxuXG4uZmFjdG9yeShcIkFyY2hpdmVTaG93U2VydmljZVwiLCBbXCIkZmlyZWJhc2VBcnJheVwiLCBcbiAgZnVuY3Rpb24oJGZpcmViYXNlQXJyYXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHllYXIsIG1vbnRoKXtcbiAgICAgIHZhciBhcmNoaXZlUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGgpO1xuICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KGFyY2hpdmVSZWYpO1xuICB9XG59XSlcblxuLmZhY3RvcnkoJ1NlbmREYXRhU2VydmljZScsIGZ1bmN0aW9uKCkge1xuIHZhciBzYXZlZERhdGEgPSB7fVxuIGZ1bmN0aW9uIHNldChkYXRhKSB7XG4gICBzYXZlZERhdGEgPSBkYXRhO1xuIH1cbiBmdW5jdGlvbiBnZXQoKSB7XG4gIHJldHVybiBzYXZlZERhdGE7XG4gfVxuXG4gcmV0dXJuIHtcbiAgc2V0OiBzZXQsXG4gIGdldDogZ2V0XG4gfVxuXG59KVxuXG4uZmFjdG9yeSgnQ3VycmVudE9yZGVyU2VydmljZScsIGZ1bmN0aW9uKCR3aW5kb3cpIHtcbiBmdW5jdGlvbiBzZXQoZGF0YSkge1xuICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSggJ29yZGVyRGF0YScsIGFuZ3VsYXIudG9Kc29uKGRhdGEpICk7XG4gIC8vICBjb25zb2xlLmxvZyhcIm9yZGVyIHNhdmVkIVwiKTtcbiB9XG4gZnVuY3Rpb24gZ2V0KCkge1xuICB2YXIgb3JkZXIgPSBhbmd1bGFyLmZyb21Kc29uKCAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdvcmRlckRhdGEnKSApIDtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShvcmRlcik7XG4gfVxuXG4gcmV0dXJuIHtcbiAgc2V0OiBzZXQsXG4gIGdldDogZ2V0XG4gfVxufSlcblxuXG5cblxuLmZhY3RvcnkoJ0hlbHBlclNlcnZpY2UnLCBbXCJtb21lbnRcIixcIiRxXCIsIGZ1bmN0aW9uKG1vbWVudCwgJHEpIHtcbiAgcmV0dXJuIHtcbiAgICBwYXJzZVlvdVR1YmU6IGZ1bmN0aW9uKHVybCl7XG4gICAgICB2YXIgdmlkZW9pZCA9IHVybC5tYXRjaCgvKD86aHR0cHM/OlxcL3syfSk/KD86d3szfVxcLik/eW91dHUoPzpiZSk/XFwuKD86Y29tfGJlKSg/OlxcL3dhdGNoXFw/dj18XFwvKShbXlxccyZdKykvKTtcbiAgICAgICAgaWYodmlkZW9pZCAhPSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIHZpZGVvaWRbMV07XG4gICAgICAgIH0gZWxzZSB7IFxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiVGhlIHlvdXR1YmUgdXJsIGlzIG5vdCB2YWxpZC5cIik7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGJhc2U2NE1pbWVUeXBlOiBmdW5jdGlvbihlbmNvZGVkKXtcbiAgICAgIHZhciByZXN1bHQgPSBudWxsO1xuICAgICAgaWYgKHR5cGVvZiBlbmNvZGVkICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgdmFyIG1pbWUgPSBlbmNvZGVkLm1hdGNoKC9kYXRhOihbYS16QS1aMC05XStcXC9bYS16QS1aMC05LS4rXSspLiosLiovKTtcbiAgICAgIGlmIChtaW1lICYmIG1pbWUubGVuZ3RoKSB7XG4gICAgICAgIHJlc3VsdCA9IG1pbWVbMV07XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhcImltYWdlIHR5cGUgaXMgXCIscmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBnZXRCYXNlNjRJbWFnZTogZnVuY3Rpb24oZGF0YVVSTCkge1xuICAgICAgdmFyIGJhc2U2NCA9IGRhdGFVUkwucmVwbGFjZSgvXmRhdGE6aW1hZ2VcXC8ocG5nfGpwZWcpO2Jhc2U2NCwvLCBcIlwiKTtcbiAgICAgIHJldHVybiBiYXNlNjQ7XG4gICAgfSxcbiAgICBiNjR0b0Jsb2I6IGZ1bmN0aW9uKGI2NERhdGEsIGNvbnRlbnRUeXBlLCBzbGljZVNpemUpIHtcbiAgICAgIGNvbnRlbnRUeXBlID0gY29udGVudFR5cGUgfHwgJyc7XG4gICAgICBzbGljZVNpemUgPSBzbGljZVNpemUgfHwgNTEyO1xuICAgICAgdmFyIGJ5dGVDaGFyYWN0ZXJzID0gYXRvYihiNjREYXRhKTtcbiAgICAgIHZhciBieXRlQXJyYXlzID0gW107XG4gICAgICBmb3IgKHZhciBvZmZzZXQgPSAwOyBvZmZzZXQgPCBieXRlQ2hhcmFjdGVycy5sZW5ndGg7IG9mZnNldCArPSBzbGljZVNpemUpIHtcbiAgICAgICAgdmFyIHNsaWNlID0gYnl0ZUNoYXJhY3RlcnMuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBzbGljZVNpemUpO1xuICAgICAgICB2YXIgYnl0ZU51bWJlcnMgPSBuZXcgQXJyYXkoc2xpY2UubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGljZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGJ5dGVOdW1iZXJzW2ldID0gc2xpY2UuY2hhckNvZGVBdChpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYnl0ZUFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZU51bWJlcnMpO1xuICAgICAgICBieXRlQXJyYXlzLnB1c2goYnl0ZUFycmF5KTtcbiAgICAgIH0gXG4gICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKGJ5dGVBcnJheXMsIHt0eXBlOiBjb250ZW50VHlwZX0pO1xuICAgICAgcmV0dXJuIGJsb2I7XG4gICAgfSxcbiAgICBwYWdlRG93bjogZnVuY3Rpb24oY3VycmVudFBhZ2Upe1xuICAgICAgaWYgKGN1cnJlbnRQYWdlIDwgMil7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRQYWdlIC0gKDEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZmluZEZpcnN0OiBmdW5jdGlvbihsZW5ndGgsIHBhZ2Upe1xuICAgIHZhciBjYWxjRmlyc3QgPSBsZW5ndGggLSAoNCooMStwYWdlKSk7XG4gICAgICBpZiAoY2FsY0ZpcnN0ID49IDApe1xuICAgICAgICByZXR1cm4gY2FsY0ZpcnN0XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH1cbiAgICB9LFxuICAgIHRpdGxlVG9VUkw6IGZ1bmN0aW9uKHRpdGxlKXtcblxuICAgIHJldHVybiB0aXRsZS5zcGxpdCgnICcpLmpvaW4oJy0nKTtcbiAgICB9LFxuICAgIHNsdWdpZnk6IGZ1bmN0aW9uKHRleHQpe1xuICAgICAgcmV0dXJuIHRleHQudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpXG4gICAgICAucmVwbGFjZSgvXFxzKy9nLCAnLScpICAgICAgICAgICAvLyBSZXBsYWNlIHNwYWNlcyB3aXRoIC1cbiAgICAgIC5yZXBsYWNlKC9bXlxcd1xcLV0rL2csICcnKSAgICAgICAvLyBSZW1vdmUgYWxsIG5vbi13b3JkIGNoYXJzXG4gICAgICAucmVwbGFjZSgvXFwtXFwtKy9nLCAnLScpICAgICAgICAgLy8gUmVwbGFjZSBtdWx0aXBsZSAtIHdpdGggc2luZ2xlIC1cbiAgICAgIC5yZXBsYWNlKC9eLSsvLCAnJykgICAgICAgICAgICAgLy8gVHJpbSAtIGZyb20gc3RhcnQgb2YgdGV4dFxuICAgICAgLnJlcGxhY2UoLy0rJC8sICcnKTsgICAgICAgICAgICAvLyBUcmltIC0gZnJvbSBlbmQgb2YgdGV4dFxuICAgIH0sXG4gICAgaW1nUmVzaXplOiBmdW5jdGlvbiAoaW1nKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImluc2lkZSByZXNpemUhIVwiKTtcbiAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgIHZhciBsb2FkSU1HID0gbmV3IEltYWdlO1xuICAgIGxvYWRJTUcuc3JjID0gaW1nO1xuICAgIGxvYWRJTUcub25sb2FkID0gZnVuY3Rpb24oKXtcbiAgICAgICBjb25zb2xlLmxvZyh0aGlzLndpZHRoICsgXCIgXCIgKyB0aGlzLmhlaWdodCk7XG4gICAgICAgdmFyIGFzcGVjdFJhdGlvID0gbG9hZElNRy53aWR0aCAvIGxvYWRJTUcuaGVpZ2h0O1xuICAgICAgIGNvbnNvbGUubG9nKFwiV0hBVCBJUyBSQVRJTz8/PyBcIixhc3BlY3RSYXRpbyk7XG4gICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICBpZiAoYXNwZWN0UmF0aW8gPj0gMS43NzYgJiYgbG9hZElNRy5oZWlnaHQgPj0gNTAwKXtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImxvYWRJTUc6IFwiLGxvYWRJTUcpO1xuICAgICAgICAgIHZhciBwZXJjZW50Q2hhbmdlID0gKGxvYWRJTUcuaGVpZ2h0IC0gNTAwKSAvIGxvYWRJTUcuaGVpZ2h0O1xuICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSA1MDA7XG4gICAgICAgICAgY2FudmFzLndpZHRoID0gbG9hZElNRy53aWR0aCAtIChsb2FkSU1HLndpZHRoICogcGVyY2VudENoYW5nZSk7XG4gICAgICAgIFxuICAgICAgICB9IGVsc2UgaWYgKGFzcGVjdFJhdGlvIDwgMS43NzYgJiYgbG9hZElNRy53aWR0aCA+PSA4ODkpe1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwibG9hZElNRzogXCIsbG9hZElNRyk7XG4gICAgICAgICAgdmFyIHBlcmNlbnRDaGFuZ2UgPSAobG9hZElNRy53aWR0aCAtIDg4OSkgLyBsb2FkSU1HLndpZHRoO1xuICAgICAgICAgIGNhbnZhcy53aWR0aCA9IDg4OTtcbiAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gbG9hZElNRy5oZWlnaHQgLSAobG9hZElNRy5oZWlnaHQgKiBwZXJjZW50Q2hhbmdlKTtcbiAgICAgICAgICBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImxvYWRJTUc6IFwiLGxvYWRJTUcpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiaW1hZ2UgaXMgbm90IGJpZyBlbm91Z2ghXCIpOyAgXG4gICAgICAgIH1cbiAgICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UobG9hZElNRywgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgdmFyIHJlc2l6ZWRSZXN1bHQgPSBjYW52YXMudG9EYXRhVVJMKFwiaW1hZ2UvanBlZ1wiKTtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNpemVkUmVzdWx0KTsgICBcbiAgICB9XG4gICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7IFxuICAgIH1cbiAgfSBcbn1dKVxuXG5cblxuXG4uZmFjdG9yeSgnU3VibWl0SW1hZ2UnLCBbXCJIZWxwZXJTZXJ2aWNlXCIsIGZ1bmN0aW9uKEhlbHBlclNlcnZpY2UpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHBvc3QsIHBvc3RBcnJheSwgaW1hZ2UsIGNhbGxiYWNrKXtcbiAgICBIZWxwZXJTZXJ2aWNlLmltZ1Jlc2l6ZShpbWFnZSkudGhlbihmdW5jdGlvbihuZXdJbWFnZSl7XG4gICAgICB2YXIgbWltZSA9IEhlbHBlclNlcnZpY2UuYmFzZTY0TWltZVR5cGUobmV3SW1hZ2UpO1xuICAgIGNvbnNvbGUubG9nKFwiVFlQRSBJUyBcIixtaW1lKTtcbiAgICB2YXIgYmFzZTY0cmVzdWx0ID0gSGVscGVyU2VydmljZS5nZXRCYXNlNjRJbWFnZShuZXdJbWFnZSlcbiAgICB2YXIgZmlsZSA9IEhlbHBlclNlcnZpY2UuYjY0dG9CbG9iKGJhc2U2NHJlc3VsdCwgbWltZSlcbiAgICB2YXIgbWV0YWRhdGEgPSB7XG4gICAgY29udGVudFR5cGU6IG1pbWVcbiAgICB9O1xuICAgIHZhciBwaG90b0lkID0gKE1hdGgucmFuZG9tKCkqMWUzMikudG9TdHJpbmcoMzYpO1xuICAgIHZhciBzdG9yYWdlUmVmID0gZmlyZWJhc2Uuc3RvcmFnZSgpLnJlZigpO1xuICAgIHZhciB1cGxvYWRUYXNrID0gc3RvcmFnZVJlZi5jaGlsZCgnYmxvZy1pbWFnZXMvJyArIHBob3RvSWQpLnB1dChmaWxlLCBtZXRhZGF0YSk7XG4gICAgdXBsb2FkVGFzay5vbihmaXJlYmFzZS5zdG9yYWdlLlRhc2tFdmVudC5TVEFURV9DSEFOR0VELCAvLyBvciAnc3RhdGVfY2hhbmdlZCdcbiAgICBmdW5jdGlvbihzbmFwc2hvdCkge1xuICAgICAgLy8gR2V0IHRhc2sgcHJvZ3Jlc3MsIGluY2x1ZGluZyB0aGUgbnVtYmVyIG9mIGJ5dGVzIHVwbG9hZGVkIGFuZCB0aGUgdG90YWwgbnVtYmVyIG9mIGJ5dGVzIHRvIGJlIHVwbG9hZGVkXG4gICAgICB2YXIgcHJvZ3Jlc3MgPSAoc25hcHNob3QuYnl0ZXNUcmFuc2ZlcnJlZCAvIHNuYXBzaG90LnRvdGFsQnl0ZXMpICogMTAwO1xuICAgICAgY29uc29sZS5sb2coJ1VwbG9hZCBpcyAnICsgcHJvZ3Jlc3MgKyAnJSBkb25lJyk7XG4gICAgICBzd2l0Y2ggKHNuYXBzaG90LnN0YXRlKSB7XG4gICAgICAgIGNhc2UgZmlyZWJhc2Uuc3RvcmFnZS5UYXNrU3RhdGUuUEFVU0VEOiAvLyBvciAncGF1c2VkJ1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdVcGxvYWQgaXMgcGF1c2VkJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgZmlyZWJhc2Uuc3RvcmFnZS5UYXNrU3RhdGUuUlVOTklORzogLy8gb3IgJ3J1bm5pbmcnXG4gICAgICAgICAgY29uc29sZS5sb2coJ1VwbG9hZCBpcyBydW5uaW5nJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICBzd2l0Y2ggKGVycm9yLmNvZGUpIHtcbiAgICAgIGNhc2UgJ3N0b3JhZ2UvdW5hdXRob3JpemVkJzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzdG9yYWdlL2NhbmNlbGVkJzpcbiAgICAgICAgLy8gVXNlciBjYW5jZWxlZCB0aGUgdXBsb2FkXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RvcmFnZS91bmtub3duJzpcbiAgICAgICAgLy8gVW5rbm93biBlcnJvciBvY2N1cnJlZCwgaW5zcGVjdCBlcnJvci5zZXJ2ZXJSZXNwb25zZVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH0sIGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKFwidXBsb2FkIGZpbmlzaGVkXCIpXG4gICAgdmFyIGRvd25sb2FkVVJMID0gdXBsb2FkVGFzay5zbmFwc2hvdC5kb3dubG9hZFVSTDtcbiAgICBjYWxsYmFjayhwb3N0LCBwb3N0QXJyYXksIGRvd25sb2FkVVJMLCBudWxsKTtcbiAgfSk7XG4gICAgfSlcbiAgICBcblxuXG5cbiAgfVxuXG59XSlcblxuXG5cblxuXG5cblxuIl19
