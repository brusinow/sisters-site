var authWait=["Auth",function(e){return e.$waitForSignIn()}],authRequire=["Auth",function(e){return e.$requireSignIn()}];angular.module("SistersApp",["SistersCtrls","SistersDirectives","ui.router","ui.bootstrap","firebase","angularMoment","ngCart","ngStorage","angularPayments","ngAnimate","picardy.fontawesome","textAngular","ui.router.metatags","angular-parallax"]).run(["$rootScope","$state","$location","$window","MetaTags",function(e,t,o,a,r){e.MetaTags=r,e.$on("$stateChangeError",function(e,o,a,r,n,s){"AUTH_REQUIRED"===s&&t.go("login")}),e.$on("$stateChangeSuccess",function(e){document.body.scrollTop=document.documentElement.scrollTop=0,a.ga&&a.ga("send","pageview",{page:o.path()})})}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","UIRouterMetatagsProvider","$provide",function(e,t,o,a,r){a.setDefaultTitle("SISTERS").setDefaultDescription('Seattle duo. "Drink Champagne", the debut album, coming soon!').setStaticProperties({"og:site_name":"SISTERS"}).setOGURL(!0),t.otherwise("/"),e.state("home",{url:"/",metaTags:{title:"SISTERS",description:'Seattle duo. "Drink Champagne", the debut album, coming soon!'},templateUrl:"/views/home.html",controller:"HomeCtrl"}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"AboutCtrl"}).state("press",{url:"/press",templateUrl:"/views/press.html",controller:"PressCtrl"}).state("contact",{url:"/contact",templateUrl:"/views/contact.html",controller:"ContactCtrl"}).state("download",{url:"/download/:id",resolve:{downloadKey:["DownloadKeyService","$stateParams",function(e,t){return e(t.id).$loaded()}]},onEnter:["$state","$stateParams","$timeout","downloadKey",function(e,t,o,a){a===!0?o(function(){console.log("success!")},0):o(function(){console.log("failed!")},0)}]}).state("blog",{templateUrl:"/views/blog/blog.html",controller:"BlogMasterCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}]}}).state("blog-new",{url:"/blog/new",templateUrl:"/views/blog/newBlogPost.html",controller:"NewBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog-edit",{url:"/blog/edit/:slug",templateUrl:"/views/blog/editBlogPost.html",controller:"EditBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}],thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}]}}).state("blog-tags-edit",{url:"/blog/editTags/",templateUrl:"/views/blog/editTags.html",controller:"EditBlogTagsCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog.main",{url:"/blog",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.page",{url:"/blog/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.archive",{url:"/blog/archives/:year/:month",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.archivePage",{url:"/blog/archives/:year/:month/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.tags",{url:"/blog/tags/:tagName",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogTagsCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],TagsShow:["$stateParams","TagsShowService",function(e,t){return t(e.tagName).$loaded()}]}}).state("blog.show",{url:"/blog/show/:slug",templateUrl:"/views/blog/blog-content.html",controller:"BlogShowCtrl",resolve:{currentAuth:authWait,thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],Blog:["BlogPosts",function(e){return e().$loaded()}]},metaTags:{title:function(e){console.log("what is Blog? ",e);var t="SISTERS - "+e[0].postTitle;return t},description:function(e){return e[0].postBody}}}).state("shows",{url:"/shows",metaTags:{title:"SISTERS - Shows",description:"Upcoming shows for Seattle duo SISTERS."},templateUrl:"/views/shows/shows.html",controller:"ShowsCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("store",{url:"/store",metaTags:{title:"SISTERS - Store",description:"The official store for Seattle duo SISTERS."},templateUrl:"/views/store/store.html",controller:"StoreCtrl",resolve:{currentAuth:authWait,allProducts:["ProductsService",function(e){return e.allProducts()}]}}).state("storeCart",{url:"/store/cart",templateUrl:"/views/store/cart.html",controller:"StoreCartCtrl",resolve:{currentAuth:authWait}}).state("storeShow",{url:"/store/:id",templateUrl:"/views/store/storeShow.html",controller:"StoreShowCtrl",resolve:{currentAuth:authWait,oneProduct:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id)}]}}).state("checkout",{templateUrl:"/views/store/checkoutTemplate.html",controller:"CheckoutTemplateCtrl",resolve:{currentAuth:authWait}}).state("checkout.address",{url:"/store/checkout/address",templateUrl:"/views/store/checkoutAddress.html",controller:"StoreAddressCtrl",resolve:{currentAuth:authWait}}).state("checkout.payment",{url:"/store/checkout/payment",templateUrl:"/views/store/checkoutPayment.html",controller:"StorePaymentCtrl",resolve:{currentAuth:authWait,currentOrder:["CurrentOrderService",function(e){return e.get()}]}}).state("checkout.confirm",{url:"/store/checkout/confirm",templateUrl:"/views/store/checkoutConfirm.html",controller:"StoreConfirmCtrl",resolve:{currentAuth:authWait}}).state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}),o.html5Mode(!0)}]).filter("cut",function(){return function(e,t,o,a,r){var n=angular.element("<div/>").html(e);console.log("source: ",n);var s=n.text().length;console.log("length: ",s)}}).filter("trustAsResourceUrl",["$sce",function(e){return function(t){return e.trustAsResourceUrl("http://www.youtube.com/embed/"+t)}}]).filter("MomentFilter",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do, YYYY")}}]).filter("tooOld",function(){return function(e){var t=moment().unix(),o=[];return angular.forEach(e,function(e){var a=e.unixDate/1e3;t-a<=86400&&o.push(e)}),o}}).filter("DeliveryEstDate",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do")}}]).filter("timeAgo",["moment",function(){return function(e){return moment(e).fromNow()}}]).filter("centsToDollars",function(){return function(e){return e/100}}),angular.module("SistersCtrls",["SistersServices"]).controller("MainCtrl",["$scope","$state","$timeout","$http",function(e,t,o,a){e.$on("loadMainContainer",function(t,o){"loaded"===o?e.mainLoaded=!0:e.mainLoaded=!1})}]).controller("HomeCtrl",["$scope","$state","$timeout","$http","LoadedService",function(e,t,o,a,r){var n=document.getElementById("main");n.style.backgroundColor="rgba(247, 237, 245, 0)",n.style.width="",n.style.padding="",n.style.paddingBottom="400px",e.loaded=r.get();var s=window.innerWidth;!e.loaded&&s>806?o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500):o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},2500),e.mailchimpSubmit=function(t,o,r){if(t.$valid){e.isPopup=!1;var n="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+o+"&c=JSON_CALLBACK";a.jsonp(n).then(function(t){console.log(t),e.user={},r&&(e.mailConfirm=!0)},function(e){console.log(e)})}}}]).controller("AboutCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 1)",a.style.padding="0 0 176px 0",a.style.width="100%",e.$emit("loadMainContainer","loaded")}]).controller("ContactCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 0)",a.style.padding="",a.style.width="",e.$emit("loadMainContainer","loaded")}]).controller("PressCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 0)",a.style.padding="0 0 176px 0",a.style.width="90%",e.$emit("loadMainContainer","loaded")}]),angular.module("SistersCtrls").controller("LoginCtrl",["$scope","$state","Auth",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.submitted=!1,e.logged=!1,o.$onAuthStateChanged(function(o){o?(e.logged=!0,t.go("home")):console.log("Not logged in.")}),e.user={},e.login=function(){e.submitted=!0,e.firebaseUser=null,o.$signInWithEmailAndPassword(e.user.email,e.user.password).then(function(t){e.firebaseUser=t}).catch(function(e){console.error("Authentication failed:",e)})}}]),angular.module("SistersCtrls").controller("NewBlogCtrl",["$scope","$state","$http","Auth","BlogPosts","AllTags","HelperService","SubmitImage","moment",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.BlogPosts=r(),e.tags=n,e.checkedTags={},e.data={},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){console.log("submit clicked"),console.log("what is post? ",e.post),"image"===e.data.mediaSelect?l(e.post,e.BlogPosts,e.data.image,u):"youtube"===e.data.mediaSelect&&(e.data.youtube=s.parseYouTube(e.data.youtube),u(e.post,e.BlogPosts,null,e.data.youtube))},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.resizeImg=function(e){s.imgResize(e)},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})};var u=function(o,a,r,n){var l=s.slugify(o.title),c=(new Date).getTime(),u=i(c).format("YYYY"),d=i(c).format("MMMM"),g={};for(var m in e.checkedTags)g[m]=e.checkedTags[m];var h={postTitle:o.title,slug:l,postBody:o.postBody,youtube:n?n:null,img:r?r:null,tags:g,timestamp:c};console.log("thisPost: ",h),a.$add(h).then(function(e){var o=e.key,a={key:o};firebase.database().ref("archives/"+u+"/"+d+"/"+o).set(a),t.go("blog.main")})}}]).controller("EditBlogCtrl",["$scope","$state","$timeout","$stateParams","SendDataService","AllTags","thisPost","HelperService","SubmitImage","$uibModal","$log","BlogPosts",function(e,t,o,a,r,n,s,l,i,c,u,d){var g=document.getElementById("main");if(g.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.data={},e.postArray=s,e.post=s[0],e.originalTags=angular.copy(e.post.tags),e.tags=n,e.post.youtube){console.log(e.post.youtube);var m=e.post.youtube;e.data.youtube="https://www.youtube.com/watch?v="+m}e.confirmBlogDelete=function(e){var t=c.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/deleteBlogConfirmModal.html",controller:"DeleteBlogConfirmCtrl",size:"sm",resolve:{Post:e}});t.result.then(function(){console.log("submitted modal")},function(){u.info("Modal dismissed at: "+new Date)})},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){"image"===e.data.mediaSelect&&e.data.image?i(e.post,e.postArray,e.data.image,h):"image"!==e.data.mediaSelect||e.data.image?"youtube"===e.data.mediaSelect&&(e.data.youtube=l.parseYouTube(e.data.youtube),h(e.post,e.BlogPosts,null,e.data.youtube)):h(e.post,e.BlogPosts,e.post.img,null)};var h=function(a,r,n,s){var i=l.slugify(a.postTitle);console.log(i);var c=moment(a.timestamp).format("YYYY"),u=moment(a.timestamp).format("MMMM"),d={};for(var g in a.tags)d[g]=a.tags[g];a.slug=i,a.tags=d,a.youtube=s?s:null,a.img=n?n:null;var m={postTitle:a.postTitle,slug:i,postBody:a.postBody,youtube:a.youtube,img:a.img,tags:d,timestamp:a.timestamp};e.postArray.$save(a).then(function(a){var r=a.key;firebase.database().ref("archives/"+c+"/"+u+"/"+r).remove(),firebase.database().ref("archives/"+c+"/"+u+"/"+r).set(m);for(g in e.originalTags)if(e.originalTags[g]===!0){var n="tags/"+g+"/posts/"+r;firebase.database().ref(n).remove().then(function(e){}).catch(function(e){console.log("Remove failed: "+e.message)})}else console.log(g+" not a tag for old edit!");o(function(){for(g in m.tags)m.tags[g]===!0?firebase.database().ref("tags/"+g+"/posts/"+r).set(m):console.log(g+" not a tag for new edit!")},100),t.go("blog.main")})}}]).controller("EditBlogTagsCtrl",["$scope","$uibModalInstance","tag","Blog",function(e,t,o,a){e.prompted=!1,e.tag=angular.copy(o),console.log(o),e.ok=function(o){var a={name:e.tag.name};firebase.database().ref("/tags/"+e.tag.$id).update(a),t.close()},e.cancel=function(){t.dismiss("cancel")},e.deletePrompt=function(){e.prompted=!0},e.delete=function(o){if("no"===o)e.prompted=!1;else if("yes"===o){firebase.database().ref("/tags/"+e.tag.$id).remove();for(var r=0;r<a.length;r++){var n=a[r].tags;n[e.tag.$id]===!0&&(n[e.tag.$id]=null,firebase.database().ref("/blog_posts/"+a[r].$id+"/tags").update(n))}t.close()}}}]).controller("DeleteBlogConfirmCtrl",["$scope","$uibModalInstance","Post","moment","$location",function(e,t,o,a,r){console.log(o),e.yes=function(){var e=a(o.timestamp).format("YYYY"),n=a(o.timestamp).format("MMMM");console.log(n+" of "+e),firebase.database().ref("blog_posts/"+o.$id).remove(),firebase.database().ref("archives/"+e+"/"+n+"/"+o.$id).remove(),t.close(),r.url("/blog")},e.no=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("BlogMasterCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService","TwitterFactory",function(e,t,o,a,r,n,s,l,i,c,u,d){e.loadedInsta=!1,e.loadedTwitter=!1,e.$emit("loadMainContainer","loaded"),c.then(function(t){e.photos=t.data,e.loadedInsta=!0,e.loadedTwitter&&(e.loaded=!0)}),d.then(function(t){console.log(t),e.tweetDate=t.allTweetData.created_at,e.twitterUser=t.allTweetData.user.name,e.twitterHandle=t.allTweetData.user.screen_name,e.tweetId=t.allTweetData.id_str,e.tweet=t.tweetBody,e.favorites=t.favorites,e.retweets=t.retweets,e.loadedTwitter=!0,e.loadedInsta&&(e.loaded=!0)}),e.enable=!0,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("BlogCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService",function(e,t,o,a,r,n,s,l,i,c,u){var d=document.getElementById("main");d.style.backgroundColor="rgba(252, 234, 240, .9)",d.style.width="",d.style.padding="",e.$emit("loadMainContainer","loaded"),e.allTags=u(),e.location=r.$$path,c.then(function(t){e.photos=t.data,e.loaded=!0}),e.enable=!0,e.parseTitle=i.titleToURL,e.allPosts=l,e.page=n.page||0,e.pageUp="/blog/"+(parseInt(e.page)+1),e.pageDown="/blog/"+i.pageDown(e.page),e.length=l.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=l.slice(e.first,e.last),e.editPost=function(e){r.url("/blog/edit/"+e)}}]).controller("BlogArchiveCtrl",["$scope","$state","$timeout","$stateParams","$location","Blog","Archive","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=r.$$path,e.allTags=c(),e.enable=!0,e.fullBlog=n;for(var u=[],d=0;d<s.length;d++)for(var g=s[d].$id,m=0;m<n.length;m++){var h=n[m].$id;g===h&&u.push(n[m])}e.allPosts=u,e.params=a,e.parseTitle=i.titleToURL,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=a.page||0,e.pageUp="/blog/archives/"+a.year+"/"+a.month+"/"+(parseInt(e.page)+1),e.pageDown="/blog/archives/"+a.year+"/"+a.month+"/"+i.pageDown(e.page),e.length=e.allPosts.length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=e.allPosts.slice(e.first,e.last),o(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);r.url("/blog/edit/"+t)}}]).controller("BlogTagsCtrl",["$scope","$state","$stateParams","$location","$timeout","Blog","TagsShow","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,s,l,i,c){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=c(),e.enable=!0,e.tagName=s[0].name;for(var u=s[0].$id,d=[],g=0;g<n.length;g++){var m=n[g].tags;m[u]&&d.push(n[g])}e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=o.page||0,e.pageUp="/blog/tags/"+o.tagName+"/"+(parseInt(e.page)+1),e.pageDown="/blog/tags/"+o.tagName+"/"+i.pageDown(e.page),e.length=length,e.first=i.findFirst(e.length,e.page),e.last=e.length-4*e.page,console.log("Last: ",e.last),e.posts=d.slice(e.first,e.last),console.log(e.posts),r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=i.titleToURL(e.postTitle);a.url("/blog/edit/"+t)}}]).controller("BlogShowCtrl",["$scope","$state","$stateParams","$location","$timeout","thisPost","Blog","AllTagsService",function(e,t,o,a,r,n,s,l){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=l(),e.enable=!1,e.recentPosts=s,console.log(e.recentPosts),e.posts=n,e.allPosts=n,r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0})}]).controller("BlogSidebarCtrl",["$scope","$state","$stateParams","$timeout","ArchiveService","AllTagsService","BlogPosts","HelperService","$uibModal","$log",function(e,t,o,a,r,n,s,l,i,c){e.recentPosts=s(),e.parseTitle=l.titleToURL,e.years=r.years(),e.years.$loaded().then(function(){}),e.allTags=n(),e.newBlogPost=function(){t.go("blog-new")},e.editTag=function(e){var t=i.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/editTagsModal.html",controller:"EditBlogTagsCtrl",size:"lg",resolve:{Blog:["BlogPosts",function(e){return e().$loaded()}],tag:e}});t.result.then(function(){console.log("submitted modal")},function(){c.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("editModalCtrl",["$scope","$uibModalInstance","editShow","index","$firebaseArray",function(e,t,o,a,r){e.shows=o,e.show=o[a],console.log("index is ",a),e.dateObj=new Date(1e3*e.show.unix),console.log(e.dateObj),e.ok=function(){e.show.date=moment(e.dateObj).format("ddd, MMMM Do"),e.show.unix=e.dateObj.getTime()/1e3,e.shows.$save(e.show).then(function(e){console.log("success")},function(e){console.log("Error:",e)}),t.close()},e.cancel=function(){t.dismiss("cancel")},e.delete=function(){e.shows.$remove(e.show).then(function(e){console.log("successful delete: ",e)},function(e){console.log("error: ",e)}),t.close()}}]).controller("newModalCtrl",["$scope","$uibModalInstance","$firebaseArray",function(e,t,o){e.show={};var a=firebase.database().ref("shows");e.showsArray=o(a),e.ok=function(){var o=moment(e.show.showDate).format("ddd, MMMM Do"),a=e.show.showDate.getTime()/1e3;console.log(o);var r={date:o,unix:a,location:e.show.showLocation,venue:e.show.venue,venueLink:e.show.venueLink||"",ticketLink:e.show.ticketLink||""};console.log(r),e.showsArray.$add(r),t.close()},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("NavCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage","$location","$window",function(e,t,o,a,r,n,s,l,i,c){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.user={},e.mailConfirm=!1;var u=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,d=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e.height=d;var g=document.getElementById("mobile-background-div");u<900?g.style.height=d+"px":g.style.height="0px",!e.loaded&&u>806?e.mobileWidth=!1:e.mobileWidth=!0,t(function(){if(u>=678&&null===e.firebaseUser&&"/login"!==i.$$path){if(console.log("entering popup"),!document.getElementById("overlayMail")){var t=document.createElement("div");t.id="overlayMail",t.className="overlay-start";var o=document.body,a=document.querySelector("#pop-up");console.log(o.scrollHeight),t.style.height=o.scrollHeight+"px",a.appendChild(t);var r=document.querySelector("#overlayMail");r.classList.add("active")}e.isPopup=!0}},6e3),e.closePopup=function(){e.isPopup=!1},e.toStore=function(){e.isPopup=!1,t(function(){c.open("https://iheartsisters.bandcamp.com/")},300)},e.toggle=!0;var m=window.innerWidth;m>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("FooterCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.logout=function(){n.$signOut()},e.login=function(){s.go("login")};var i=window.innerWidth;i>806?t(function(){e.fade=!0},100):e.fade=!0}]).controller("MailModalCtrl",["$scope","$timeout","$uibModal","$uibModalInstance","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,s,l){e.close=function(){a.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("ShowsCtrl",["$scope","$state","currentAuth","$uibModal","$log","$firebaseArray","moment","Auth","getShows",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(255, 255, 255, .9)",c.style.width="",c.style.padding="",e.$emit("loadMainContainer","loaded"),e.shows=i,e.auth=l,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.open=function(t,o){var n=a.open({animation:!0,backdrop:!0,templateUrl:"/views/shows/"+t+"ShowModal.html",controller:t+"ModalCtrl",size:"lg",resolve:{editShow:function(){return e.shows},index:o}});n.result.then(function(t){e.selected=t},function(){r.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("StoreCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","allProducts","ProductsService",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",i.style.width="",i.style.padding="",e.loaded=!1,e.products=s,e.showProduct=function(e){t.go("storeShow",{id:e})},a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]).controller("StoreCartCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage",function(e,t,o,a,r,n){var s=document.getElementById("main");s.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.toCheckout=function(){r.url("/store/checkout/address")},e.continue=function(){r.url("/store")}}]).controller("StoreShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","oneProduct",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),e.product=l,e.images=l.images;var c=e.images[0];e.skus=e.product.skus.data,e.data={},e.data.selected=e.product.skus.data[0];var u=document.querySelector(".main-product-photo img");u.src=e.images[0],e.isActiveImg=function(){return this.img===c},e.changeActive=function(){c=this.img,u.src=this.img}}]).controller("CheckoutTemplateCtrl",["$scope","$state","$http","$timeout","$location","$localStorage",function(e,t,o,a,r,n){e.$emit("loadMainContainer","loaded"),e.$storage=n,e.$on("cartChange",function(t,o){e.showPath=o}),e.showPath||(e.showPath=e.$storage.pathCount)}]).controller("StoreAddressCtrl",["$scope","$state","$window","$timeout","$http","$location","$localStorage","ngCart","$rootScope","CurrentOrderService",function(e,t,o,a,r,n,s,l,i,c){var u=document.getElementById("main");u.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=s,e.cartItems=l.getItems(),i.path=n.$$path,(!e.$storage.pathCount||e.$storage.pathCount<1)&&(e.$storage.pathCount=0,e.$emit("cartChange",e.$storage.pathCount)),e.loaded=[],e.data={shipping:{country:{}},billing:{country:{}}},e.mailingListAdd=!0,e.shippingSameBool=!1,r.get("/js/JSON/countries.json").success(function(t){e.countries=t,e.data.shipping.country=e.countries[0],e.data.billing.country=e.countries[0],e.loaded.push("go")}),r.get("/js/JSON/states.json").success(function(t){e.states=t,e.loaded.push("go")}),r.get("/js/JSON/provinces.json").success(function(t){e.provinces=t,e.loaded.push("go")}),e.isShippingSame=function(){e.data.shippingSame?(e.data.billing=e.data.shipping,e.shippingSameBool=!0):(e.data.billing={},e.shippingSameBool=!1)},e.countryChange=function(t){"US"===t.code?e.shippingType=e.shipRates.domestic:e.shippingType=e.shipRates.international},e.submitForm=function(t){if(t.$valid){e.loaded=[];var o=e.data.shipping;e.data.billing;e.copyItems=angular.copy(e.cartItems);for(var a=0;a<e.copyItems.length;a++)delete e.copyItems[a]._data,delete e.copyItems[a].attr;e.$storage.billingAddress=e.data.billing;var s={url:"/stripe/createOrder",method:"POST",params:{order:{currency:"usd",items:e.copyItems,shipping:{name:o.name,address:{line1:o.address1,line2:o.address2||null,city:o.city,state:o.stateProvince.short||null,country:o.country.code,postal_code:o.postalCode}},email:o.email,metadata:{taxRate:l.getTaxRate()}}}};r(s).then(function(t){"created"===t.data.status?(e.$storage.mailingList=e.mailingListAdd,e.$storage.addressSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.addressSubmit=!0,e.$storage.orderData=t,e.$evalAsync(function(){n.url("/store/checkout/payment")})):(e.loaded=[1,2,3],console.log(t.data),e.errorMessage=t.data.message)},function(e){console.log("error ",e)})}else console.log("form invalid!!")},e.getTaxRate=function(e,t,a){if("US"===e.code&&"WA"===t.short&&a)if(o.localStorage.currentWaRate){var n=parseFloat(o.localStorage.currentWaRate);l.setTaxRate(n)}else{var s={url:"/taxRate",method:"GET",params:{country:"usa",postal:a}};r(s).then(function(e){l.setTaxRate(e.data.totalRate),o.localStorage.currentWaRate=e.data.totalRate},function(e){console.log("error ",e)})}else"US"===e.code&&"WA"!==t.short?l.setTaxRate(0):"US"!==e.code&&l.setTaxRate(0)}}]).controller("StorePaymentCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder",function(e,t,o,a,r,n,s,l,i){var c=document.getElementById("main");c.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),l.path=r.$$path,e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.shipOptions=e.$storage.orderData.data.shipping_methods,e.savedSelectedShip=e.$storage.orderData.data.selected_shipping_method;for(var u=0;u<e.shipOptions.length;u++)if(e.shipOptions[u].id===e.savedSelectedShip){e.selectedShip=e.shipOptions[u];break}e.$watch("selectedShip",function(t,o,a){s.setShipping(e.selectedShip.amount)},!1),a(function(){e.loaded=!0}),e.submitForm=function(t){e.loaded=!1,Stripe.card.createToken({number:e.number,cvc:e.cvc,exp:e.expiry,name:e.$storage.billingAddress.name,address_line1:e.$storage.billingAddress.address1,address_line2:e.$storage.billingAddress.address2||null,address_city:e.$storage.billingAddress.city,address_state:e.$storage.billingAddress.stateProvince.short||null,address_zip:e.$storage.billingAddress.postalCode,address_country:e.$storage.billingAddress.country.code},d)};var d=function(t,a){if(a.error);else{token=a;var n={url:"/stripe/updateShipping",method:"POST",params:{token:token,orderId:e.$storage.orderData.data.id,selectedShip:e.selectedShip.id}};o(n).then(function(t){e.$storage.paymentSubmit||(e.$storage.pathCount++,e.$emit("cartChange",e.$storage.pathCount)),e.$storage.paymentSubmit=!0,e.$storage.orderData=t,e.$storage.tokenData=token,r.url("/store/checkout/confirm")},function(t){e.loaded=!0,console.log("error ",t)})}}}]).controller("StoreConfirmCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope",function(e,t,o,a,r,n,s,l){var i=document.getElementById("main");i.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=n,e.pathCount=parseInt(e.$storage.pathCount),e.orderComplete=!1,l.path=r.$$path,e.ngCart=s,e.token=e.$storage.tokenData,e.order=e.$storage.orderData.data;for(var c=e.order.items,u=0;u<c.length;u++)"shipping"===c[u].type&&(e.shipService=c[u].description);a(function(){e.loaded=!0}),e.createCharge=function(){e.loaded=!1;var t={url:"/stripe/orderComplete",method:"POST",params:{orderId:e.order.id,token:e.token.id}};o(t).then(function(t){e.orderComplete=!0,e.$storage.mailingList&&d(),s.setTaxRate(),s.setShipping(),s.empty(),n.$reset()},function(t){e.loaded=!0,console.log("error ",t)})};var d=function(){var t="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+e.$storage.orderData.data.email+"&c=JSON_CALLBACK";o.jsonp(t).then(function(e){},function(e){console.log(e)})}}]),angular.module("SistersDirectives",[]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,t,o){t.bind("change",function(t){var o=new FileReader;o.onload=function(t){e.$apply(function(){e.fileread=t.target.result})},o.readAsDataURL(t.target.files[0])})}}}]).directive("countryName",["$http",function(e){return{template:"<span>{{name}}</span>",scope:{countryCode:"="},link:function(t){e.get("/js/JSON/countries.json").then(function(e){for(var o=e.data,a=0;a<o.length;a++)if(o[a].code===t.countryCode){t.name=o[a].name;break}},function(e){t.name="unknown"})}}}]),angular.module("SistersServices",["ngResource"]).factory("LoadedService",function(){function e(e){o=e}function t(){return o}var o=!1;return{set:e,get:t}}).factory("Auth",["$firebaseAuth",function(e){return e()}]).factory("ProductsService",["$http","$q",function(e,t){return{allProducts:function(){var o=t.defer();return e.get("/stripe/allProducts").success(function(e){o.resolve(e.data)}),o.promise},oneProduct:function(o){var a=t.defer(),r={method:"GET",url:"/stripe/oneProduct",params:{productId:o}};return e(r).success(function(e){a.resolve(e)}),a.promise}}}]).service("InstagramFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/instagram",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).service("TwitterFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/twitter",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).factory("DownloadKeyService",function(){return function(e){console.log("hash is "+e),firebase.database().ref("downloadKeys/"+e).once("value").then(function(e){var t=e.val();console.log(t)})}}).factory("GetShows",["$firebaseArray","moment",function(e,t){var o=t().unix();return function(){var t=firebase.database().ref("shows").orderByChild("unix").startAt(o);return e(t)}}]).factory("BlogPosts",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("blog_posts").orderByChild("timestamp");return e(t)}}]).factory("ThisPostService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("blog_posts"),a=o.orderByChild("slug").equalTo(t);return e(a)}}]).factory("AllTagsService",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tags");return e(t)}}]).factory("TagsShowService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tags"),a=o.orderByChild("name").equalTo(t);return e(a)}}]).factory("ArchiveService",["$firebaseArray",function(e){
return{years:function(){var t=firebase.database().ref("archives");return e(t)},months:function(t){var o=firebase.database().ref("archives/"+t);return e(o)}}}]).factory("ArchiveShowService",["$firebaseArray",function(e){return function(t,o){var a=firebase.database().ref("archives/"+t+"/"+o);return e(a)}}]).factory("SendDataService",function(){function e(e){o=e}function t(){return o}var o={};return{set:e,get:t}}).factory("CurrentOrderService",["$window",function(e){function t(t){e.localStorage.setItem("orderData",angular.toJson(t))}function o(){var t=angular.fromJson(e.localStorage.getItem("orderData"));return JSON.parse(t)}return{set:t,get:o}}]).factory("HelperService",["moment","$q",function(e,t){return{parseYouTube:function(e){var t=e.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);return null!=t?t[1]:void console.log("The youtube url is not valid.")},base64MimeType:function(e){var t=null;if("string"!=typeof e)return t;var o=e.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);return o&&o.length&&(t=o[1]),console.log("image type is ",t),t},getBase64Image:function(e){var t=e.replace(/^data:image\/(png|jpeg);base64,/,"");return t},b64toBlob:function(e,t,o){t=t||"",o=o||512;for(var a=atob(e),r=[],n=0;n<a.length;n+=o){for(var s=a.slice(n,n+o),l=new Array(s.length),i=0;i<s.length;i++)l[i]=s.charCodeAt(i);var c=new Uint8Array(l);r.push(c)}var u=new Blob(r,{type:t});return u},pageDown:function(e){return e<2?"":e-1},findFirst:function(e,t){var o=e-4*(1+t);return o>=0?o:0},getToday:function(){var t=e().unix();return t},titleToURL:function(e){return e.split(" ").join("-")},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},imgResize:function(e){console.log("inside resize!!");var o=t.defer(),a=new Image;return a.src=e,a.onload=function(){console.log(this.width+" "+this.height);var e=a.width/a.height;console.log("WHAT IS RATIO??? ",e);var t=document.createElement("canvas");if(e>=1.776&&a.height>=500){console.log("loadIMG: ",a);var r=(a.height-500)/a.height;t.height=500,t.width=a.width-a.width*r}else if(e<1.776&&a.width>=889){console.log("loadIMG: ",a);var r=(a.width-889)/a.width;t.width=889,t.height=a.height-a.height*r}else console.log("loadIMG: ",a),console.log("image is not big enough!");var n=t.getContext("2d");n.drawImage(a,0,0,t.width,t.height);var s=t.toDataURL("image/jpeg");o.resolve(s)},o.promise}}}]).factory("SubmitImage",["HelperService",function(e){return function(t,o,a,r){e.imgResize(a).then(function(a){var n=e.base64MimeType(a);console.log("TYPE IS ",n);var s=e.getBase64Image(a),l=e.b64toBlob(s,n),i={contentType:n},c=(1e32*Math.random()).toString(36),u=firebase.storage().ref(),d=u.child("blog-images/"+c).put(l,i);d.on(firebase.storage.TaskEvent.STATE_CHANGED,function(e){var t=e.bytesTransferred/e.totalBytes*100;switch(console.log("Upload is "+t+"% done"),e.state){case firebase.storage.TaskState.PAUSED:console.log("Upload is paused");break;case firebase.storage.TaskState.RUNNING:console.log("Upload is running")}},function(e){switch(e.code){case"storage/unauthorized":break;case"storage/canceled":break;case"storage/unknown":}},function(){console.log("upload finished");var e=d.snapshot.downloadURL;r(t,o,e,null)})})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIjAwIGhvbWVfY29udHJvbGxlci5qcyIsIjAxIGF1dGhfY29udHJvbGxlci5qcyIsIjAyIGJsb2dfYWRtaW5fY29udHJvbGxlci5qcyIsIjAzIGJsb2dfY29udHJvbGxlci5qcyIsIjA0IG1vZGFsX2NvbnRyb2xsZXIuanMiLCIwNSBuYXZfY29udHJvbGxlci5qcyIsIjA2IHNob3dfY29udHJvbGxlci5qcyIsIjA3IHN0b3JlX2NvbnRyb2xsZXIuanMiLCJkaXJlY3RpdmVzLmpzIiwic2VydmljZXMuanMiXSwibmFtZXMiOlsiYXV0aFdhaXQiLCJBdXRoIiwiJHdhaXRGb3JTaWduSW4iLCJhdXRoUmVxdWlyZSIsIiRyZXF1aXJlU2lnbkluIiwiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRyb290U2NvcGUiLCIkc3RhdGUiLCIkbG9jYXRpb24iLCIkd2luZG93IiwiTWV0YVRhZ3MiLCIkb24iLCJldmVudCIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJlcnJvciIsImdvIiwiZG9jdW1lbnQiLCJib2R5Iiwic2Nyb2xsVG9wIiwiZG9jdW1lbnRFbGVtZW50IiwiZ2EiLCJwYWdlIiwicGF0aCIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJVSVJvdXRlck1ldGF0YWdzUHJvdmlkZXIiLCIkcHJvdmlkZSIsInNldERlZmF1bHRUaXRsZSIsInNldERlZmF1bHREZXNjcmlwdGlvbiIsInNldFN0YXRpY1Byb3BlcnRpZXMiLCJvZzpzaXRlX25hbWUiLCJzZXRPR1VSTCIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwibWV0YVRhZ3MiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsImRvd25sb2FkS2V5IiwiRG93bmxvYWRLZXlTZXJ2aWNlIiwiJHN0YXRlUGFyYW1zIiwiaWQiLCIkbG9hZGVkIiwib25FbnRlciIsIiR0aW1lb3V0IiwiY29uc29sZSIsImxvZyIsImN1cnJlbnRBdXRoIiwiQmxvZyIsIkJsb2dQb3N0cyIsIkFsbFRhZ3MiLCJBbGxUYWdzU2VydmljZSIsInRoaXNQb3N0IiwiVGhpc1Bvc3RTZXJ2aWNlIiwic2x1ZyIsIkFyY2hpdmUiLCJBcmNoaXZlU2hvd1NlcnZpY2UiLCJ5ZWFyIiwibW9udGgiLCJUYWdzU2hvdyIsIlRhZ3NTaG93U2VydmljZSIsInRhZ05hbWUiLCJwb3N0VGl0bGUiLCJwb3N0Qm9keSIsImdldFNob3dzIiwiR2V0U2hvd3MiLCJhbGxQcm9kdWN0cyIsIlByb2R1Y3RzU2VydmljZSIsIm9uZVByb2R1Y3QiLCJjdXJyZW50T3JkZXIiLCJDdXJyZW50T3JkZXJTZXJ2aWNlIiwiZ2V0IiwiaHRtbDVNb2RlIiwiZmlsdGVyIiwidmFsdWUiLCJlbmFibGUiLCJ3b3Jkd2lzZSIsIm1heCIsInRhaWwiLCJzb3VyY2UiLCJlbGVtZW50IiwiaHRtbCIsImxlbmd0aCIsInRleHQiLCIkc2NlIiwidmFsIiwidHJ1c3RBc1Jlc291cmNlVXJsIiwibW9tZW50IiwiZm9ybWF0IiwiZXZlbnRzIiwiY3VycmVudERheSIsInVuaXgiLCJmaWx0ZXJlZCIsImZvckVhY2giLCJ0aGlzRXZlbnQiLCJ1bml4RGF0ZSIsInB1c2giLCJmcm9tTm93IiwiJHNjb3BlIiwiJGh0dHAiLCJkYXRhIiwibWFpbkxvYWRlZCIsIkxvYWRlZFNlcnZpY2UiLCJtYWluIiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsIndpZHRoIiwicGFkZGluZyIsInBhZGRpbmdCb3R0b20iLCJsb2FkZWQiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiJGVtaXQiLCJmYWRlSG9tZSIsInNldCIsIm1haWxjaGltcFN1Ym1pdCIsImZvcm0iLCJlbWFpbCIsImlzTmF2IiwiJHZhbGlkIiwiaXNQb3B1cCIsImpzb25wIiwidGhlbiIsInJlcyIsInVzZXIiLCJtYWlsQ29uZmlybSIsInN1Ym1pdHRlZCIsImxvZ2dlZCIsIiRvbkF1dGhTdGF0ZUNoYW5nZWQiLCJmaXJlYmFzZVVzZXIiLCJsb2dpbiIsIiRzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCIsInBhc3N3b3JkIiwiY2F0Y2giLCJIZWxwZXJTZXJ2aWNlIiwiU3VibWl0SW1hZ2UiLCJ0YWdzIiwiY2hlY2tlZFRhZ3MiLCJyZXNldE1lZGlhIiwieW91dHViZSIsImltYWdlIiwic3VibWl0IiwicG9zdCIsIm1lZGlhU2VsZWN0IiwiYWRkUG9zdCIsInBhcnNlWW91VHViZSIsImFkZFRhZyIsIiRhZGQiLCJuYW1lIiwibmV3VGFnIiwicmVmIiwicG9zdElkIiwia2V5IiwicmVzaXplSW1nIiwiaW1nIiwiaW1nUmVzaXplIiwiZGVsZXRlVGFnIiwiaXRlbSIsIiRyZW1vdmUiLCIkaWQiLCJwb3N0QXJyYXkiLCJzbHVnaWZ5IiwicG9zdERhdGUiLCJEYXRlIiwiZ2V0VGltZSIsIm5ld1RhZ3MiLCJwcm9wIiwidGltZXN0YW1wIiwiYXJjaGl2ZVBvc3QiLCJmaXJlYmFzZSIsImRhdGFiYXNlIiwiU2VuZERhdGFTZXJ2aWNlIiwiJHVpYk1vZGFsIiwiJGxvZyIsIm9yaWdpbmFsVGFncyIsImNvcHkiLCJ5b3V0dWJlSWQiLCJjb25maXJtQmxvZ0RlbGV0ZSIsIm1vZGFsSW5zdGFuY2UiLCJvcGVuIiwiYW5pbWF0aW9uIiwiYmFja2Ryb3AiLCJzaXplIiwiUG9zdCIsInJlc3VsdCIsImluZm8iLCJ1cGRhdGVQb3N0IiwiJHNhdmUiLCJyZW1vdmUiLCJtZXNzYWdlIiwiJHVpYk1vZGFsSW5zdGFuY2UiLCJ0YWciLCJwcm9tcHRlZCIsIm9rIiwibmV3TmFtZSIsInVwZGF0ZSIsImNsb3NlIiwiY2FuY2VsIiwiZGlzbWlzcyIsImRlbGV0ZVByb21wdCIsImRlbGV0ZSIsInJlc3BvbnNlIiwiaSIsInRoaXNQb3N0VGFncyIsInllcyIsIm5vIiwiSW5zdGFncmFtRmFjdG9yeSIsIlR3aXR0ZXJGYWN0b3J5IiwibG9hZGVkSW5zdGEiLCJsb2FkZWRUd2l0dGVyIiwicGhvdG9zIiwidHdlZXREYXRlIiwiYWxsVHdlZXREYXRhIiwiY3JlYXRlZF9hdCIsInR3aXR0ZXJVc2VyIiwidHdpdHRlckhhbmRsZSIsInNjcmVlbl9uYW1lIiwidHdlZXRJZCIsImlkX3N0ciIsInR3ZWV0IiwidHdlZXRCb2R5IiwiZmF2b3JpdGVzIiwicmV0d2VldHMiLCJhdXRoIiwiYWxsVGFncyIsImxvY2F0aW9uIiwiJCRwYXRoIiwicGFyc2VUaXRsZSIsInRpdGxlVG9VUkwiLCJhbGxQb3N0cyIsInBhZ2VVcCIsInBhcnNlSW50IiwicGFnZURvd24iLCJmaXJzdCIsImZpbmRGaXJzdCIsImxhc3QiLCJwb3N0cyIsInNsaWNlIiwiZWRpdFBvc3QiLCJmdWxsQmxvZyIsImoiLCJibG9nS2V5IiwicGFyYW1zIiwidGl0bGVQYXJzZWQiLCJ0aGlzVGFnIiwic2VsZWN0UG9zdHMiLCJyZWNlbnRQb3N0cyIsIkFyY2hpdmVTZXJ2aWNlIiwieWVhcnMiLCJuZXdCbG9nUG9zdCIsImVkaXRUYWciLCJlZGl0U2hvdyIsImluZGV4IiwiJGZpcmViYXNlQXJyYXkiLCJzaG93cyIsInNob3ciLCJkYXRlT2JqIiwiZGF0ZSIsInNob3dzUmVmIiwic2hvd3NBcnJheSIsInRoaXNEYXRlIiwic2hvd0RhdGUiLCJ0aGlzVW5peCIsIm9iamVjdCIsInNob3dMb2NhdGlvbiIsInZlbnVlIiwidmVudWVMaW5rIiwidGlja2V0TGluayIsIiRzZXNzaW9uU3RvcmFnZSIsInciLCJjbGllbnRXaWR0aCIsImgiLCJpbm5lckhlaWdodCIsImNsaWVudEhlaWdodCIsImhlaWdodCIsIm1vYmlsZUJHIiwibW9iaWxlV2lkdGgiLCJkaXYiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwicG9wVXAiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsSGVpZ2h0IiwiYXBwZW5kQ2hpbGQiLCJvdmVybGF5IiwiY2xhc3NMaXN0IiwiYWRkIiwiY2xvc2VQb3B1cCIsInRvU3RvcmUiLCJ0b2dnbGUiLCJmYWRlIiwibG9nb3V0IiwiJHNpZ25PdXQiLCJ3aGljaFBhZ2UiLCJzZWxlY3RlZEl0ZW0iLCJzZWxlY3RlZCIsInByb2R1Y3RzIiwic2hvd1Byb2R1Y3QiLCJ0b0NoZWNrb3V0IiwiY29udGludWUiLCJwcm9kdWN0IiwiaW1hZ2VzIiwiY3VycmVudEFjdGl2ZVNyYyIsInNrdXMiLCJtYWluSW1nIiwic3JjIiwiaXNBY3RpdmVJbWciLCJ0aGlzIiwiY2hhbmdlQWN0aXZlIiwiJGxvY2FsU3RvcmFnZSIsIiRzdG9yYWdlIiwic2hvd1BhdGgiLCJwYXRoQ291bnQiLCJuZ0NhcnQiLCJjYXJ0SXRlbXMiLCJnZXRJdGVtcyIsInNoaXBwaW5nIiwiY291bnRyeSIsImJpbGxpbmciLCJtYWlsaW5nTGlzdEFkZCIsInNoaXBwaW5nU2FtZUJvb2wiLCJzdWNjZXNzIiwiY291bnRyaWVzIiwic3RhdGVzIiwicHJvdmluY2VzIiwiaXNTaGlwcGluZ1NhbWUiLCJzaGlwcGluZ1NhbWUiLCJjb3VudHJ5Q2hhbmdlIiwiY29kZSIsInNoaXBwaW5nVHlwZSIsInNoaXBSYXRlcyIsImRvbWVzdGljIiwiaW50ZXJuYXRpb25hbCIsInN1Ym1pdEZvcm0iLCJzaGlwIiwiY29weUl0ZW1zIiwiX2RhdGEiLCJhdHRyIiwiYmlsbGluZ0FkZHJlc3MiLCJyZXEiLCJtZXRob2QiLCJvcmRlciIsImN1cnJlbmN5IiwiaXRlbXMiLCJhZGRyZXNzIiwibGluZTEiLCJhZGRyZXNzMSIsImxpbmUyIiwiYWRkcmVzczIiLCJjaXR5Iiwic3RhdGVQcm92aW5jZSIsInNob3J0IiwicG9zdGFsX2NvZGUiLCJwb3N0YWxDb2RlIiwibWV0YWRhdGEiLCJ0YXhSYXRlIiwiZ2V0VGF4UmF0ZSIsInN0YXR1cyIsIm1haWxpbmdMaXN0IiwiYWRkcmVzc1N1Ym1pdCIsIm9yZGVyRGF0YSIsIiRldmFsQXN5bmMiLCJlcnJvck1lc3NhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJjdXJyZW50V2FSYXRlIiwicGFyc2VkVGF4IiwicGFyc2VGbG9hdCIsInNldFRheFJhdGUiLCJwb3N0YWwiLCJ0b3RhbFJhdGUiLCJzaGlwT3B0aW9ucyIsInNoaXBwaW5nX21ldGhvZHMiLCJzYXZlZFNlbGVjdGVkU2hpcCIsInNlbGVjdGVkX3NoaXBwaW5nX21ldGhvZCIsInNlbGVjdGVkU2hpcCIsIiR3YXRjaCIsIm5ld1ZhbHVlIiwib2xkVmFsdWUiLCJzY29wZSIsInNldFNoaXBwaW5nIiwiYW1vdW50IiwiU3RyaXBlIiwiY2FyZCIsImNyZWF0ZVRva2VuIiwibnVtYmVyIiwiY3ZjIiwiZXhwIiwiZXhwaXJ5IiwiYWRkcmVzc19saW5lMSIsImFkZHJlc3NfbGluZTIiLCJhZGRyZXNzX2NpdHkiLCJhZGRyZXNzX3N0YXRlIiwiYWRkcmVzc196aXAiLCJhZGRyZXNzX2NvdW50cnkiLCJoYW5kbGVTdHJpcGUiLCJ0b2tlbiIsIm9yZGVySWQiLCJwYXltZW50U3VibWl0IiwidG9rZW5EYXRhIiwib3JkZXJDb21wbGV0ZSIsInR5cGUiLCJzaGlwU2VydmljZSIsImNyZWF0ZUNoYXJnZSIsImVtcHR5IiwiJHJlc2V0IiwiZGlyZWN0aXZlIiwiZmlsZXJlYWQiLCJsaW5rIiwiYXR0cmlidXRlcyIsImJpbmQiLCJjaGFuZ2VFdmVudCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJsb2FkRXZlbnQiLCIkYXBwbHkiLCJ0YXJnZXQiLCJyZWFkQXNEYXRhVVJMIiwiZmlsZXMiLCJ0ZW1wbGF0ZSIsImNvdW50cnlDb2RlIiwiZXJyIiwiZmFjdG9yeSIsIiRmaXJlYmFzZUF1dGgiLCIkcSIsImRlZmVycmVkIiwiZGVmZXIiLCJwcm9taXNlIiwicHJvZHVjdElkIiwic2VydmljZSIsImNhY2hlIiwibXNnIiwicmVqZWN0IiwiaGFzaCIsIm9uY2UiLCJzbmFwc2hvdCIsInNuYXAiLCJvcmRlckJ5Q2hpbGQiLCJzdGFydEF0IiwiYmxvZ1JlZiIsInBvc3RSZWYiLCJ0aGlzUG9zdFJlZiIsImVxdWFsVG8iLCJ0YWdSZWYiLCIkZmlyZWJhc2VPYmplY3QiLCJ0YWdTaG93UmVmIiwieWVhclJlZiIsIm1vbnRocyIsIm1vbnRoUmVmIiwiYXJjaGl2ZVJlZiIsInNhdmVkRGF0YSIsInNldEl0ZW0iLCJ0b0pzb24iLCJmcm9tSnNvbiIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJ2aWRlb2lkIiwibWF0Y2giLCJiYXNlNjRNaW1lVHlwZSIsImVuY29kZWQiLCJtaW1lIiwiZ2V0QmFzZTY0SW1hZ2UiLCJkYXRhVVJMIiwiYmFzZTY0IiwicmVwbGFjZSIsImI2NHRvQmxvYiIsImI2NERhdGEiLCJjb250ZW50VHlwZSIsInNsaWNlU2l6ZSIsImJ5dGVDaGFyYWN0ZXJzIiwiYXRvYiIsImJ5dGVBcnJheXMiLCJvZmZzZXQiLCJieXRlTnVtYmVycyIsIkFycmF5IiwiY2hhckNvZGVBdCIsImJ5dGVBcnJheSIsIlVpbnQ4QXJyYXkiLCJibG9iIiwiQmxvYiIsImN1cnJlbnRQYWdlIiwiY2FsY0ZpcnN0IiwiZ2V0VG9kYXkiLCJzcGxpdCIsImpvaW4iLCJ0b1N0cmluZyIsInRvTG93ZXJDYXNlIiwibG9hZElNRyIsIkltYWdlIiwiYXNwZWN0UmF0aW8iLCJjYW52YXMiLCJwZXJjZW50Q2hhbmdlIiwiY3R4IiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsInJlc2l6ZWRSZXN1bHQiLCJ0b0RhdGFVUkwiLCJjYWxsYmFjayIsIm5ld0ltYWdlIiwiYmFzZTY0cmVzdWx0IiwiZmlsZSIsInBob3RvSWQiLCJNYXRoIiwicmFuZG9tIiwic3RvcmFnZVJlZiIsInN0b3JhZ2UiLCJ1cGxvYWRUYXNrIiwiY2hpbGQiLCJwdXQiLCJvbiIsIlRhc2tFdmVudCIsIlNUQVRFX0NIQU5HRUQiLCJwcm9ncmVzcyIsImJ5dGVzVHJhbnNmZXJyZWQiLCJ0b3RhbEJ5dGVzIiwiVGFza1N0YXRlIiwiUEFVU0VEIiwiUlVOTklORyIsImRvd25sb2FkVVJMIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxXQUFBLE9BQUEsU0FBQUMsR0FBQSxNQUFBQSxHQUFBQyxtQkFDQUMsYUFBQSxPQUFBLFNBQUFGLEdBQUEsTUFBQUEsR0FBQUcs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IjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGF1dGhXYWl0ID0gW1wiQXV0aFwiLCBmdW5jdGlvbihBdXRoKSB7IHJldHVybiBBdXRoLiR3YWl0Rm9yU2lnbkluKCk7IH1dXG52YXIgYXV0aFJlcXVpcmUgPSBbXCJBdXRoXCIsIGZ1bmN0aW9uKEF1dGgpIHsgcmV0dXJuIEF1dGguJHJlcXVpcmVTaWduSW4oKTsgfV1cblxuYW5ndWxhci5tb2R1bGUoXCJTaXN0ZXJzQXBwXCIsIFsnU2lzdGVyc0N0cmxzJywnU2lzdGVyc0RpcmVjdGl2ZXMnLCd1aS5yb3V0ZXInLCd1aS5ib290c3RyYXAnLCdmaXJlYmFzZScsJ2FuZ3VsYXJNb21lbnQnLCduZ0NhcnQnLCduZ1N0b3JhZ2UnLCdhbmd1bGFyUGF5bWVudHMnLCduZ0FuaW1hdGUnLCdwaWNhcmR5LmZvbnRhd2Vzb21lJywndGV4dEFuZ3VsYXInLCd1aS5yb3V0ZXIubWV0YXRhZ3MnLCdhbmd1bGFyLXBhcmFsbGF4J10pXG5cblxuXG4ucnVuKFtcIiRyb290U2NvcGVcIiwgXCIkc3RhdGVcIixcIiRsb2NhdGlvblwiLFwiJHdpbmRvd1wiLCdNZXRhVGFncycsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRzdGF0ZSwgJGxvY2F0aW9uLCAkd2luZG93LE1ldGFUYWdzKSB7XG4gICRyb290U2NvcGUuTWV0YVRhZ3MgPSBNZXRhVGFncztcbiAgJHJvb3RTY29wZS4kb24oXCIkc3RhdGVDaGFuZ2VFcnJvclwiLCBmdW5jdGlvbihldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcywgZXJyb3IpIHtcbiAgICAvLyBXZSBjYW4gY2F0Y2ggdGhlIGVycm9yIHRocm93biB3aGVuIHRoZSAkcmVxdWlyZVNpZ25JbiBwcm9taXNlIGlzIHJlamVjdGVkXG4gICAgLy8gYW5kIHJlZGlyZWN0IHRoZSB1c2VyIGJhY2sgdG8gdGhlIGhvbWUgcGFnZVxuICAgIGlmIChlcnJvciA9PT0gXCJBVVRIX1JFUVVJUkVEXCIpIHtcbiAgICAgICRzdGF0ZS5nbyhcImxvZ2luXCIpO1xuICAgIH1cbiAgfSk7XG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdWNjZXNzJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA9IDA7XG5cbiAgICAgICAgICAgICAgICBpZiAoISR3aW5kb3cuZ2EpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiBcbiAgICAgICAgICAgICAgICAkd2luZG93LmdhKCdzZW5kJywgJ3BhZ2V2aWV3JywgeyBwYWdlOiAkbG9jYXRpb24ucGF0aCgpIH0pO1xuXG5cbiAgfSk7XG5cbn1dKVxuXG5cblxuXG4uY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywnJGxvY2F0aW9uUHJvdmlkZXInLCdVSVJvdXRlck1ldGF0YWdzUHJvdmlkZXInLCckcHJvdmlkZScsIGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsJGxvY2F0aW9uUHJvdmlkZXIsIFVJUm91dGVyTWV0YXRhZ3NQcm92aWRlciwgJHByb3ZpZGUpe1xuICBVSVJvdXRlck1ldGF0YWdzUHJvdmlkZXJcbiAgICAgICAgLnNldERlZmF1bHRUaXRsZSgnU0lTVEVSUycpXG4gICAgICAgIC5zZXREZWZhdWx0RGVzY3JpcHRpb24oJ1NlYXR0bGUgZHVvLiBcIkRyaW5rIENoYW1wYWduZVwiLCB0aGUgZGVidXQgYWxidW0sIGNvbWluZyBzb29uIScpXG4gICAgICAgIC5zZXRTdGF0aWNQcm9wZXJ0aWVzKHtcbiAgICAgICAgICAgICAgICAnb2c6c2l0ZV9uYW1lJzogJ1NJU1RFUlMnXG4gICAgICAgICAgICB9KVxuICAgICAgICAuc2V0T0dVUkwodHJ1ZSk7XG5cblxuXG4gIFxuICBcbiAgXG4gIFxuICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XG5cbiAgJHN0YXRlUHJvdmlkZXJcbiAgLnN0YXRlKCdob21lJywge1xuICAgIHVybDogJy8nLFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdTSVNURVJTJyxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1NlYXR0bGUgZHVvLiBcIkRyaW5rIENoYW1wYWduZVwiLCB0aGUgZGVidXQgYWxidW0sIGNvbWluZyBzb29uISdcbiAgICAgICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvaG9tZS5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnSG9tZUN0cmwnXG4gIH0pXG4gIC5zdGF0ZSgnYWJvdXQnLCB7XG4gICAgdXJsOiAnL2Fib3V0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9hYm91dC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQWJvdXRDdHJsJ1xuICB9KVxuXG4gICAuc3RhdGUoJ3ByZXNzJywge1xuICAgIHVybDogJy9wcmVzcycsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvcHJlc3MuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1ByZXNzQ3RybCdcbiAgfSlcblxuICAgIC5zdGF0ZSgnY29udGFjdCcsIHtcbiAgICB1cmw6ICcvY29udGFjdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvY29udGFjdC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQ29udGFjdEN0cmwnXG4gIH0pXG5cbiAgLnN0YXRlKCdkb3dubG9hZCcsIHtcbiAgICB1cmw6ICcvZG93bmxvYWQvOmlkJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImRvd25sb2FkS2V5XCI6IGZ1bmN0aW9uKERvd25sb2FkS2V5U2VydmljZSwgJHN0YXRlUGFyYW1zKXtcbiAgICAgICAgcmV0dXJuIERvd25sb2FkS2V5U2VydmljZSgkc3RhdGVQYXJhbXMuaWQpLiRsb2FkZWQoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uRW50ZXI6IGZ1bmN0aW9uKCRzdGF0ZSwgJHN0YXRlUGFyYW1zLCAkdGltZW91dCwgZG93bmxvYWRLZXkpIHtcbiAgICAgIGlmIChkb3dubG9hZEtleSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJzdWNjZXNzIVwiKTtcbiAgICAgICAgICAgICAgICAgIC8vICRzdGF0ZS5nbygnZG93bmxvYWRDb25maXJtJyk7XG4gICAgICAgICAgICAgIH0sIDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmFpbGVkIVwiKTtcbiAgICAgICAgICAgICAgICAgIC8vICRzdGF0ZS5nbygnZG93bmxvYWRGYWlsZWQnKTtcbiAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG5cbiAgLnN0YXRlKCdibG9nJywge1xuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvYmxvZy5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQmxvZ01hc3RlckN0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgICBcIkJsb2dcIjogZnVuY3Rpb24oQmxvZ1Bvc3RzKXtcbiAgICAgICAgcmV0dXJuIEJsb2dQb3N0cygpLiRsb2FkZWQoKTtcbiAgICAgIH0gICAgICBcbiAgICB9XG4gIH0pXG5cbiAgLnN0YXRlKCdibG9nLW5ldycsIHtcbiAgICB1cmw6ICcvYmxvZy9uZXcnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvbmV3QmxvZ1Bvc3QuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ05ld0Jsb2dDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhSZXF1aXJlLFxuICAgICAgXCJBbGxUYWdzXCI6IGZ1bmN0aW9uKEFsbFRhZ3NTZXJ2aWNlKXtcbiAgICAgICAgcmV0dXJuIEFsbFRhZ3NTZXJ2aWNlKCkuJGxvYWRlZCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgLnN0YXRlKCdibG9nLWVkaXQnLCB7XG4gICAgdXJsOiAnL2Jsb2cvZWRpdC86c2x1ZycsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9lZGl0QmxvZ1Bvc3QuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0VkaXRCbG9nQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoUmVxdWlyZSxcbiAgICAgIFwiQWxsVGFnc1wiOiBmdW5jdGlvbihBbGxUYWdzU2VydmljZSl7XG4gICAgICAgIHJldHVybiBBbGxUYWdzU2VydmljZSgpLiRsb2FkZWQoKTtcbiAgICAgIH0sXG4gICAgICBcInRoaXNQb3N0XCI6IGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgVGhpc1Bvc3RTZXJ2aWNlKXtcbiAgICAgICAgcmV0dXJuIFRoaXNQb3N0U2VydmljZSgkc3RhdGVQYXJhbXMuc2x1ZykuJGxvYWRlZCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgLnN0YXRlKCdibG9nLXRhZ3MtZWRpdCcsIHtcbiAgICB1cmw6ICcvYmxvZy9lZGl0VGFncy8nLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvZWRpdFRhZ3MuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0VkaXRCbG9nVGFnc0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFJlcXVpcmUsXG4gICAgICBcIkFsbFRhZ3NcIjogZnVuY3Rpb24oQWxsVGFnc1NlcnZpY2Upe1xuICAgICAgICByZXR1cm4gQWxsVGFnc1NlcnZpY2UoKS4kbG9hZGVkKCk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIC5zdGF0ZSgnYmxvZy5tYWluJywge1xuICAgIHVybDogJy9ibG9nJyxcbiAgICBtZXRhVGFnczoge1xuICAgICAgICAgICAgdGl0bGU6ICdTSVNURVJTIC0gQmxvZycsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VwZGF0ZXMsIG5ld3MsIGFuZCBjb21tZW50YXJ5IGZyb20gU2VhdHRsZSBiYW5kIFNJU1RFUlMuJ1xuICAgICAgICB9LFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Jsb2cvYmxvZy1jb250ZW50Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdCbG9nQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdFxuICAgIH1cbiAgfSlcbiAgICAuc3RhdGUoJ2Jsb2cucGFnZScsIHtcbiAgICB1cmw6ICcvYmxvZy86cGFnZScsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnU0lTVEVSUyAtIEJsb2cnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVcGRhdGVzLCBuZXdzLCBhbmQgY29tbWVudGFyeSBmcm9tIFNlYXR0bGUgYmFuZCBTSVNURVJTLidcbiAgICAgICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2Jsb2ctY29udGVudC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQmxvZ0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQgICAgIFxuICAgIH1cbiAgfSlcblxuICAgICAuc3RhdGUoJ2Jsb2cuYXJjaGl2ZScsIHtcbiAgICB1cmw6ICcvYmxvZy9hcmNoaXZlcy86eWVhci86bW9udGgnLFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMgLSBCbG9nJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVXBkYXRlcywgbmV3cywgYW5kIGNvbW1lbnRhcnkgZnJvbSBTZWF0dGxlIGJhbmQgU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9ibG9nLWNvbnRlbnQuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0Jsb2dBcmNoaXZlQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIFwiQmxvZ1wiOiBmdW5jdGlvbihCbG9nUG9zdHMpe1xuICAgICAgICByZXR1cm4gQmxvZ1Bvc3RzKCkuJGxvYWRlZCgpO1xuICAgICAgfSxcbiAgICAgIFwiQXJjaGl2ZVwiOiBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIEFyY2hpdmVTaG93U2VydmljZSl7XG4gICAgICAgIHJldHVybiBBcmNoaXZlU2hvd1NlcnZpY2UoJHN0YXRlUGFyYW1zLnllYXIsICRzdGF0ZVBhcmFtcy5tb250aCkuJGxvYWRlZCgpO1xuICAgICAgfSAgICAgIFxuICAgIH1cbiAgfSlcblxuICAgIC5zdGF0ZSgnYmxvZy5hcmNoaXZlUGFnZScsIHtcbiAgICAgIHVybDogJy9ibG9nL2FyY2hpdmVzLzp5ZWFyLzptb250aC86cGFnZScsXG4gICAgICBtZXRhVGFnczoge1xuICAgICAgICAgICAgdGl0bGU6ICdTSVNURVJTIC0gQmxvZycsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VwZGF0ZXMsIG5ld3MsIGFuZCBjb21tZW50YXJ5IGZyb20gU2VhdHRsZSBiYW5kIFNJU1RFUlMuJ1xuICAgICAgICB9LFxuICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9ibG9nLWNvbnRlbnQuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnQmxvZ0FyY2hpdmVDdHJsJyxcbiAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgICAgXCJCbG9nXCI6IGZ1bmN0aW9uKEJsb2dQb3N0cyl7XG4gICAgICAgICAgcmV0dXJuIEJsb2dQb3N0cygpLiRsb2FkZWQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJBcmNoaXZlXCI6IGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgQXJjaGl2ZVNob3dTZXJ2aWNlKXtcbiAgICAgICAgICByZXR1cm4gQXJjaGl2ZVNob3dTZXJ2aWNlKCRzdGF0ZVBhcmFtcy55ZWFyLCAkc3RhdGVQYXJhbXMubW9udGgpLiRsb2FkZWQoKTtcbiAgICAgICAgfVxuXG4gICAgICB9XG4gICAgfSlcblxuICAgIC5zdGF0ZSgnYmxvZy50YWdzJywge1xuICAgIHVybDogJy9ibG9nL3RhZ3MvOnRhZ05hbWUnLFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMgLSBCbG9nJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVXBkYXRlcywgbmV3cywgYW5kIGNvbW1lbnRhcnkgZnJvbSBTZWF0dGxlIGJhbmQgU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9ibG9nLWNvbnRlbnQuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0Jsb2dUYWdzQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIFwiQmxvZ1wiOiBmdW5jdGlvbihCbG9nUG9zdHMpe1xuICAgICAgICByZXR1cm4gQmxvZ1Bvc3RzKCkuJGxvYWRlZCgpO1xuICAgICAgfSxcbiAgICAgIFwiVGFnc1Nob3dcIjogZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCBUYWdzU2hvd1NlcnZpY2Upe1xuICAgICAgICByZXR1cm4gVGFnc1Nob3dTZXJ2aWNlKCRzdGF0ZVBhcmFtcy50YWdOYW1lKS4kbG9hZGVkKCk7XG4gICAgICB9ICAgICAgXG4gICAgfVxuICB9KVxuXG5cblxuICAuc3RhdGUoJ2Jsb2cuc2hvdycsIHtcbiAgICB1cmw6ICcvYmxvZy9zaG93LzpzbHVnJyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2Jsb2ctY29udGVudC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQmxvZ1Nob3dDdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0LFxuICAgICAgXCJ0aGlzUG9zdFwiOiBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIFRoaXNQb3N0U2VydmljZSl7ICAgICAgICBcbiAgICAgICAgcmV0dXJuIFRoaXNQb3N0U2VydmljZSgkc3RhdGVQYXJhbXMuc2x1ZykuJGxvYWRlZCgpO1xuICAgICAgfSxcbiAgICAgIFwiQmxvZ1wiOiBmdW5jdGlvbihCbG9nUG9zdHMpe1xuICAgICAgICByZXR1cm4gQmxvZ1Bvc3RzKCkuJGxvYWRlZCgpO1xuICAgICAgfSAgICAgICBcbiAgICB9LFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogZnVuY3Rpb24odGhpc1Bvc3Qpe1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIndoYXQgaXMgQmxvZz8gXCIsdGhpc1Bvc3QpO1xuICAgICAgICAgICAgICB2YXIgdGl0bGUgPSBcIlNJU1RFUlMgLSBcIiArIHRoaXNQb3N0WzBdLnBvc3RUaXRsZTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRpdGxlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBmdW5jdGlvbih0aGlzUG9zdCl7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzUG9zdFswXS5wb3N0Qm9keTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgfSlcbiAgXG5cblxuICAuc3RhdGUoJ3Nob3dzJywge1xuICAgIHVybDogJy9zaG93cycsXG4gICAgbWV0YVRhZ3M6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnU0lTVEVSUyAtIFNob3dzJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVXBjb21pbmcgc2hvd3MgZm9yIFNlYXR0bGUgZHVvIFNJU1RFUlMuJ1xuICAgICAgICB9LFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3Nob3dzL3Nob3dzLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdTaG93c0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgICBnZXRTaG93czogZnVuY3Rpb24oR2V0U2hvd3Mpe1xuICAgICAgICBjb25zb2xlLmxvZyhcImFwcCByZXNvbHZlIGVudGVyZWRcIik7XG4gICAgICAgIHJldHVybiBHZXRTaG93cygpLiRsb2FkZWQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgLnN0YXRlKCdzdG9yZScsIHtcbiAgICB1cmw6ICcvc3RvcmUnLFxuICAgIG1ldGFUYWdzOiB7XG4gICAgICAgICAgICB0aXRsZTogJ1NJU1RFUlMgLSBTdG9yZScsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBvZmZpY2lhbCBzdG9yZSBmb3IgU2VhdHRsZSBkdW8gU0lTVEVSUy4nXG4gICAgICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc3RvcmUvc3RvcmUuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1N0b3JlQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdCxcbiAgICAgIFwiYWxsUHJvZHVjdHNcIjogZnVuY3Rpb24oUHJvZHVjdHNTZXJ2aWNlKXtcbiAgICAgICAgcmV0dXJuIFByb2R1Y3RzU2VydmljZS5hbGxQcm9kdWN0cygpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAuc3RhdGUoJ3N0b3JlQ2FydCcsIHtcbiAgICB1cmw6ICcvc3RvcmUvY2FydCcsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc3RvcmUvY2FydC5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnU3RvcmVDYXJ0Q3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdFxuICAgIH1cbiAgfSlcblxuICAuc3RhdGUoJ3N0b3JlU2hvdycsIHtcbiAgICB1cmw6ICcvc3RvcmUvOmlkJyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9zdG9yZVNob3cuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1N0b3JlU2hvd0N0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgICBcIm9uZVByb2R1Y3RcIjogZnVuY3Rpb24oUHJvZHVjdHNTZXJ2aWNlLCAkc3RhdGVQYXJhbXMpe1xuICAgICAgICByZXR1cm4gUHJvZHVjdHNTZXJ2aWNlLm9uZVByb2R1Y3QoJHN0YXRlUGFyYW1zLmlkKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIC5zdGF0ZSgnY2hlY2tvdXQnLCB7XG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc3RvcmUvY2hlY2tvdXRUZW1wbGF0ZS5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnQ2hlY2tvdXRUZW1wbGF0ZUN0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgfVxuICB9KVxuICAuc3RhdGUoJ2NoZWNrb3V0LmFkZHJlc3MnLCB7XG4gICAgdXJsOiAnL3N0b3JlL2NoZWNrb3V0L2FkZHJlc3MnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3N0b3JlL2NoZWNrb3V0QWRkcmVzcy5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnU3RvcmVBZGRyZXNzQ3RybCcsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBhdXRoV2FpdFxuICAgIH1cbiAgfSlcbiAgLnN0YXRlKCdjaGVja291dC5wYXltZW50Jywge1xuICAgIHVybDogJy9zdG9yZS9jaGVja291dC9wYXltZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9zdG9yZS9jaGVja291dFBheW1lbnQuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ1N0b3JlUGF5bWVudEN0cmwnLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogYXV0aFdhaXQsXG4gICAgICBjdXJyZW50T3JkZXI6IGZ1bmN0aW9uKEN1cnJlbnRPcmRlclNlcnZpY2Upe1xuICAgICAgICByZXR1cm4gQ3VycmVudE9yZGVyU2VydmljZS5nZXQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgIC5zdGF0ZSgnY2hlY2tvdXQuY29uZmlybScsIHtcbiAgICB1cmw6ICcvc3RvcmUvY2hlY2tvdXQvY29uZmlybScsXG4gICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc3RvcmUvY2hlY2tvdXRDb25maXJtLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdTdG9yZUNvbmZpcm1DdHJsJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IGF1dGhXYWl0XG4gICAgfVxuICB9KVxuICBcbiAgXG4gIC5zdGF0ZSgnbG9naW4nLCB7XG4gICAgdXJsOiAnL2xvZ2luJyxcbiAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9sb2dpbi5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnTG9naW5DdHJsJ1xuICB9KVxuXG4gIFxuICAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XG5cbn1dKVxuXG4uZmlsdGVyKCdjdXQnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodmFsdWUsIGVuYWJsZSwgd29yZHdpc2UsIG1heCwgdGFpbCkge1xuICAgIHZhciBzb3VyY2UgPSBhbmd1bGFyLmVsZW1lbnQoJzxkaXYvPicpLmh0bWwodmFsdWUpO1xuICAgIGNvbnNvbGUubG9nKFwic291cmNlOiBcIixzb3VyY2UpO1xuICAgIHZhciBsZW5ndGggPSBzb3VyY2UudGV4dCgpLmxlbmd0aDtcbiAgICBjb25zb2xlLmxvZyhcImxlbmd0aDogXCIsbGVuZ3RoKTtcbiAgICAvLyBpZiAoIXBsYWluVGV4dCkgcmV0dXJuICcnO1xuICAgIC8vIGlmIChwbGFpblRleHQgJiYgIWVuYWJsZSkge1xuICAgIC8vICAgcmV0dXJuIHZhbHVlO1xuICAgIC8vIH0gZWxzZSBpZiAocGxhaW5UZXh0ICYmIGVuYWJsZSl7XG4gICAgLy8gICBtYXggPSBwYXJzZUludChtYXgsIDEwKTtcbiAgICAvLyAgIGlmICghbWF4KSB7XG4gICAgLy8gICAgIHJldHVybiB2YWx1ZTtcbiAgICAvLyAgIH1cbiAgICAvLyAgIGlmIChwbGFpblRleHQubGVuZ3RoIDw9IG1heCl7XG4gICAgLy8gICAgIHJldHVybiB2YWx1ZTtcbiAgICAvLyAgIH0gXG4gICAgLy8gICBlbGVtZW50WzBdLmlubmVyVGV4dCA9IHBsYWluVGV4dC5zdWJzdHIoMCwgbWF4KTtcbiAgICAvLyAgIGlmICh3b3Jkd2lzZSkge1xuICAgIC8vICAgICB2YXIgbGFzdHNwYWNlID0gcGxhaW5UZXh0Lmxhc3RJbmRleE9mKCcgJyk7XG4gICAgLy8gICAgIGlmIChsYXN0c3BhY2UgIT0gLTEpIHtcbiAgICAvLyAgICAgICAvL0Fsc28gcmVtb3ZlIC4gYW5kICwgc28gaXRzIGdpdmVzIGEgY2xlYW5lciByZXN1bHQuXG4gICAgLy8gICAgICAgaWYgKHBsYWluVGV4dC5jaGFyQXQobGFzdHNwYWNlLTEpID09ICcuJyB8fCB2YWx1ZS5jaGFyQXQobGFzdHNwYWNlLTEpID09ICcsJykge1xuICAgIC8vICAgICAgICAgbGFzdHNwYWNlID0gbGFzdHNwYWNlIC0gMTtcbiAgICAvLyAgICAgICB9XG4gICAgLy8gICAgICAgZWxlbWVudFswXS5pbm5lclRleHQgPSB2YWx1ZS5zdWJzdHIoMCwgbGFzdHNwYWNlKTtcbiAgICAvLyAgIH1cbiAgICAvLyB9XG4gICAgICBcbiAgICAvLyAvLyAgIGNvbnNvbGUubG9nKFwidmFsdWU6IFwiLHZhbHVlKTtcbiAgICAvLyAvLyAgIHJldHVybiBlbGVtZW50WzBdLm91dGVySFRNTCArICh0YWlsIHx8ICfigKYnKTtcbiAgICAvLyB9XG4gIH07XG59KVxuXG4uZmlsdGVyKCd0cnVzdEFzUmVzb3VyY2VVcmwnLCBbJyRzY2UnLCBmdW5jdGlvbigkc2NlKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWwpIHtcbiAgICByZXR1cm4gJHNjZS50cnVzdEFzUmVzb3VyY2VVcmwoJ2h0dHA6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJyt2YWwpO1xuICB9O1xufV0pXG5cblxuLmZpbHRlcignTW9tZW50RmlsdGVyJywgWydtb21lbnQnLCBmdW5jdGlvbihtb21lbnQpe1xuICByZXR1cm4gZnVuY3Rpb24odmFsKXtcbiAgICByZXR1cm4gIG1vbWVudCh2YWwpLmZvcm1hdCgnZGRkZCwgTU1NTSBEbywgWVlZWScpO1xuICB9XG59XSlcblxuLmZpbHRlcigndG9vT2xkJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmdW5jdGlvbihldmVudHMpIHtcbiAgICB2YXIgY3VycmVudERheSA9IG1vbWVudCgpLnVuaXgoKVxuICAgIHZhciBmaWx0ZXJlZCA9IFtdO1xuICAgIGFuZ3VsYXIuZm9yRWFjaChldmVudHMsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICB2YXIgdGhpc0V2ZW50ID0gZXZlbnQudW5peERhdGUvMTAwMDtcbiAgICAgIGlmICgoY3VycmVudERheSAtIHRoaXNFdmVudCkgPD0gODY0MDApIHtcbiAgICAgICAgZmlsdGVyZWQucHVzaChldmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGZpbHRlcmVkO1xuICB9O1xufSlcblxuLmZpbHRlcignRGVsaXZlcnlFc3REYXRlJywgWydtb21lbnQnLCBmdW5jdGlvbihtb21lbnQpe1xuICByZXR1cm4gZnVuY3Rpb24odmFsKXtcbiAgICByZXR1cm4gIG1vbWVudCh2YWwpLmZvcm1hdCgnZGRkZCwgTU1NTSBEbycpO1xuICB9XG59XSlcblxuLmZpbHRlcigndGltZUFnbycsIFsnbW9tZW50JywgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbCl7XG4gICAgcmV0dXJuIG1vbWVudCh2YWwpLmZyb21Ob3coKTtcbiAgfVxufV0pXG5cblxuXG5cbi5maWx0ZXIoJ2NlbnRzVG9Eb2xsYXJzJywgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbCl7XG4gICAgcmV0dXJuICB2YWwvMTAwO1xuICB9XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzQ3RybHMnLCBbJ1Npc3RlcnNTZXJ2aWNlcyddKVxuXG5cbi5jb250cm9sbGVyKCdNYWluQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyR0aW1lb3V0JywnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHRpbWVvdXQsJGh0dHApIHtcbiRzY29wZS4kb24oJ2xvYWRNYWluQ29udGFpbmVyJywgZnVuY3Rpb24gKGV2ZW50LCBkYXRhKSB7XG4gICAgaWYgKGRhdGEgPT09IFwibG9hZGVkXCIpe1xuICAgICAgJHNjb3BlLm1haW5Mb2FkZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUubWFpbkxvYWRlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSk7XG5cblxufV0pXG5cbi5jb250cm9sbGVyKCdIb21lQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyR0aW1lb3V0JywnJGh0dHAnLCdMb2FkZWRTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICR0aW1lb3V0LCRodHRwLExvYWRlZFNlcnZpY2UpIHtcbiAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYmEoMjQ3LCAyMzcsIDI0NSwgMCknO1xuICBtYWluLnN0eWxlLndpZHRoID0gJyc7XG4gIG1haW4uc3R5bGUucGFkZGluZyA9IFwiXCI7XG4gIG1haW4uc3R5bGUucGFkZGluZ0JvdHRvbSA9IFwiNDAwcHhcIjtcbiAgXG4gICRzY29wZS5sb2FkZWQgPSBMb2FkZWRTZXJ2aWNlLmdldCgpO1xuICB2YXIgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgaWYgKCEkc2NvcGUubG9hZGVkICYmIHdpZHRoID4gODA2KXsgXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgICAgICRzY29wZS5mYWRlSG9tZSA9IHRydWU7XG4gICAgICBMb2FkZWRTZXJ2aWNlLnNldCh0cnVlKTtcbiAgICB9LCAyNTAwKTtcbiAgfSBlbHNlIHtcbiAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgICAgICRzY29wZS5mYWRlSG9tZSA9IHRydWU7XG4gICAgICBMb2FkZWRTZXJ2aWNlLnNldCh0cnVlKTtcbiAgICB9LCAyNTAwKTtcbiAgfSBcblxuXG4gICAgJHNjb3BlLm1haWxjaGltcFN1Ym1pdCA9IGZ1bmN0aW9uKGZvcm0sIGVtYWlsLCBpc05hdil7XG4gICAgaWYoZm9ybS4kdmFsaWQpe1xuICAgICAkc2NvcGUuaXNQb3B1cCA9IGZhbHNlO1xuICAgIHZhciB1cmwgPSBcIi8vc2lzdGVyc3RoZWJhbmQudXMxNC5saXN0LW1hbmFnZS5jb20vc3Vic2NyaWJlL3Bvc3QtanNvbj91PWJjMzg3MjBiMGJjYzdhMzI2NDFiYjU3MmMmYW1wO2lkPTI0MmY0YWRjODkmRU1BSUw9XCIrZW1haWwrXCImYz1KU09OX0NBTExCQUNLXCJcbiAgICAkaHR0cC5qc29ucCh1cmwpLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXMpe1xuICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICRzY29wZS51c2VyID0ge307XG4gICAgICAgIGlmKGlzTmF2KXtcbiAgICAgICAgJHNjb3BlLm1haWxDb25maXJtID0gdHJ1ZTtcbiAgICAgICAgICAvLyAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgIC8vICAgJHNjb3BlLm1haWxDb25maXJtID0gZmFsc2U7XG4gICAgICAgICAgLy8gICBjb25zb2xlLmxvZyhcIm1haWwgY29uZmlybSByZXNldFwiKTtcbiAgICAgICAgICAvLyB9LDcwMDApO1xuICAgICAgICB9XG4gICAgfSwgZnVuY3Rpb24gZXJyb3IocmVzKXtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgfSk7XG5cbiAgICB9XG4gIH1cblxuXG59XSlcblxuLmNvbnRyb2xsZXIoJ0Fib3V0Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCl7XG4gIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDEpJztcbiAgbWFpbi5zdHlsZS5wYWRkaW5nID0gXCIwIDAgMTc2cHggMFwiO1xuICBtYWluLnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xufSkgXG5cbi5jb250cm9sbGVyKCdDb250YWN0Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCl7XG4gIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJztcbiAgbWFpbi5zdHlsZS5wYWRkaW5nID0gXCJcIjtcbiAgbWFpbi5zdHlsZS53aWR0aCA9ICcnO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xufSkgXG5cbi5jb250cm9sbGVyKCdQcmVzc0N0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHRpbWVvdXQpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAwKSc7XG4gIG1haW4uc3R5bGUucGFkZGluZyA9IFwiMCAwIDE3NnB4IDBcIjtcbiAgbWFpbi5zdHlsZS53aWR0aCA9ICc5MCUnO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xufSk7IiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCdBdXRoJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsIEF1dGgpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5zdWJtaXR0ZWQgPSBmYWxzZTtcbiAgJHNjb3BlLmxvZ2dlZCA9IGZhbHNlO1xuXG5cbiAgQXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgIGlmIChmaXJlYmFzZVVzZXIpIHtcbiAgICAgICRzY29wZS5sb2dnZWQgPSB0cnVlO1xuICAgICAgJHN0YXRlLmdvKCdob21lJyk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgbG9nZ2VkIGluLlwiKTtcbiAgICB9XG4gIH0pO1xuXG5cbiAgLy8gYmluZCBmb3JtIGRhdGEgdG8gdXNlciBtb2RlbFxuICAkc2NvcGUudXNlciA9IHt9XG5cblxuICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbigpIHtcbiAgICAkc2NvcGUuc3VibWl0dGVkID0gdHJ1ZTtcbiAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gbnVsbDtcbiAgICBBdXRoLiRzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCgkc2NvcGUudXNlci5lbWFpbCwgJHNjb3BlLnVzZXIucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gZmlyZWJhc2VVc2VyO1xuICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiQXV0aGVudGljYXRpb24gZmFpbGVkOlwiLCBlcnJvcik7XG4gICAgfSlcbiAgfTtcblxuXG59XSkgIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cblxuXG4uY29udHJvbGxlcignTmV3QmxvZ0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCckaHR0cCcsJ0F1dGgnLCdCbG9nUG9zdHMnLCdBbGxUYWdzJywnSGVscGVyU2VydmljZScsJ1N1Ym1pdEltYWdlJywnbW9tZW50JywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCBBdXRoLCBCbG9nUG9zdHMsIEFsbFRhZ3MsIEhlbHBlclNlcnZpY2UsIFN1Ym1pdEltYWdlLCBtb21lbnQpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5CbG9nUG9zdHMgPSBCbG9nUG9zdHMoKTtcbiAgJHNjb3BlLnRhZ3MgPSBBbGxUYWdzO1xuICAkc2NvcGUuY2hlY2tlZFRhZ3MgPSB7fTtcbiAgJHNjb3BlLmRhdGEgPSB7fTtcblxuICAkc2NvcGUucmVzZXRNZWRpYSA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLmRhdGEueW91dHViZSA9IFwiXCI7XG4gICAgJHNjb3BlLmRhdGEuaW1hZ2UgPSBcIlwiO1xuICB9XG5cbiAgJHNjb3BlLnN1Ym1pdCA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJzdWJtaXQgY2xpY2tlZFwiKTtcbiAgICBjb25zb2xlLmxvZyhcIndoYXQgaXMgcG9zdD8gXCIsJHNjb3BlLnBvc3QpO1xuICAgIGlmICgkc2NvcGUuZGF0YS5tZWRpYVNlbGVjdCA9PT0gJ2ltYWdlJyl7XG4gICAgICBTdWJtaXRJbWFnZSgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgJHNjb3BlLmRhdGEuaW1hZ2UsIGFkZFBvc3QpO1xuICAgIH0gZWxzZSBpZiAoJHNjb3BlLmRhdGEubWVkaWFTZWxlY3QgPT09ICd5b3V0dWJlJyl7XG4gICAgICAkc2NvcGUuZGF0YS55b3V0dWJlID0gSGVscGVyU2VydmljZS5wYXJzZVlvdVR1YmUoJHNjb3BlLmRhdGEueW91dHViZSk7XG4gICAgICBhZGRQb3N0KCRzY29wZS5wb3N0LCAkc2NvcGUuQmxvZ1Bvc3RzLCBudWxsLCAkc2NvcGUuZGF0YS55b3V0dWJlKTtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUuYWRkVGFnID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUudGFncy4kYWRkKHtcbiAgICAgIFwibmFtZVwiOiAkc2NvcGUuZGF0YS5uZXdUYWdcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlZil7XG4gICAgICAkc2NvcGUucG9zdElkID0gcmVmLmtleTtcbiAgICAgIGNvbnNvbGUubG9nKFwid2hhdCBpcyBwb3N0IGlkPyBcIixyZWYua2V5KTtcbiAgICAgICRzY29wZS5kYXRhLm5ld1RhZyA9IFwiXCI7XG4gICAgfSk7XG4gIH1cblxuICAkc2NvcGUucmVzaXplSW1nID0gZnVuY3Rpb24oaW1nKXtcbiAgICB2YXIgcmVzaXplID0gSGVscGVyU2VydmljZS5pbWdSZXNpemUoaW1nKTtcbiAgfVxuXG4gICRzY29wZS5kZWxldGVUYWcgPSBmdW5jdGlvbihpdGVtKXtcbiAgICAkc2NvcGUudGFncy4kcmVtb3ZlKGl0ZW0pLnRoZW4oZnVuY3Rpb24ocmVmKSB7XG4gIHJlZi5rZXkgPT09IGl0ZW0uJGlkOyAvLyB0cnVlXG59KTtcbiAgfVxuXG4gIHZhciBhZGRQb3N0ID0gZnVuY3Rpb24ocG9zdCwgcG9zdEFycmF5LCBpbWcsIHlvdXR1YmUpe1xuICAgIHZhciBzbHVnID0gSGVscGVyU2VydmljZS5zbHVnaWZ5KHBvc3QudGl0bGUpO1xuICAgIHZhciBwb3N0RGF0ZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIHZhciB5ZWFyID0gbW9tZW50KHBvc3REYXRlKS5mb3JtYXQoXCJZWVlZXCIpO1xuICAgIHZhciBtb250aCA9IG1vbWVudChwb3N0RGF0ZSkuZm9ybWF0KFwiTU1NTVwiKTtcblxuICAgIHZhciBuZXdUYWdzID0ge307XG4gICAgZm9yICh2YXIgcHJvcCBpbiAkc2NvcGUuY2hlY2tlZFRhZ3Mpe1xuICAgICAgICBuZXdUYWdzW3Byb3BdID0gJHNjb3BlLmNoZWNrZWRUYWdzW3Byb3BdO1xuICAgIH1cbiAgICB2YXIgdGhpc1Bvc3QgPSB7XG4gICAgICBwb3N0VGl0bGU6IHBvc3QudGl0bGUsXG4gICAgICBzbHVnOiBzbHVnLFxuICAgICAgcG9zdEJvZHk6IHBvc3QucG9zdEJvZHksXG4gICAgICB5b3V0dWJlOiB5b3V0dWJlID8geW91dHViZSA6IG51bGwsXG4gICAgICBpbWc6IGltZyA/IGltZyA6IG51bGwsXG4gICAgICB0YWdzOiBuZXdUYWdzLFxuICAgICAgdGltZXN0YW1wOiBwb3N0RGF0ZSAgIFxuICAgIH07XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJ0aGlzUG9zdDogXCIsdGhpc1Bvc3QpO1xuICAgIHBvc3RBcnJheS4kYWRkKHRoaXNQb3N0KS50aGVuKGZ1bmN0aW9uKHJlZil7XG4gICAgICB2YXIga2V5ID0gcmVmLmtleTtcbiAgICAgIHZhciBhcmNoaXZlUG9zdCA9IHtcbiAgICAgICAga2V5OiBrZXlcbiAgICAgIH1cbiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdhcmNoaXZlcy8nICsgeWVhciArICcvJyArIG1vbnRoICsgJy8nICsga2V5KS5zZXQoYXJjaGl2ZVBvc3QpO1xuICAgICAgLy8gZm9yIChwcm9wIGluIG5ld1RhZ3Mpe1xuICAgICAgLy8gICBpZiAobmV3VGFnc1twcm9wXSl7XG4gICAgICAvLyAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0YWdzLycgKyBwcm9wICsgJy9wb3N0cy8nICsga2V5KS5zZXQoYXJjaGl2ZVBvc3QpOyBcbiAgICAgIC8vICAgfVxuICAgICAgLy8gfVxuICAgICAgJHN0YXRlLmdvKCdibG9nLm1haW4nKTtcbiAgICB9KTtcbiAgfVxufV0pXG5cbi5jb250cm9sbGVyKCdFZGl0QmxvZ0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCAnJHRpbWVvdXQnLCAnJHN0YXRlUGFyYW1zJywnU2VuZERhdGFTZXJ2aWNlJywnQWxsVGFncycsJ3RoaXNQb3N0JywnSGVscGVyU2VydmljZScsJ1N1Ym1pdEltYWdlJywnJHVpYk1vZGFsJywnJGxvZycsJ0Jsb2dQb3N0cycsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCwgJHN0YXRlUGFyYW1zLCBTZW5kRGF0YVNlcnZpY2UsIEFsbFRhZ3MsIHRoaXNQb3N0LCBIZWxwZXJTZXJ2aWNlLCBTdWJtaXRJbWFnZSwgJHVpYk1vZGFsLCAkbG9nLCBCbG9nUG9zdHMpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLDAsMCwwKSc7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS5kYXRhID0ge307XG4gICRzY29wZS5wb3N0QXJyYXkgPSB0aGlzUG9zdDtcbiAgJHNjb3BlLnBvc3QgPSB0aGlzUG9zdFswXTtcbiAgJHNjb3BlLm9yaWdpbmFsVGFncyA9IGFuZ3VsYXIuY29weSgkc2NvcGUucG9zdC50YWdzKTtcbiAgJHNjb3BlLnRhZ3MgPSBBbGxUYWdzO1xuXG4gIGlmICgkc2NvcGUucG9zdC55b3V0dWJlKXtcbiAgICBjb25zb2xlLmxvZygkc2NvcGUucG9zdC55b3V0dWJlKTtcbiAgICB2YXIgeW91dHViZUlkID0gJHNjb3BlLnBvc3QueW91dHViZVxuICAgICRzY29wZS5kYXRhLnlvdXR1YmUgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9XCIrIHlvdXR1YmVJZDtcbiAgfVxuXG4gIFxuXG4gICRzY29wZS5jb25maXJtQmxvZ0RlbGV0ZSA9IGZ1bmN0aW9uKHBvc3QpIHtcbiAgICB2YXIgbW9kYWxJbnN0YW5jZSA9ICR1aWJNb2RhbC5vcGVuKHtcbiAgICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvYmxvZy9kZWxldGVCbG9nQ29uZmlybU1vZGFsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ0RlbGV0ZUJsb2dDb25maXJtQ3RybCcsXG4gICAgICBzaXplOiAnc20nLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBcIlBvc3RcIjogcG9zdFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgbW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgIGNvbnNvbGUubG9nKFwic3VibWl0dGVkIG1vZGFsXCIpO1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG4gICAgfSk7XG4gIH07IFxuXG5cbiAgJHNjb3BlLmFkZFRhZyA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLnRhZ3MuJGFkZCh7XG4gICAgICBcIm5hbWVcIjogJHNjb3BlLmRhdGEubmV3VGFnXG4gICAgfSkudGhlbihmdW5jdGlvbihyZWYpe1xuICAgICAgJHNjb3BlLnBvc3RJZCA9IHJlZi5rZXk7XG4gICAgICBjb25zb2xlLmxvZyhcIndoYXQgaXMgcG9zdCBpZD8gXCIscmVmLmtleSk7XG4gICAgICAkc2NvcGUuZGF0YS5uZXdUYWcgPSBcIlwiO1xuICAgIH0pO1xuICB9XG5cbiAgJHNjb3BlLmRlbGV0ZVRhZyA9IGZ1bmN0aW9uKGl0ZW0pe1xuICAgICRzY29wZS50YWdzLiRyZW1vdmUoaXRlbSkudGhlbihmdW5jdGlvbihyZWYpIHtcbiAgcmVmLmtleSA9PT0gaXRlbS4kaWQ7IC8vIHRydWVcbn0pO1xuICB9XG5cblxuICAkc2NvcGUucmVzZXRNZWRpYSA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLmRhdGEueW91dHViZSA9IFwiXCI7XG4gICAgJHNjb3BlLmRhdGEuaW1hZ2UgPSBcIlwiO1xuICB9XG5cbiAgJHNjb3BlLnN1Ym1pdCA9IGZ1bmN0aW9uKCl7XG4gICAgaWYgKCRzY29wZS5kYXRhLm1lZGlhU2VsZWN0ID09PSAnaW1hZ2UnICYmICRzY29wZS5kYXRhLmltYWdlKXtcbiAgICAgIFN1Ym1pdEltYWdlKCRzY29wZS5wb3N0LCAkc2NvcGUucG9zdEFycmF5LCAkc2NvcGUuZGF0YS5pbWFnZSwgdXBkYXRlUG9zdCk7XG4gICAgfSBlbHNlIGlmICgkc2NvcGUuZGF0YS5tZWRpYVNlbGVjdCA9PT0gJ2ltYWdlJyAmJiAhJHNjb3BlLmRhdGEuaW1hZ2Upe1xuICAgICAgdXBkYXRlUG9zdCgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgJHNjb3BlLnBvc3QuaW1nLCBudWxsKTtcbiAgICB9IGVsc2UgaWYgKCRzY29wZS5kYXRhLm1lZGlhU2VsZWN0ID09PSAneW91dHViZScpe1xuICAgICAgJHNjb3BlLmRhdGEueW91dHViZSA9IEhlbHBlclNlcnZpY2UucGFyc2VZb3VUdWJlKCRzY29wZS5kYXRhLnlvdXR1YmUpO1xuICAgICAgdXBkYXRlUG9zdCgkc2NvcGUucG9zdCwgJHNjb3BlLkJsb2dQb3N0cywgbnVsbCwgJHNjb3BlLmRhdGEueW91dHViZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIHVwZGF0ZVBvc3QgPSBmdW5jdGlvbihwb3N0LCBwb3N0QXJyYXksIGltZywgeW91dHViZSl7XG4gICAgdmFyIHNsdWcgPSBIZWxwZXJTZXJ2aWNlLnNsdWdpZnkocG9zdC5wb3N0VGl0bGUpO1xuICAgIGNvbnNvbGUubG9nKHNsdWcpO1xuICAgIHZhciB5ZWFyID0gbW9tZW50KHBvc3QudGltZXN0YW1wKS5mb3JtYXQoXCJZWVlZXCIpO1xuICAgIHZhciBtb250aCA9IG1vbWVudChwb3N0LnRpbWVzdGFtcCkuZm9ybWF0KFwiTU1NTVwiKTtcbiAgICB2YXIgbmV3VGFncyA9IHt9O1xuICAgIGZvciAodmFyIHByb3AgaW4gcG9zdC50YWdzKXtcbiAgICAgIG5ld1RhZ3NbcHJvcF0gPSBwb3N0LnRhZ3NbcHJvcF07XG4gICAgfVxuICAgIHBvc3Quc2x1ZyA9IHNsdWc7XG4gICAgcG9zdC50YWdzID0gbmV3VGFncztcbiAgICBwb3N0LnlvdXR1YmUgPSB5b3V0dWJlID8geW91dHViZSA6IG51bGw7XG4gICAgcG9zdC5pbWcgPSBpbWcgPyBpbWcgOiBudWxsO1xuICAgIHZhciB0aGlzUG9zdCA9IHtcbiAgICAgIHBvc3RUaXRsZTogcG9zdC5wb3N0VGl0bGUsXG4gICAgICBzbHVnOiBzbHVnLFxuICAgICAgcG9zdEJvZHk6IHBvc3QucG9zdEJvZHksXG4gICAgICB5b3V0dWJlOiBwb3N0LnlvdXR1YmUsXG4gICAgICBpbWc6IHBvc3QuaW1nLFxuICAgICAgdGFnczogbmV3VGFncyxcbiAgICAgIHRpbWVzdGFtcDogcG9zdC50aW1lc3RhbXAgICBcbiAgICB9O1xuICAgICRzY29wZS5wb3N0QXJyYXkuJHNhdmUocG9zdCkudGhlbihmdW5jdGlvbihyZWYpIHtcbiAgICAgIHZhciBrZXkgPSByZWYua2V5O1xuICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBrZXkpLnJlbW92ZSgpO1xuICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBrZXkpLnNldCh0aGlzUG9zdCk7XG4gICAgICBmb3IgKHByb3AgaW4gJHNjb3BlLm9yaWdpbmFsVGFncyl7XG4gICAgICAgIGlmICgkc2NvcGUub3JpZ2luYWxUYWdzW3Byb3BdID09PSB0cnVlKXtcbiAgICAgICAgICB2YXIgdXJsID0gJ3RhZ3MvJyArIHByb3AgKyAnL3Bvc3RzLycgKyBrZXk7XG4gICAgICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYodXJsKS5yZW1vdmUoKS50aGVuKGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZW1vdmUgZmFpbGVkOiBcIiArIGVycm9yLm1lc3NhZ2UpXG4gICAgICAgICAgfSk7IFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHByb3AgKyBcIiBub3QgYSB0YWcgZm9yIG9sZCBlZGl0IVwiKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgIGZvciAocHJvcCBpbiB0aGlzUG9zdC50YWdzKXtcbiAgICAgICAgaWYgKHRoaXNQb3N0LnRhZ3NbcHJvcF0gPT09IHRydWUpe1xuICAgICAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0YWdzLycgKyBwcm9wICsgJy9wb3N0cy8nICsga2V5KS5zZXQodGhpc1Bvc3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHByb3AgKyBcIiBub3QgYSB0YWcgZm9yIG5ldyBlZGl0IVwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sMTAwKVxuXG4gICAgICAkc3RhdGUuZ28oJ2Jsb2cubWFpbicpO1xuICAgIH0pO1xuICB9IFxufV0pICBcblxuXG4uY29udHJvbGxlcignRWRpdEJsb2dUYWdzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR1aWJNb2RhbEluc3RhbmNlLCB0YWcsIEJsb2cpIHtcbiAgJHNjb3BlLnByb21wdGVkID0gZmFsc2U7XG4gICRzY29wZS50YWcgPSBhbmd1bGFyLmNvcHkodGFnKTtcbiAgY29uc29sZS5sb2codGFnKTtcbiAgJHNjb3BlLm9rID0gZnVuY3Rpb24gKHRhZykge1xuICAgIHZhciBuZXdOYW1lID0ge1xuICAgICAgbmFtZTogJHNjb3BlLnRhZy5uYW1lXG4gICAgfTtcbiAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignL3RhZ3MvJyskc2NvcGUudGFnLiRpZCkudXBkYXRlKG5ld05hbWUpO1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gIH07XG5cbiAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgfTtcblxuICAkc2NvcGUuZGVsZXRlUHJvbXB0ID0gZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUucHJvbXB0ZWQgPSB0cnVlO1xuICB9XG5cbiAgJHNjb3BlLmRlbGV0ZSA9IGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICBpZiAocmVzcG9uc2UgPT09IFwibm9cIil7XG4gICAgICAkc2NvcGUucHJvbXB0ZWQgPSBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlID09PSBcInllc1wiKXtcbiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCcvdGFncy8nKyRzY29wZS50YWcuJGlkKS5yZW1vdmUoKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQmxvZy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciB0aGlzUG9zdFRhZ3MgPSBCbG9nW2ldLnRhZ3M7XG4gICAgICAgIGlmICh0aGlzUG9zdFRhZ3NbJHNjb3BlLnRhZy4kaWRdID09PSB0cnVlKXtcbiAgICAgICAgICB0aGlzUG9zdFRhZ3NbJHNjb3BlLnRhZy4kaWRdID0gbnVsbDtcbiAgICAgICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignL2Jsb2dfcG9zdHMvJytCbG9nW2ldLiRpZCtcIi90YWdzXCIpLnVwZGF0ZSh0aGlzUG9zdFRhZ3MpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgJHVpYk1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcbiAgICB9IFxuICB9XG5cbn0pXG5cblxuLmNvbnRyb2xsZXIoJ0RlbGV0ZUJsb2dDb25maXJtQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR1aWJNb2RhbEluc3RhbmNlLCBQb3N0LCBtb21lbnQsICRsb2NhdGlvbikge1xuY29uc29sZS5sb2coUG9zdCk7XG5cbiRzY29wZS55ZXMgPSBmdW5jdGlvbigpe1xuICB2YXIgeWVhciA9IG1vbWVudChQb3N0LnRpbWVzdGFtcCkuZm9ybWF0KFwiWVlZWVwiKTtcbiAgdmFyIG1vbnRoID0gbW9tZW50KFBvc3QudGltZXN0YW1wKS5mb3JtYXQoXCJNTU1NXCIpO1xuICBjb25zb2xlLmxvZyhtb250aCArIFwiIG9mIFwiK3llYXIpO1xuICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYmxvZ19wb3N0cy8nK1Bvc3QuJGlkKS5yZW1vdmUoKTtcbiAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2FyY2hpdmVzLycgKyB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBQb3N0LiRpZCkucmVtb3ZlKCk7XG4gICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gICRsb2NhdGlvbi51cmwoJy9ibG9nJyk7XG59XG5cbiRzY29wZS5ubyA9IGZ1bmN0aW9uKCl7XG4gICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbn1cbiAgXG59KSIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzQ3RybHMnKVxuXG5cblxuLmNvbnRyb2xsZXIoJ0Jsb2dNYXN0ZXJDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJywnJGh0dHAnLCckdGltZW91dCcsJyRsb2NhdGlvbicsJyRzdGF0ZVBhcmFtcycsJ0F1dGgnLCdCbG9nJywnSGVscGVyU2VydmljZScsJ0luc3RhZ3JhbUZhY3RvcnknLCdBbGxUYWdzU2VydmljZScsJ1R3aXR0ZXJGYWN0b3J5JywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc3RhdGVQYXJhbXMsIEF1dGgsIEJsb2csIEhlbHBlclNlcnZpY2UsIEluc3RhZ3JhbUZhY3RvcnksIEFsbFRhZ3NTZXJ2aWNlLCBUd2l0dGVyRmFjdG9yeSl7XG4gICRzY29wZS5sb2FkZWRJbnN0YSA9IGZhbHNlO1xuICAkc2NvcGUubG9hZGVkVHdpdHRlciA9IGZhbHNlO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuIFxuICBJbnN0YWdyYW1GYWN0b3J5LnRoZW4oZnVuY3Rpb24oZGF0YSl7XG4gICAgJHNjb3BlLnBob3RvcyA9IGRhdGEuZGF0YTtcbiAgICAkc2NvcGUubG9hZGVkSW5zdGEgPSB0cnVlO1xuICAgIGlmICgkc2NvcGUubG9hZGVkVHdpdHRlcil7XG4gICAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0pXG4gIFR3aXR0ZXJGYWN0b3J5LnRoZW4oZnVuY3Rpb24oZGF0YSl7XG4gICBcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAkc2NvcGUudHdlZXREYXRlID0gZGF0YS5hbGxUd2VldERhdGEuY3JlYXRlZF9hdDtcbiAgICAkc2NvcGUudHdpdHRlclVzZXIgPSBkYXRhLmFsbFR3ZWV0RGF0YS51c2VyLm5hbWU7XG4gICAgJHNjb3BlLnR3aXR0ZXJIYW5kbGUgPSBkYXRhLmFsbFR3ZWV0RGF0YS51c2VyLnNjcmVlbl9uYW1lO1xuICAgICRzY29wZS50d2VldElkID0gZGF0YS5hbGxUd2VldERhdGEuaWRfc3RyO1xuICAgICRzY29wZS50d2VldCA9IGRhdGEudHdlZXRCb2R5O1xuICAgICRzY29wZS5mYXZvcml0ZXMgPSBkYXRhLmZhdm9yaXRlcztcbiAgICAkc2NvcGUucmV0d2VldHMgPSBkYXRhLnJldHdlZXRzO1xuICAgICRzY29wZS5sb2FkZWRUd2l0dGVyID0gdHJ1ZTtcbiAgICBpZiAoJHNjb3BlLmxvYWRlZEluc3RhKXtcbiAgICAgICRzY29wZS5sb2FkZWQgPSB0cnVlO1xuICAgIH1cbiAgfSlcbiAgJHNjb3BlLmVuYWJsZSA9IHRydWU7XG4gICRzY29wZS5hdXRoID0gQXV0aDtcbiAgJHNjb3BlLmF1dGguJG9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbihmaXJlYmFzZVVzZXIpIHtcbiAgICAkc2NvcGUuZmlyZWJhc2VVc2VyID0gZmlyZWJhc2VVc2VyO1xuXG4gIH0pO1xufV0pXG5cblxuXG5cbi5jb250cm9sbGVyKCdCbG9nQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyRodHRwJywnJHRpbWVvdXQnLCckbG9jYXRpb24nLCckc3RhdGVQYXJhbXMnLCdBdXRoJywnQmxvZycsJ0hlbHBlclNlcnZpY2UnLCdJbnN0YWdyYW1GYWN0b3J5JywnQWxsVGFnc1NlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGh0dHAsICR0aW1lb3V0LCAkbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgQXV0aCwgQmxvZywgSGVscGVyU2VydmljZSwgSW5zdGFncmFtRmFjdG9yeSwgQWxsVGFnc1NlcnZpY2Upe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgyNTIsIDIzNCwgMjQwLCAuOSknO1xuICBtYWluLnN0eWxlLndpZHRoID0gJyc7XG4gIG1haW4uc3R5bGUucGFkZGluZyA9ICcnO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuICAkc2NvcGUuYWxsVGFncyA9IEFsbFRhZ3NTZXJ2aWNlKCk7XG5cbiAgJHNjb3BlLmxvY2F0aW9uID0gJGxvY2F0aW9uLiQkcGF0aDtcbiAgLy8gY29uc29sZS5sb2coXCJsb2NhdGlvbjogXCIsJHNjb3BlLmxvY2F0aW9uKTtcbiAgXG4gIC8vICRzY29wZS5waG90b3MgPSBJbnN0YWdyYW0uZGF0YTtcbiAgSW5zdGFncmFtRmFjdG9yeS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xuICAgIC8vIGNvbnNvbGUubG9nKFwid2hhdCBpcyBkYXRhPyBcIixkYXRhKTtcbiAgICAkc2NvcGUucGhvdG9zID0gZGF0YS5kYXRhO1xuICAgICRzY29wZS5sb2FkZWQgPSB0cnVlO1xuICB9KVxuICAkc2NvcGUuZW5hYmxlID0gdHJ1ZTtcbiAgJHNjb3BlLnBhcnNlVGl0bGUgPSBIZWxwZXJTZXJ2aWNlLnRpdGxlVG9VUkw7XG5cbiAgLy8gJHNjb3BlLmF1dGggPSBBdXRoO1xuICAvLyAkc2NvcGUuYXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAvLyAgICRzY29wZS5maXJlYmFzZVVzZXIgPSBmaXJlYmFzZVVzZXI7XG5cbiAgLy8gfSk7XG4gICRzY29wZS5hbGxQb3N0cyA9IEJsb2c7XG4gICRzY29wZS5wYWdlID0gJHN0YXRlUGFyYW1zLnBhZ2UgfHwgMDtcbiAgJHNjb3BlLnBhZ2VVcCA9ICcvYmxvZy8nICsgKHBhcnNlSW50KCRzY29wZS5wYWdlKSArIDEpO1xuICAkc2NvcGUucGFnZURvd24gPSAnL2Jsb2cvJyArIEhlbHBlclNlcnZpY2UucGFnZURvd24oJHNjb3BlLnBhZ2UpO1xuICAkc2NvcGUubGVuZ3RoID0gQmxvZy5sZW5ndGg7XG4gICRzY29wZS5maXJzdCA9IEhlbHBlclNlcnZpY2UuZmluZEZpcnN0KCRzY29wZS5sZW5ndGgsICRzY29wZS5wYWdlKTtcblxuXG4gICRzY29wZS5sYXN0ID0gJHNjb3BlLmxlbmd0aCAtICg0ICogJHNjb3BlLnBhZ2UpO1xuICAkc2NvcGUucG9zdHMgPSBCbG9nLnNsaWNlKCRzY29wZS5maXJzdCwgJHNjb3BlLmxhc3QpO1xuXG4gIFxuXG4gICRzY29wZS5lZGl0UG9zdCA9IGZ1bmN0aW9uKHNsdWcpeyBcbiAgICAkbG9jYXRpb24udXJsKCcvYmxvZy9lZGl0Lycrc2x1Zyk7XG4gIH1cblxuICBcblxufV0pXG5cblxuLmNvbnRyb2xsZXIoJ0Jsb2dBcmNoaXZlQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsJyR0aW1lb3V0JywnJHN0YXRlUGFyYW1zJywnJGxvY2F0aW9uJywgJ0Jsb2cnLCdBcmNoaXZlJywnQXV0aCcsJ0hlbHBlclNlcnZpY2UnLCdBbGxUYWdzU2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkdGltZW91dCwgJHN0YXRlUGFyYW1zLCAkbG9jYXRpb24sIEJsb2csIEFyY2hpdmUsIEF1dGgsIEhlbHBlclNlcnZpY2UsIEFsbFRhZ3NTZXJ2aWNlKXtcbiAgICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbm90TG9hZGVkJyk7XG4gICAkc2NvcGUubG9jYXRpb24gPSAkbG9jYXRpb24uJCRwYXRoO1xuICAkc2NvcGUuYWxsVGFncyA9IEFsbFRhZ3NTZXJ2aWNlKCk7XG4gICRzY29wZS5lbmFibGUgPSB0cnVlO1xuICAvLyAkc2NvcGUucGhvdG9zID0gSW5zdGFncmFtLmRhdGE7XG4gICRzY29wZS5mdWxsQmxvZyA9IEJsb2c7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBBcmNoaXZlLmxlbmd0aDsgaSsrKXtcbiAgICB2YXIga2V5ID0gQXJjaGl2ZVtpXS4kaWQ7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBCbG9nLmxlbmd0aDsgaisrKXtcbiAgICAgIHZhciBibG9nS2V5ID0gQmxvZ1tqXS4kaWQ7XG4gICAgICBpZiAoa2V5ID09PSBibG9nS2V5KXtcbiAgICAgICAgcmVzdWx0LnB1c2goQmxvZ1tqXSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICAkc2NvcGUuYWxsUG9zdHMgPSByZXN1bHQ7IFxuICAkc2NvcGUucGFyYW1zID0gJHN0YXRlUGFyYW1zO1xuXG5cbiAgJHNjb3BlLnBhcnNlVGl0bGUgPSBIZWxwZXJTZXJ2aWNlLnRpdGxlVG9VUkw7XG5cblxuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcblxuICB9KTtcbiAgJHNjb3BlLnBhZ2UgPSAkc3RhdGVQYXJhbXMucGFnZSB8fCAwO1xuICAkc2NvcGUucGFnZVVwID0gJy9ibG9nL2FyY2hpdmVzLycgKyAkc3RhdGVQYXJhbXMueWVhciArICcvJyArICRzdGF0ZVBhcmFtcy5tb250aCArICcvJyArIChwYXJzZUludCgkc2NvcGUucGFnZSkgKyAxKTtcbiAgJHNjb3BlLnBhZ2VEb3duID0gJy9ibG9nL2FyY2hpdmVzLycgKyAkc3RhdGVQYXJhbXMueWVhciArICcvJyArICRzdGF0ZVBhcmFtcy5tb250aCArICcvJyArIEhlbHBlclNlcnZpY2UucGFnZURvd24oJHNjb3BlLnBhZ2UpO1xuICAkc2NvcGUubGVuZ3RoID0gJHNjb3BlLmFsbFBvc3RzLmxlbmd0aDtcbiAgJHNjb3BlLmZpcnN0ID0gSGVscGVyU2VydmljZS5maW5kRmlyc3QoJHNjb3BlLmxlbmd0aCwgJHNjb3BlLnBhZ2UpO1xuXG5cbiAgJHNjb3BlLmxhc3QgPSAkc2NvcGUubGVuZ3RoIC0gKDQgKiAkc2NvcGUucGFnZSk7XG4gIC8vIGNvbnNvbGUubG9nKFwiTGFzdDogXCIsJHNjb3BlLmxhc3QpO1xuICAkc2NvcGUucG9zdHMgPSAkc2NvcGUuYWxsUG9zdHMuc2xpY2UoJHNjb3BlLmZpcnN0LCAkc2NvcGUubGFzdCk7XG4gIC8vIGNvbnNvbGUubG9nKCRzY29wZS5wb3N0cyk7XG5cbiAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpOyAgICBcbiAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTtcbiAgfSlcblxuICAkc2NvcGUuZWRpdFBvc3QgPSBmdW5jdGlvbihwb3N0KXtcbiAgICB2YXIgdGl0bGVQYXJzZWQgPSBIZWxwZXJTZXJ2aWNlLnRpdGxlVG9VUkwocG9zdC5wb3N0VGl0bGUpO1xuICAgICRsb2NhdGlvbi51cmwoJy9ibG9nL2VkaXQvJyt0aXRsZVBhcnNlZCk7XG4gIH1cbn1dKSBcblxuXG4uY29udHJvbGxlcignQmxvZ1RhZ3NDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJywnJHN0YXRlUGFyYW1zJywnJGxvY2F0aW9uJywgJyR0aW1lb3V0JywnQmxvZycsJ1RhZ3NTaG93JywnQXV0aCcsJ0hlbHBlclNlcnZpY2UnLCdBbGxUYWdzU2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsICRsb2NhdGlvbiwgJHRpbWVvdXQsIEJsb2csIFRhZ3NTaG93LCBBdXRoLCBIZWxwZXJTZXJ2aWNlLCBBbGxUYWdzU2VydmljZSl7XG4gICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ25vdExvYWRlZCcpO1xuICAgJHNjb3BlLmxvY2F0aW9uID0gJGxvY2F0aW9uLiQkcGF0aDtcbiAgJHNjb3BlLmFsbFRhZ3MgPSBBbGxUYWdzU2VydmljZSgpO1xuICAkc2NvcGUuZW5hYmxlID0gdHJ1ZTtcbiAgJHNjb3BlLnRhZ05hbWUgPSBUYWdzU2hvd1swXS5uYW1lO1xuICB2YXIgdGhpc1RhZyA9IFRhZ3NTaG93WzBdLiRpZDtcbiAgdmFyIHNlbGVjdFBvc3RzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQmxvZy5sZW5ndGg7IGkrKyl7XG4gICAgdmFyIHRoaXNQb3N0VGFncyA9IEJsb2dbaV0udGFncztcbiAgICBpZiAodGhpc1Bvc3RUYWdzW3RoaXNUYWddKXtcbiAgICAgIHNlbGVjdFBvc3RzLnB1c2goQmxvZ1tpXSk7XG4gICAgfVxuICB9O1xuXG5cblxuXG5cblxuXG4gIFxuICAvLyB2YXIgbGVuZ3RoID0gMDtcbiAgLy8gdmFyIGk7XG4gIC8vIGZvciAoaSBpbiBhbGxQb3N0cykge1xuICAvLyAgIGlmIChhbGxQb3N0cy5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAvLyAgICAgICBsZW5ndGgrKztcbiAgLy8gICAgICAgc2VsZWN0UG9zdHMucHVzaChhbGxQb3N0c1tpXSk7XG4gIC8vICAgfVxuICAvLyB9XG4gIC8vICRzY29wZS5wYXJzZVRpdGxlID0gSGVscGVyU2VydmljZS50aXRsZVRvVVJMO1xuXG5cblxuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcblxuICB9KTtcbiAgJHNjb3BlLnBhZ2UgPSAkc3RhdGVQYXJhbXMucGFnZSB8fCAwO1xuICAkc2NvcGUucGFnZVVwID0gJy9ibG9nL3RhZ3MvJyArICRzdGF0ZVBhcmFtcy50YWdOYW1lICArICcvJyArIChwYXJzZUludCgkc2NvcGUucGFnZSkgKyAxKTtcbiAgJHNjb3BlLnBhZ2VEb3duID0gJy9ibG9nL3RhZ3MvJyArICRzdGF0ZVBhcmFtcy50YWdOYW1lICsgJy8nICsgSGVscGVyU2VydmljZS5wYWdlRG93bigkc2NvcGUucGFnZSk7XG4gICRzY29wZS5sZW5ndGggPSBsZW5ndGg7XG4gICRzY29wZS5maXJzdCA9IEhlbHBlclNlcnZpY2UuZmluZEZpcnN0KCRzY29wZS5sZW5ndGgsICRzY29wZS5wYWdlKTtcblxuICAkc2NvcGUubGFzdCA9ICRzY29wZS5sZW5ndGggLSAoNCAqICRzY29wZS5wYWdlKTtcbiAgY29uc29sZS5sb2coXCJMYXN0OiBcIiwkc2NvcGUubGFzdCk7XG4gICRzY29wZS5wb3N0cyA9IHNlbGVjdFBvc3RzLnNsaWNlKCRzY29wZS5maXJzdCwgJHNjb3BlLmxhc3QpO1xuICBjb25zb2xlLmxvZygkc2NvcGUucG9zdHMpO1xuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTsgICBcbiAgfSlcblxuICAkc2NvcGUuZWRpdFBvc3QgPSBmdW5jdGlvbihwb3N0KXtcbiAgICB2YXIgdGl0bGVQYXJzZWQgPSBIZWxwZXJTZXJ2aWNlLnRpdGxlVG9VUkwocG9zdC5wb3N0VGl0bGUpO1xuICAgICRsb2NhdGlvbi51cmwoJy9ibG9nL2VkaXQvJyt0aXRsZVBhcnNlZCk7XG4gIH1cbn1dKSBcblxuXG4uY29udHJvbGxlcignQmxvZ1Nob3dDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJywnJHN0YXRlUGFyYW1zJywnJGxvY2F0aW9uJywnJHRpbWVvdXQnLCd0aGlzUG9zdCcsJ0Jsb2cnLCdBbGxUYWdzU2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsICRsb2NhdGlvbiwgJHRpbWVvdXQsIHRoaXNQb3N0LCBCbG9nLCBBbGxUYWdzU2VydmljZSl7XG4gJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdub3RMb2FkZWQnKTtcbiAkc2NvcGUubG9jYXRpb24gPSAkbG9jYXRpb24uJCRwYXRoO1xuICRzY29wZS5hbGxUYWdzID0gQWxsVGFnc1NlcnZpY2UoKTtcbiAkc2NvcGUuZW5hYmxlID0gZmFsc2U7XG4gJHNjb3BlLnJlY2VudFBvc3RzID0gQmxvZztcbiBjb25zb2xlLmxvZygkc2NvcGUucmVjZW50UG9zdHMpO1xuIC8vICRzY29wZS5waG90b3MgPSBJbnN0YWdyYW0uZGF0YTsgXG4gJHNjb3BlLnBvc3RzID0gdGhpc1Bvc3Q7XG4gJHNjb3BlLmFsbFBvc3RzID0gdGhpc1Bvc3Q7XG5cbiAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpOyAgXG4gICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7XG4gIH0pXG59XSkgIFxuXG5cbi5jb250cm9sbGVyKCdCbG9nU2lkZWJhckN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCckc3RhdGVQYXJhbXMnLCckdGltZW91dCcsJ0FyY2hpdmVTZXJ2aWNlJywnQWxsVGFnc1NlcnZpY2UnLCdCbG9nUG9zdHMnLCdIZWxwZXJTZXJ2aWNlJywnJHVpYk1vZGFsJywnJGxvZycsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsJHRpbWVvdXQsIEFyY2hpdmVTZXJ2aWNlLCBBbGxUYWdzU2VydmljZSwgQmxvZ1Bvc3RzLCBIZWxwZXJTZXJ2aWNlLCAkdWliTW9kYWwsICRsb2cpe1xuIFxuICAkc2NvcGUucmVjZW50UG9zdHMgPSBCbG9nUG9zdHMoKTtcbiAgJHNjb3BlLnBhcnNlVGl0bGUgPSBIZWxwZXJTZXJ2aWNlLnRpdGxlVG9VUkw7XG4gICRzY29wZS55ZWFycyA9IEFyY2hpdmVTZXJ2aWNlLnllYXJzKCk7XG4gICRzY29wZS55ZWFycy4kbG9hZGVkKCkudGhlbihmdW5jdGlvbigpe1xuICB9KVxuXG4gICRzY29wZS5hbGxUYWdzID0gQWxsVGFnc1NlcnZpY2UoKTtcblxuICAkc2NvcGUubmV3QmxvZ1Bvc3QgPSBmdW5jdGlvbigpe1xuICAgICRzdGF0ZS5nbyhcImJsb2ctbmV3XCIpO1xuICB9XG5cbiAgICAkc2NvcGUuZWRpdFRhZyA9IGZ1bmN0aW9uKHRhZykge1xuICAgIC8vIGNvbnNvbGUubG9nKHdoaWNoUGFnZSk7XG4gICAgLy8gY29uc29sZS5sb2coaW5kZXgpO1xuICAgIHZhciBtb2RhbEluc3RhbmNlID0gJHVpYk1vZGFsLm9wZW4oe1xuICAgICAgYW5pbWF0aW9uOiB0cnVlLFxuICAgICAgYmFja2Ryb3A6IHRydWUsXG4gICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ibG9nL2VkaXRUYWdzTW9kYWwuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnRWRpdEJsb2dUYWdzQ3RybCcsXG4gICAgICBzaXplOiAnbGcnLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBcIkJsb2dcIjogZnVuY3Rpb24oQmxvZ1Bvc3RzKXtcbiAgICAgICAgcmV0dXJuIEJsb2dQb3N0cygpLiRsb2FkZWQoKTtcbiAgICAgICAgfSwgICBcbiAgICAgICAgdGFnOiB0YWdcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICBjb25zb2xlLmxvZyhcInN1Ym1pdHRlZCBtb2RhbFwiKTtcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAkbG9nLmluZm8oJ01vZGFsIGRpc21pc3NlZCBhdDogJyArIG5ldyBEYXRlKCkpO1xuICAgIH0pO1xuICB9OyBcblxufV0pOyIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzQ3RybHMnKVxuXG5cbi5jb250cm9sbGVyKCdlZGl0TW9kYWxDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJHVpYk1vZGFsSW5zdGFuY2UsIGVkaXRTaG93LCBpbmRleCwgJGZpcmViYXNlQXJyYXkpIHtcbiAgJHNjb3BlLnNob3dzID0gZWRpdFNob3c7XG4gICRzY29wZS5zaG93ID0gZWRpdFNob3dbaW5kZXhdO1xuXG4gIGNvbnNvbGUubG9nKFwiaW5kZXggaXMgXCIsaW5kZXgpO1xuICAkc2NvcGUuZGF0ZU9iaiA9IG5ldyBEYXRlKCRzY29wZS5zaG93LnVuaXggKiAxMDAwKTtcbiAgY29uc29sZS5sb2coJHNjb3BlLmRhdGVPYmopO1xuXG5cblxuICAkc2NvcGUub2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgJHNjb3BlLnNob3cuZGF0ZSA9IG1vbWVudCgkc2NvcGUuZGF0ZU9iaikuZm9ybWF0KCdkZGQsIE1NTU0gRG8nKTtcbiAgICAkc2NvcGUuc2hvdy51bml4ID0gJHNjb3BlLmRhdGVPYmouZ2V0VGltZSgpIC8gMTAwMDtcbiAgICAkc2NvcGUuc2hvd3MuJHNhdmUoJHNjb3BlLnNob3cpLnRoZW4oZnVuY3Rpb24ocmVmKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInN1Y2Nlc3NcIik7XG4gICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3I6XCIsIGVycm9yKTtcbiAgICB9KTtcbiAgICAkdWliTW9kYWxJbnN0YW5jZS5jbG9zZSgpO1xuICB9O1xuXG4gICRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgJHVpYk1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG4gIH07XG5cbiAgJHNjb3BlLmRlbGV0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLnNob3dzLiRyZW1vdmUoJHNjb3BlLnNob3cpLnRoZW4oZnVuY3Rpb24ocmVmKXtcbiAgICAgIGNvbnNvbGUubG9nKFwic3VjY2Vzc2Z1bCBkZWxldGU6IFwiLHJlZik7XG4gICAgfSwgZnVuY3Rpb24oZXJyb3Ipe1xuICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsZXJyb3IpXG4gICAgfSk7XG4gICAgJHVpYk1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcbiAgfVxuXG59KVxuXG5cbi5jb250cm9sbGVyKCduZXdNb2RhbEN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkdWliTW9kYWxJbnN0YW5jZSwgJGZpcmViYXNlQXJyYXkpIHtcblxuICAkc2NvcGUuc2hvdyA9IHt9O1xuICB2YXIgc2hvd3NSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignc2hvd3MnKTtcbiAgJHNjb3BlLnNob3dzQXJyYXkgPSAkZmlyZWJhc2VBcnJheShzaG93c1JlZik7XG5cbiAgJHNjb3BlLm9rID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGlzRGF0ZSA9IG1vbWVudCgkc2NvcGUuc2hvdy5zaG93RGF0ZSkuZm9ybWF0KCdkZGQsIE1NTU0gRG8nKTtcbiAgICB2YXIgdGhpc1VuaXggPSAkc2NvcGUuc2hvdy5zaG93RGF0ZS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgIGNvbnNvbGUubG9nKHRoaXNEYXRlKTtcbiAgICB2YXIgb2JqZWN0ID0ge1xuICAgICAgXCJkYXRlXCI6IHRoaXNEYXRlLFxuICAgICAgXCJ1bml4XCI6IHRoaXNVbml4LFxuICAgICAgXCJsb2NhdGlvblwiOiAkc2NvcGUuc2hvdy5zaG93TG9jYXRpb24sXG4gICAgICBcInZlbnVlXCI6ICRzY29wZS5zaG93LnZlbnVlLFxuICAgICAgXCJ2ZW51ZUxpbmtcIjogJHNjb3BlLnNob3cudmVudWVMaW5rIHx8IFwiXCIsXG4gICAgICBcInRpY2tldExpbmtcIjogJHNjb3BlLnNob3cudGlja2V0TGluayB8fCBcIlwiXG4gICAgfVxuICAgIGNvbnNvbGUubG9nKG9iamVjdCk7XG4gICAgJHNjb3BlLnNob3dzQXJyYXkuJGFkZChvYmplY3QpO1xuICAgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gIH07XG5cbiAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkdWliTW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgfTtcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cblxuLmNvbnRyb2xsZXIoJ05hdkN0cmwnLCBbJyRzY29wZScsJyR0aW1lb3V0JywnJGxvZycsJyR1aWJNb2RhbCcsJyRodHRwJywnQXV0aCcsJyRzdGF0ZScsJyRzZXNzaW9uU3RvcmFnZScsJyRsb2NhdGlvbicsJyR3aW5kb3cnLCBmdW5jdGlvbigkc2NvcGUsICR0aW1lb3V0LCRsb2csICR1aWJNb2RhbCwgJGh0dHAsIEF1dGgsICRzdGF0ZSwgJHNlc3Npb25TdG9yYWdlLCRsb2NhdGlvbiwgJHdpbmRvdyl7XG4gIC8vICRzY29wZS5zZXNzaW9uU3RvcmFnZSA9ICRzZXNzaW9uU3RvcmFnZTtcbiAgLy8gaWYgKCEkc2NvcGUuc2Vzc2lvblN0b3JhZ2UuaGFzaCl7XG4gIC8vICAgJHNjb3BlLnNlc3Npb25TdG9yYWdlLmhhc2ggPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtcbiAgLy8gfSBlbHNlIHtcbiAgLy8gICBjb25zb2xlLmxvZyhcImFscmVhZHkgYSBzZXNzaW9uIGhhc2hcIik7XG4gIC8vIH1cbiAgLy8gY29uc29sZS5sb2coXCJXaGF0IGlzIHNlc3Npb24gc3RvcmFnZT8gXCIsJHNjb3BlLnNlc3Npb25TdG9yYWdlKTtcbiAgJHNjb3BlLmF1dGggPSBBdXRoO1xuICAkc2NvcGUuYXV0aC4kb25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uKGZpcmViYXNlVXNlcikge1xuICAgICRzY29wZS5maXJlYmFzZVVzZXIgPSBmaXJlYmFzZVVzZXI7XG4gIH0pO1xuXG5cblxuICAkc2NvcGUudXNlciA9IHt9O1xuICAkc2NvcGUubWFpbENvbmZpcm0gPSBmYWxzZTtcbiAgdmFyIHcgPSB3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggfHwgZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtcbiAgdmFyIGggPSB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCB8fCBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcbiAgJHNjb3BlLmhlaWdodCA9IGg7XG5cbiAgdmFyIG1vYmlsZUJHID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2JpbGUtYmFja2dyb3VuZC1kaXZcIik7XG4gIGlmICh3IDwgOTAwKXtcbiAgbW9iaWxlQkcuc3R5bGUuaGVpZ2h0ID0gaCArIFwicHhcIjtcbiAgfSBlbHNlIHtcbiAgbW9iaWxlQkcuc3R5bGUuaGVpZ2h0ID0gMCArIFwicHhcIjsgXG4gIH1cbiAgLy8gY29uc29sZS5sb2coXCJpbm5lciB3aWR0aDogXCIsd2lkdGgpO1xuICBpZiAoISRzY29wZS5sb2FkZWQgJiYgdyA+IDgwNil7IFxuICAgICRzY29wZS5tb2JpbGVXaWR0aCA9IGZhbHNlO1xuICB9IGVsc2Uge1xuICAgICAkc2NvcGUubW9iaWxlV2lkdGggPSB0cnVlO1xuICB9IFxuXG5cblxuXG4gIFxuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgLy8gT1ZFUkxBWSBDUkVBVElPTlxuICAgXG4gICAgICBpZiAodyA+PSA2Nzgpe1xuICAgICAgaWYgKCRzY29wZS5maXJlYmFzZVVzZXIgPT09IG51bGwgJiYgJGxvY2F0aW9uLiQkcGF0aCAhPT0gXCIvbG9naW5cIil7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZW50ZXJpbmcgcG9wdXBcIik7XG4gICAgICAgIFxuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib3ZlcmxheU1haWxcIikpe1xuICAgICAgICAgIFxuICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgIGRpdi5pZCA9IFwib3ZlcmxheU1haWxcIjtcbiAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gXCJvdmVybGF5LXN0YXJ0XCI7XG4gICAgICAgICAgdmFyIGJvZHkgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgICAgIHZhciBwb3BVcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9wLXVwXCIpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGJvZHkuc2Nyb2xsSGVpZ2h0KTtcbiAgICAgICAgICBkaXYuc3R5bGUuaGVpZ2h0ID0gYm9keS5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XG4gICAgICAgICAgcG9wVXAuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICAgICAgICB2YXIgb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjb3ZlcmxheU1haWxcIik7XG4gICAgICAgICAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHZhciBzY3JvbGxUb3AgPSAkd2luZG93LnBhZ2VZT2Zmc2V0O1xuICAgICAgICAvLyB2YXIgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjb3ZlcmxheS1jb250ZW50XCIpO1xuICAgICAgICAvLyBjb250ZW50LnN0eWxlLnRvcCA9IHNjcm9sbFRvcCArIFwicHhcIjtcbiAgICAgICAgJHNjb3BlLmlzUG9wdXAgPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG4gIH0sNjAwMClcbiAgICBcblxuICAkc2NvcGUuY2xvc2VQb3B1cCA9IGZ1bmN0aW9uKCl7XG4gICAgJHNjb3BlLmlzUG9wdXAgPSBmYWxzZTtcbiAgfVxuICAgIFxuICAgXG4gIFxuICAkc2NvcGUudG9TdG9yZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAkc2NvcGUuaXNQb3B1cCA9IGZhbHNlO1xuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgJHdpbmRvdy5vcGVuKCdodHRwczovL2loZWFydHNpc3RlcnMuYmFuZGNhbXAuY29tLycpO1xuICAgICAgfSwzMDApO1xuICB9XG5cblxuXG5cbiAgJHNjb3BlLnRvZ2dsZSA9IHRydWU7XG4gIHZhciB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gIGlmICh3aWR0aCA+IDgwNil7XG4gICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICAgIH0sIDEwMCk7XG4gIH0gZWxzZSB7XG4gICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICB9XG59XSlcblxuLmNvbnRyb2xsZXIoJ0Zvb3RlckN0cmwnLCBbJyRzY29wZScsJyR0aW1lb3V0JywnJGxvZycsJyR1aWJNb2RhbCcsJyRodHRwJywnQXV0aCcsJyRzdGF0ZScsJyRzZXNzaW9uU3RvcmFnZScsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQsJGxvZywgJHVpYk1vZGFsLCAkaHR0cCwgQXV0aCwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2Upe1xuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcbiAgfSk7XG4gIFxuICAkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKXtcbiAgICAvLyBjb25zb2xlLmxvZyhcImNsaWNrZWQgbG9nIG91dFwiKTtcbiAgICBBdXRoLiRzaWduT3V0KCk7XG4gIH07XG5cbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24oKXtcbiAgICAvLyBjb25zb2xlLmxvZyhcImNsaWNrZWQgbG9nIGluXCIpO1xuICAgICRzdGF0ZS5nbygnbG9naW4nKTsgIFxuICB9XG5cblxuXG5cbiAgdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gIGlmICh3aWR0aCA+IDgwNil7XG4gICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICAgIH0sIDEwMCk7XG4gIH0gZWxzZSB7XG4gICAgJHNjb3BlLmZhZGUgPSB0cnVlO1xuICB9XG59XSlcblxuXG5cblxuXG4uY29udHJvbGxlcignTWFpbE1vZGFsQ3RybCcsIFsnJHNjb3BlJywnJHRpbWVvdXQnLCckdWliTW9kYWwnLCckdWliTW9kYWxJbnN0YW5jZScsJyRodHRwJywnQXV0aCcsJyRzdGF0ZScsJyRzZXNzaW9uU3RvcmFnZScsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQsJHVpYk1vZGFsLCR1aWJNb2RhbEluc3RhbmNlLCAkaHR0cCwgQXV0aCwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2Upe1xuICAkc2NvcGUuY2xvc2UgPSBmdW5jdGlvbigpe1xuICAgIC8vIGNvbnNvbGUubG9nKCR1aWJNb2RhbEluc3RhbmNlKVxuICAgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICB9XG5cblxufV0pIiwiYW5ndWxhci5tb2R1bGUoJ1Npc3RlcnNDdHJscycpXG5cbi5jb250cm9sbGVyKCdTaG93c0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCdjdXJyZW50QXV0aCcsJyR1aWJNb2RhbCcsJyRsb2cnLCckZmlyZWJhc2VBcnJheScsJ21vbWVudCcsJ0F1dGgnLCdnZXRTaG93cycsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBjdXJyZW50QXV0aCwgJHVpYk1vZGFsLCRsb2csICRmaXJlYmFzZUFycmF5LCBtb21lbnQsIEF1dGgsIGdldFNob3dzKXtcbnZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIC45KSc7XG4gIG1haW4uc3R5bGUud2lkdGggPSAnJztcbiAgbWFpbi5zdHlsZS5wYWRkaW5nID0gJyc7XG4kc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuICAkc2NvcGUuc2hvd3MgPSBnZXRTaG93cztcblxuICAkc2NvcGUuYXV0aCA9IEF1dGg7XG4gICRzY29wZS5hdXRoLiRvbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24oZmlyZWJhc2VVc2VyKSB7XG4gICAgJHNjb3BlLmZpcmViYXNlVXNlciA9IGZpcmViYXNlVXNlcjtcbiAgICAvLyBjb25zb2xlLmxvZyhcImZpcmViYXNlIHVzZXIgaXMgXCIsJHNjb3BlLmZpcmViYXNlVXNlcik7XG4gIH0pO1xuXG5cbiAgJHNjb3BlLm9wZW4gPSBmdW5jdGlvbih3aGljaFBhZ2UsIGluZGV4KSB7XG4gICAgLy8gY29uc29sZS5sb2cod2hpY2hQYWdlKTtcbiAgICAvLyBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgdmFyIG1vZGFsSW5zdGFuY2UgPSAkdWliTW9kYWwub3Blbih7XG4gICAgICBhbmltYXRpb246IHRydWUsXG4gICAgICBiYWNrZHJvcDogdHJ1ZSxcbiAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3Nob3dzLycrd2hpY2hQYWdlKydTaG93TW9kYWwuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiB3aGljaFBhZ2UrJ01vZGFsQ3RybCcsXG4gICAgICBzaXplOiAnbGcnLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBlZGl0U2hvdzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiAkc2NvcGUuc2hvd3M7XG4gICAgICAgIH0sXG4gICAgICAgIGluZGV4OiBpbmRleFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgbW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbiAoc2VsZWN0ZWRJdGVtKSB7XG4gICAgICAkc2NvcGUuc2VsZWN0ZWQgPSBzZWxlY3RlZEl0ZW07XG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgJGxvZy5pbmZvKCdNb2RhbCBkaXNtaXNzZWQgYXQ6ICcgKyBuZXcgRGF0ZSgpKTtcbiAgICB9KTtcbiAgfTsgXG5cbn1dKSAiLCJhbmd1bGFyLm1vZHVsZSgnU2lzdGVyc0N0cmxzJylcblxuXG4uY29udHJvbGxlcignU3RvcmVDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc2Vzc2lvblN0b3JhZ2UsIGFsbFByb2R1Y3RzLCBQcm9kdWN0c1NlcnZpY2Upe1xuICAgIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICAgIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICAgbWFpbi5zdHlsZS53aWR0aCA9ICcnO1xuICAgIG1haW4uc3R5bGUucGFkZGluZyA9ICcnO1xuICAgICRzY29wZS5sb2FkZWQgPSBmYWxzZTtcbiAgICAkc2NvcGUucHJvZHVjdHMgPSBhbGxQcm9kdWN0cztcblxuXG4gICAgXG4gICAgJHNjb3BlLnNob3dQcm9kdWN0ID0gZnVuY3Rpb24oaWQpe1xuICAgICAgJHN0YXRlLmdvKCdzdG9yZVNob3cnLCB7aWQ6aWR9KTtcbiAgICB9XG5cbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTsgXG4gICAgfSlcbiBcbn0pXG5cbi5jb250cm9sbGVyKCdTdG9yZUNhcnRDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc2Vzc2lvblN0b3JhZ2Upe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcbiAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcblxuICAkc2NvcGUudG9DaGVja291dCA9IGZ1bmN0aW9uKCl7XG4gICAgJGxvY2F0aW9uLnVybCgnL3N0b3JlL2NoZWNrb3V0L2FkZHJlc3MnKTtcbiAgfVxuXG4gICRzY29wZS5jb250aW51ZSA9IGZ1bmN0aW9uKCl7XG4gICAgJGxvY2F0aW9uLnVybCgnL3N0b3JlJyk7XG4gIH1cbn0pXG5cblxuXG4uY29udHJvbGxlcignU3RvcmVTaG93Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlUGFyYW1zLCAkc3RhdGUsICRodHRwLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc2Vzc2lvblN0b3JhZ2UsIG9uZVByb2R1Y3Qpe1xuICB2YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcbiAgJHNjb3BlLiRlbWl0KCdsb2FkTWFpbkNvbnRhaW5lcicsICdsb2FkZWQnKTtcbiRzY29wZS5wcm9kdWN0ID0gb25lUHJvZHVjdDtcbiRzY29wZS5pbWFnZXMgPSBvbmVQcm9kdWN0LmltYWdlcztcbnZhciBjdXJyZW50QWN0aXZlU3JjID0gJHNjb3BlLmltYWdlc1swXTtcblxuJHNjb3BlLnNrdXMgPSAkc2NvcGUucHJvZHVjdC5za3VzLmRhdGE7XG5cbiRzY29wZS5kYXRhID0ge307XG4kc2NvcGUuZGF0YS5zZWxlY3RlZCA9ICRzY29wZS5wcm9kdWN0LnNrdXMuZGF0YVswXTtcblxuXG52YXIgbWFpbkltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpbi1wcm9kdWN0LXBob3RvIGltZ1wiKTtcbm1haW5JbWcuc3JjID0gJHNjb3BlLmltYWdlc1swXTtcblxuXG4kc2NvcGUuaXNBY3RpdmVJbWcgPSBmdW5jdGlvbigpe1xuICBpZiAodGhpcy5pbWcgPT09IGN1cnJlbnRBY3RpdmVTcmMpe1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5cblxuJHNjb3BlLmNoYW5nZUFjdGl2ZSA9IGZ1bmN0aW9uKCl7XG4gIGN1cnJlbnRBY3RpdmVTcmMgPSB0aGlzLmltZztcbiAgbWFpbkltZy5zcmMgPSB0aGlzLmltZztcbn1cblxuXG5cblxuXG5cblxufSlcblxuXG5cblxuXG5cbi5jb250cm9sbGVyKCdDaGVja291dFRlbXBsYXRlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkaHR0cCwgJHRpbWVvdXQsICRsb2NhdGlvbiwgJGxvY2FsU3RvcmFnZSl7XG4gICRzY29wZS4kZW1pdCgnbG9hZE1haW5Db250YWluZXInLCAnbG9hZGVkJyk7XG4gICRzY29wZS4kc3RvcmFnZSA9ICRsb2NhbFN0b3JhZ2U7XG5cbiAgJHNjb3BlLiRvbignY2FydENoYW5nZScsIGZ1bmN0aW9uKGV2ZW50LCBkYXRhKSB7IFxuICAgICRzY29wZS5zaG93UGF0aCA9IGRhdGE7IFxuICB9KTtcbiAgaWYgKCEkc2NvcGUuc2hvd1BhdGgpe1xuICAgICRzY29wZS5zaG93UGF0aCA9ICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQ7XG4gIH1cblxuXG59KVxuXG5cblxuXG5cblxuLmNvbnRyb2xsZXIoJ1N0b3JlQWRkcmVzc0N0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJHdpbmRvdywgJHRpbWVvdXQsICRodHRwLCAkbG9jYXRpb24sICRsb2NhbFN0b3JhZ2UsIG5nQ2FydCwgJHJvb3RTY29wZSwgQ3VycmVudE9yZGVyU2VydmljZSl7XG4gIHZhciBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDI0NywgMjM3LCAyNDUsIDApJztcblxuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuICAkc2NvcGUuJHN0b3JhZ2UgPSAkbG9jYWxTdG9yYWdlO1xuICAkc2NvcGUuY2FydEl0ZW1zID0gbmdDYXJ0LmdldEl0ZW1zKCk7XG4gICRyb290U2NvcGUucGF0aCA9ICRsb2NhdGlvbi4kJHBhdGg7XG4gIGlmICghJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCB8fCAkc2NvcGUuJHN0b3JhZ2UucGF0aENvdW50IDwgMSl7XG4gICAgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCA9IDA7XG4gICAgJHNjb3BlLiRlbWl0KCdjYXJ0Q2hhbmdlJywgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCk7IFxuICB9IFxuICBcbiAgJHNjb3BlLmxvYWRlZCA9IFtdO1xuXG5cbiAgJHNjb3BlLmRhdGEgPSB7XG4gICAgXCJzaGlwcGluZ1wiOiB7XG4gICAgICBcImNvdW50cnlcIjoge31cbiAgICB9LFxuICAgIFwiYmlsbGluZ1wiOiB7XG4gICAgICBcImNvdW50cnlcIjoge31cbiAgICB9XG4gIH07XG4gICRzY29wZS5tYWlsaW5nTGlzdEFkZCA9IHRydWU7XG4gICRzY29wZS5zaGlwcGluZ1NhbWVCb29sID0gZmFsc2U7XG5cblxuICAvLyBSRVFVRVNUUyBGT1IgSlNPTiBEQVRBIEZPUiBORy1PUFRJT05TXG5cbiAgJGh0dHAuZ2V0KCcvanMvSlNPTi9jb3VudHJpZXMuanNvbicpLnN1Y2Nlc3MgKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAkc2NvcGUuY291bnRyaWVzID0gZGF0YTtcbiAgICAgICAgJHNjb3BlLmRhdGEuc2hpcHBpbmcuY291bnRyeSA9ICRzY29wZS5jb3VudHJpZXNbMF07XG4gICAgICAgICRzY29wZS5kYXRhLmJpbGxpbmcuY291bnRyeSA9ICRzY29wZS5jb3VudHJpZXNbMF07XG4gICAgICAgICRzY29wZS5sb2FkZWQucHVzaChcImdvXCIpO1xuICB9KTtcblxuICAkaHR0cC5nZXQoJy9qcy9KU09OL3N0YXRlcy5qc29uJykuc3VjY2VzcyAoZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICRzY29wZS5zdGF0ZXMgPSBkYXRhO1xuICAgICAgICAkc2NvcGUubG9hZGVkLnB1c2goXCJnb1wiKTtcbiAgfSk7XG5cbiAgJGh0dHAuZ2V0KCcvanMvSlNPTi9wcm92aW5jZXMuanNvbicpLnN1Y2Nlc3MgKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAkc2NvcGUucHJvdmluY2VzID0gZGF0YTtcbiAgICAgICAgJHNjb3BlLmxvYWRlZC5wdXNoKFwiZ29cIik7XG4gIH0pO1xuXG5cblxuICAkc2NvcGUuaXNTaGlwcGluZ1NhbWUgPSBmdW5jdGlvbigpe1xuICAgIGlmICgkc2NvcGUuZGF0YS5zaGlwcGluZ1NhbWUpe1xuICAgICAgJHNjb3BlLmRhdGEuYmlsbGluZyA9ICRzY29wZS5kYXRhLnNoaXBwaW5nO1xuICAgICAgJHNjb3BlLnNoaXBwaW5nU2FtZUJvb2wgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUuZGF0YS5iaWxsaW5nID0ge307XG4gICAgICAkc2NvcGUuc2hpcHBpbmdTYW1lQm9vbCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG5cbiAgJHNjb3BlLmNvdW50cnlDaGFuZ2UgPSBmdW5jdGlvbihjb3VudHJ5KXtcbiAgICBpZiAoY291bnRyeS5jb2RlID09PSAnVVMnKXtcbiAgICAgICRzY29wZS5zaGlwcGluZ1R5cGUgPSAkc2NvcGUuc2hpcFJhdGVzLmRvbWVzdGljO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUuc2hpcHBpbmdUeXBlID0gJHNjb3BlLnNoaXBSYXRlcy5pbnRlcm5hdGlvbmFsO1xuICAgIH1cbiAgfVxuXG4gICRzY29wZS5zdWJtaXRGb3JtID0gZnVuY3Rpb24oZm9ybSl7XG4gICAgIGlmKGZvcm0uJHZhbGlkKXtcbiAgICAgIFxuICAgICRzY29wZS5sb2FkZWQgPSBbXTtcbiAgICB2YXIgc2hpcCA9ICRzY29wZS5kYXRhLnNoaXBwaW5nO1xuICAgIHZhciBiaWxsID0gJHNjb3BlLmRhdGEuYmlsbGluZzsgXG4gICAgJHNjb3BlLmNvcHlJdGVtcyA9IGFuZ3VsYXIuY29weSgkc2NvcGUuY2FydEl0ZW1zKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRzY29wZS5jb3B5SXRlbXMubGVuZ3RoOyBpKyspe1xuICAgICAgZGVsZXRlICRzY29wZS5jb3B5SXRlbXNbaV0uX2RhdGE7XG4gICAgICBkZWxldGUgJHNjb3BlLmNvcHlJdGVtc1tpXS5hdHRyO1xuICAgIH1cbiAgICAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MgPSAkc2NvcGUuZGF0YS5iaWxsaW5nO1xuICAgIHZhciByZXEgPSB7XG4gICAgICB1cmw6ICcvc3RyaXBlL2NyZWF0ZU9yZGVyJyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIG9yZGVyOiB7XG4gICAgICAgICAgY3VycmVuY3k6ICd1c2QnLFxuICAgICAgICAgIGl0ZW1zOiAkc2NvcGUuY29weUl0ZW1zLFxuICAgICAgICAgIHNoaXBwaW5nOiB7XG4gICAgICAgICAgICBuYW1lOiBzaGlwLm5hbWUsXG4gICAgICAgICAgICBhZGRyZXNzOiB7XG4gICAgICAgICAgICAgIGxpbmUxOiBzaGlwLmFkZHJlc3MxLFxuICAgICAgICAgICAgICBsaW5lMjogc2hpcC5hZGRyZXNzMiB8fCBudWxsLFxuICAgICAgICAgICAgICBjaXR5OiBzaGlwLmNpdHksXG4gICAgICAgICAgICAgIHN0YXRlOiBzaGlwLnN0YXRlUHJvdmluY2Uuc2hvcnQgfHwgbnVsbCxcbiAgICAgICAgICAgICAgY291bnRyeTogc2hpcC5jb3VudHJ5LmNvZGUsXG4gICAgICAgICAgICAgIHBvc3RhbF9jb2RlOiBzaGlwLnBvc3RhbENvZGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGVtYWlsOiBzaGlwLmVtYWlsLFxuICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICB0YXhSYXRlOiBuZ0NhcnQuZ2V0VGF4UmF0ZSgpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBcbiAgICAkaHR0cChyZXEpLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXMpIHtcblxuICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgPT09ICdjcmVhdGVkJyl7XG4gICAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2UubWFpbGluZ0xpc3QgPSAkc2NvcGUubWFpbGluZ0xpc3RBZGQ7XG4gICAgICAgICAgICBpZiAoISRzY29wZS4kc3RvcmFnZS5hZGRyZXNzU3VibWl0KXtcbiAgICAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2UucGF0aENvdW50Kys7XG4gICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdjYXJ0Q2hhbmdlJywgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCk7ICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICRzY29wZS4kc3RvcmFnZS5hZGRyZXNzU3VibWl0ID0gdHJ1ZTsgICAgICAgICAgICBcbiAgICAgICAgICAgICRzY29wZS4kc3RvcmFnZS5vcmRlckRhdGEgPSByZXM7XG4gICAgICAgICAgICAkc2NvcGUuJGV2YWxBc3luYyhmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAkbG9jYXRpb24udXJsKCcvc3RvcmUvY2hlY2tvdXQvcGF5bWVudCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICBcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJHNjb3BlLmxvYWRlZCA9IFsxLCAyLCAzXTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTtcbiAgICAgICAgICAgICRzY29wZS5lcnJvck1lc3NhZ2UgPSByZXMuZGF0YS5tZXNzYWdlO1xuICAgICAgICAgIH0gXG4gICAgICAgIH0sIGZ1bmN0aW9uIGVycm9yKHJlcykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3IgXCIscmVzKTsgICAgICAgICAgICAgXG4gICAgICAgIH0pO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZm9ybSBpbnZhbGlkISFcIik7XG4gICAgICB9XG5cbiAgfVxuXG5cbiAgICAkc2NvcGUuZ2V0VGF4UmF0ZSA9IGZ1bmN0aW9uKGNvdW50cnksIHN0YXRlUHJvdmluY2UsIHBvc3RhbENvZGUpe1xuICAgIGlmIChjb3VudHJ5LmNvZGUgPT09ICdVUycgJiYgc3RhdGVQcm92aW5jZS5zaG9ydCA9PT0gJ1dBJyAmJiBwb3N0YWxDb2RlKXtcbiAgICAgIGlmICgkd2luZG93LmxvY2FsU3RvcmFnZS5jdXJyZW50V2FSYXRlKXtcbiAgICAgICAgdmFyIHBhcnNlZFRheCA9IHBhcnNlRmxvYXQoJHdpbmRvdy5sb2NhbFN0b3JhZ2UuY3VycmVudFdhUmF0ZSlcbiAgICAgICAgbmdDYXJ0LnNldFRheFJhdGUocGFyc2VkVGF4KTsgICAgXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVxID0ge1xuICAgICAgICAgIHVybDogJy90YXhSYXRlJyxcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgY291bnRyeTogJ3VzYScsXG4gICAgICAgICAgICBwb3N0YWw6IHBvc3RhbENvZGVcbiAgICAgICAgICB9XG4gICAgICAgIH0gXG5cbiAgICAgICAgJGh0dHAocmVxKS50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgbmdDYXJ0LnNldFRheFJhdGUocmVzLmRhdGEudG90YWxSYXRlKTsgXG4gICAgICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2UuY3VycmVudFdhUmF0ZSA9IHJlcy5kYXRhLnRvdGFsUmF0ZTsgICBcbiAgICAgICAgfSwgZnVuY3Rpb24gZXJyb3IocmVzKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvciBcIixyZXMpOyAgICAgICAgICAgICBcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjb3VudHJ5LmNvZGUgPT09ICdVUycgJiYgc3RhdGVQcm92aW5jZS5zaG9ydCAhPT0gJ1dBJyl7XG4gICAgICBuZ0NhcnQuc2V0VGF4UmF0ZSgwKTtcbiAgICB9IGVsc2UgaWYgKGNvdW50cnkuY29kZSAhPT0gJ1VTJyl7XG4gICAgICBuZ0NhcnQuc2V0VGF4UmF0ZSgwKTtcbiAgICB9XG4gIH1cblxuXG5cblxuXG59KVxuXG5cblxuLmNvbnRyb2xsZXIoJ1N0b3JlUGF5bWVudEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGh0dHAsICR0aW1lb3V0LCAkbG9jYXRpb24sICRsb2NhbFN0b3JhZ2UsIG5nQ2FydCwgJHJvb3RTY29wZSwgY3VycmVudE9yZGVyKXtcbiAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYmEoMjQ3LCAyMzcsIDI0NSwgMCknO1xuICAkc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuICAkcm9vdFNjb3BlLnBhdGggPSAkbG9jYXRpb24uJCRwYXRoO1xuICAkc2NvcGUuJHN0b3JhZ2UgPSAkbG9jYWxTdG9yYWdlO1xuICAkc2NvcGUucGF0aENvdW50ID0gcGFyc2VJbnQoJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCk7IFxuICAkc2NvcGUuc2hpcE9wdGlvbnMgPSAkc2NvcGUuJHN0b3JhZ2Uub3JkZXJEYXRhLmRhdGEuc2hpcHBpbmdfbWV0aG9kcztcbiAgJHNjb3BlLnNhdmVkU2VsZWN0ZWRTaGlwID0gJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YS5kYXRhLnNlbGVjdGVkX3NoaXBwaW5nX21ldGhvZDtcblxuICBcblxuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAkc2NvcGUuc2hpcE9wdGlvbnMubGVuZ3RoOyBpKyspe1xuICAgIGlmICgkc2NvcGUuc2hpcE9wdGlvbnNbaV0uaWQgPT09ICRzY29wZS5zYXZlZFNlbGVjdGVkU2hpcCl7XG4gICAgICAkc2NvcGUuc2VsZWN0ZWRTaGlwID0gJHNjb3BlLnNoaXBPcHRpb25zW2ldO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIFxuICAgJHNjb3BlLiR3YXRjaCgnc2VsZWN0ZWRTaGlwJywgZnVuY3Rpb24gKG5ld1ZhbHVlLCBvbGRWYWx1ZSwgc2NvcGUpIHtcbiAgICBuZ0NhcnQuc2V0U2hpcHBpbmcoJHNjb3BlLnNlbGVjdGVkU2hpcC5hbW91bnQpOyAgXG4gIH0sIGZhbHNlKTtcblxuICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgJHNjb3BlLmxvYWRlZCA9IHRydWU7IFxuICB9KVxuXG4gIFxuICBcbiAgJHNjb3BlLnN1Ym1pdEZvcm0gPSBmdW5jdGlvbihmb3JtKXtcbiAgICAvLyBpZihmb3JtLiR2YWxpZCl7XG4gICAgICAkc2NvcGUubG9hZGVkID0gZmFsc2U7IFxuICAgICAgU3RyaXBlLmNhcmQuY3JlYXRlVG9rZW4oe1xuICAgICAgICBudW1iZXI6ICRzY29wZS5udW1iZXIsXG4gICAgICAgIGN2YzogJHNjb3BlLmN2YyxcbiAgICAgICAgZXhwOiAkc2NvcGUuZXhwaXJ5LFxuICAgICAgICBuYW1lOiAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MubmFtZSxcbiAgICAgICAgYWRkcmVzc19saW5lMTogJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzLmFkZHJlc3MxLFxuICAgICAgICBhZGRyZXNzX2xpbmUyOiAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MuYWRkcmVzczIgfHwgbnVsbCxcbiAgICAgICAgYWRkcmVzc19jaXR5OiAkc2NvcGUuJHN0b3JhZ2UuYmlsbGluZ0FkZHJlc3MuY2l0eSxcbiAgICAgICAgYWRkcmVzc19zdGF0ZTogJHNjb3BlLiRzdG9yYWdlLmJpbGxpbmdBZGRyZXNzLnN0YXRlUHJvdmluY2Uuc2hvcnQgfHwgbnVsbCxcbiAgICAgICAgYWRkcmVzc196aXA6ICRzY29wZS4kc3RvcmFnZS5iaWxsaW5nQWRkcmVzcy5wb3N0YWxDb2RlLFxuICAgICAgICBhZGRyZXNzX2NvdW50cnk6ICRzY29wZS4kc3RvcmFnZS5iaWxsaW5nQWRkcmVzcy5jb3VudHJ5LmNvZGVcbiAgICAgIH0sIGhhbmRsZVN0cmlwZSk7XG4gICAgLy8gfSBlbHNlIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiZm9ybSBpbnZhbGlkISFcIik7XG4gICAgLy8gfVxuICB9XG5cbiAgdmFyIGhhbmRsZVN0cmlwZSA9IGZ1bmN0aW9uKHN0YXR1cywgcmVzcG9uc2Upe1xuICAgIGlmKHJlc3BvbnNlLmVycm9yKSB7XG4gICAgLy8gdGhlcmUgd2FzIGFuIGVycm9yLiBGaXggaXQuXG4gIH0gZWxzZSB7XG4gICAgdG9rZW4gPSByZXNwb25zZTtcbiAgICBcblxuICAgIHZhciByZXEgPSB7XG4gICAgICB1cmw6ICcvc3RyaXBlL3VwZGF0ZVNoaXBwaW5nJyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIHRva2VuOiB0b2tlbixcbiAgICAgICAgb3JkZXJJZDogJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YS5kYXRhLmlkLFxuICAgICAgICBzZWxlY3RlZFNoaXA6ICRzY29wZS5zZWxlY3RlZFNoaXAuaWRcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkaHR0cChyZXEpLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXMpIHtcbiAgICAgICAgICAgaWYgKCEkc2NvcGUuJHN0b3JhZ2UucGF5bWVudFN1Ym1pdCl7XG4gICAgICAgICAgICAgJHNjb3BlLiRzdG9yYWdlLnBhdGhDb3VudCsrO1xuICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnY2FydENoYW5nZScsICRzY29wZS4kc3RvcmFnZS5wYXRoQ291bnQpOyAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2UucGF5bWVudFN1Ym1pdCA9IHRydWU7ICBcbiAgICAgICAgICAkc2NvcGUuJHN0b3JhZ2Uub3JkZXJEYXRhID0gcmVzO1xuICAgICAgICAgICRzY29wZS4kc3RvcmFnZS50b2tlbkRhdGEgPSB0b2tlbjtcbiAgICAgICAgICAkbG9jYXRpb24udXJsKCcvc3RvcmUvY2hlY2tvdXQvY29uZmlybScpOyAgIFxuICAgICAgICB9LCBmdW5jdGlvbiBlcnJvcihyZXMpIHtcbiAgICAgICAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTsgXG4gICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvciBcIixyZXMpOyAgICAgICAgICAgICBcbiAgICAgICAgfSk7XG4gIH1cbiAgfVxuXG5cbn0pXG5cblxuLmNvbnRyb2xsZXIoJ1N0b3JlQ29uZmlybUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGh0dHAsICR0aW1lb3V0LCAkbG9jYXRpb24sICRsb2NhbFN0b3JhZ2UsIG5nQ2FydCwgJHJvb3RTY29wZSl7XG52YXIgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgyNDcsIDIzNywgMjQ1LCAwKSc7XG4kc2NvcGUuJGVtaXQoJ2xvYWRNYWluQ29udGFpbmVyJywgJ2xvYWRlZCcpO1xuJHNjb3BlLiRzdG9yYWdlID0gJGxvY2FsU3RvcmFnZTtcbiRzY29wZS5wYXRoQ291bnQgPSBwYXJzZUludCgkc2NvcGUuJHN0b3JhZ2UucGF0aENvdW50KTsgXG4kc2NvcGUub3JkZXJDb21wbGV0ZSA9IGZhbHNlO1xuJHJvb3RTY29wZS5wYXRoID0gJGxvY2F0aW9uLiQkcGF0aDtcbiRzY29wZS5uZ0NhcnQgPSBuZ0NhcnQ7XG4kc2NvcGUudG9rZW4gPSAkc2NvcGUuJHN0b3JhZ2UudG9rZW5EYXRhO1xuJHNjb3BlLm9yZGVyID0gJHNjb3BlLiRzdG9yYWdlLm9yZGVyRGF0YS5kYXRhO1xudmFyIGl0ZW1zID0gJHNjb3BlLm9yZGVyLml0ZW1zO1xuZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKyl7XG4gIGlmIChpdGVtc1tpXS50eXBlID09PSAnc2hpcHBpbmcnKXtcbiAgICAkc2NvcGUuc2hpcFNlcnZpY2UgPSBpdGVtc1tpXS5kZXNjcmlwdGlvbjtcbiAgfVxufVxuJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgJHNjb3BlLmxvYWRlZCA9IHRydWU7XG59KVxuICBcblxuXG4kc2NvcGUuY3JlYXRlQ2hhcmdlID0gZnVuY3Rpb24oKXtcbiAgJHNjb3BlLmxvYWRlZCA9IGZhbHNlOyBcbiAgdmFyIHJlcSA9IHtcbiAgICAgICAgdXJsOiAnL3N0cmlwZS9vcmRlckNvbXBsZXRlJyxcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIG9yZGVySWQ6ICRzY29wZS5vcmRlci5pZCxcbiAgICAgICAgICB0b2tlbjogJHNjb3BlLnRva2VuLmlkXG4gICAgICAgIH1cbiAgICAgIH0gXG5cbiAgICAgICRodHRwKHJlcSkudGhlbihmdW5jdGlvbiBzdWNjZXNzKHJlcykge1xuICAgICAgICAkc2NvcGUub3JkZXJDb21wbGV0ZSA9IHRydWU7XG4gICAgICAgIGlmICgkc2NvcGUuJHN0b3JhZ2UubWFpbGluZ0xpc3Qpe1xuICAgICAgICAgIG1haWxjaGltcFN1Ym1pdCgpO1xuICAgICAgICB9XG4gICAgICAgIG5nQ2FydC5zZXRUYXhSYXRlKCk7XG4gICAgICAgIG5nQ2FydC5zZXRTaGlwcGluZygpOyAgIFxuICAgICAgICBuZ0NhcnQuZW1wdHkoKTtcbiAgICAgICAgJGxvY2FsU3RvcmFnZS4kcmVzZXQoKTtcbiAgICAgIH0sIGZ1bmN0aW9uIGVycm9yKHJlcykge1xuICAgICAgICAkc2NvcGUubG9hZGVkID0gdHJ1ZTsgXG4gICAgLy9kbyBzb21ldGhpbmcgaWYgdGhlIHJlc3BvbnNlIGhhcyBhbiBlcnJvclxuICAgIGNvbnNvbGUubG9nKFwiZXJyb3IgXCIscmVzKTtcbiAgfSk7XG59XG5cblxuXG5cblxudmFyIG1haWxjaGltcFN1Ym1pdCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHVybCA9IFwiLy9zaXN0ZXJzdGhlYmFuZC51czE0Lmxpc3QtbWFuYWdlLmNvbS9zdWJzY3JpYmUvcG9zdC1qc29uP3U9YmMzODcyMGIwYmNjN2EzMjY0MWJiNTcyYyZhbXA7aWQ9MjQyZjRhZGM4OSZFTUFJTD1cIiskc2NvcGUuJHN0b3JhZ2Uub3JkZXJEYXRhLmRhdGEuZW1haWwrXCImYz1KU09OX0NBTExCQUNLXCJcbiAgICAkaHR0cC5qc29ucCh1cmwpLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXMpe1xuICAgIH0sIGZ1bmN0aW9uIGVycm9yKHJlcyl7XG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgIH0pO1xufVxuXG5cblxuXG5cbn0pOyIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzRGlyZWN0aXZlcycsIFtdKVxuXG5cblxuXG4uZGlyZWN0aXZlKFwiZmlsZXJlYWRcIiwgW2Z1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzY29wZToge1xuICAgICAgICAgICAgZmlsZXJlYWQ6IFwiPVwiXG4gICAgICAgIH0sXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cmlidXRlcykge1xuICAgICAgICAgICAgZWxlbWVudC5iaW5kKFwiY2hhbmdlXCIsIGZ1bmN0aW9uIChjaGFuZ2VFdmVudCkge1xuICAgICAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAobG9hZEV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY29wZS5maWxlcmVhZCA9IGxvYWRFdmVudC50YXJnZXQucmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoY2hhbmdlRXZlbnQudGFyZ2V0LmZpbGVzWzBdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufV0pXG5cblxuXG4uZGlyZWN0aXZlKFwiY291bnRyeU5hbWVcIiwgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKSB7XG4gIHJldHVybiB7XG4gICAgdGVtcGxhdGU6IFwiPHNwYW4+e3tuYW1lfX08L3NwYW4+XCIsXG4gICAgc2NvcGU6IHtcbiAgICAgIGNvdW50cnlDb2RlOiBcIj1cIlxuICAgIH0sXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUpIHtcbiAgICAgICRodHRwLmdldCgnL2pzL0pTT04vY291bnRyaWVzLmpzb24nKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGNvdW50cmllcyA9IGRhdGEuZGF0YTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudHJpZXMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgaWYgKGNvdW50cmllc1tpXS5jb2RlID09PSBzY29wZS5jb3VudHJ5Q29kZSl7XG4gICAgICAgICAgICAgICAgc2NvcGUubmFtZSA9IGNvdW50cmllc1tpXS5uYW1lO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgc2NvcGUubmFtZSA9IFwidW5rbm93blwiO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59XSk7XG5cblxuXG5cbiIsImFuZ3VsYXIubW9kdWxlKCdTaXN0ZXJzU2VydmljZXMnLCBbJ25nUmVzb3VyY2UnXSlcblxuXG4uZmFjdG9yeSgnTG9hZGVkU2VydmljZScsIGZ1bmN0aW9uKCkge1xuIHZhciBsb2FkZWQgPSBmYWxzZTtcbiBmdW5jdGlvbiBzZXQoZGF0YSkge1xuICAgbG9hZGVkID0gZGF0YTtcbiB9XG4gZnVuY3Rpb24gZ2V0KCkge1xuICByZXR1cm4gbG9hZGVkO1xuIH1cblxuIHJldHVybiB7XG4gIHNldDogc2V0LFxuICBnZXQ6IGdldFxuIH1cblxufSlcblxuLmZhY3RvcnkoXCJBdXRoXCIsIFtcIiRmaXJlYmFzZUF1dGhcIixcbiAgZnVuY3Rpb24oJGZpcmViYXNlQXV0aCkge1xuICAgIHJldHVybiAkZmlyZWJhc2VBdXRoKCk7XG4gIH1cbl0pXG5cblxuLmZhY3RvcnkoXCJQcm9kdWN0c1NlcnZpY2VcIiwgW1wiJGh0dHBcIixcIiRxXCIsIGZ1bmN0aW9uKCRodHRwLCAkcSl7XG4gIHJldHVybiB7XG4gICAgYWxsUHJvZHVjdHM6IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgLy8gY29uc29sZS5sb2coXCJpbnNpZGUgYWxsIHByb2R1Y3RzIHNlcnZpY2VcIilcbiAgICAgICRodHRwLmdldCgnL3N0cmlwZS9hbGxQcm9kdWN0cycpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgIC8vIHByb2R1Y3RzID0gZGF0YS5kYXRhO1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEuZGF0YSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwicHJvZHVjdHMgaW4gc2VydmljZTogXCIscHJvZHVjdHMpOyAgIFxuICAgICAgfSk7IFxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7ICAgXG4gICAgfSxcbiAgICBvbmVQcm9kdWN0OiBmdW5jdGlvbihwcm9kdWN0SWQpe1xuICAgICAgLy8gY29uc29sZS5sb2coXCJ3aGF0J3MgaWQ/IFwiLHByb2R1Y3RJZCk7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgdmFyIHJlcSA9IHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgdXJsOiAnL3N0cmlwZS9vbmVQcm9kdWN0JyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgcHJvZHVjdElkOiBwcm9kdWN0SWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgJGh0dHAocmVxKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcInN1Y2Nlc3MhISFcIilcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgIH0pXG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG4gIH1cbn1dKVxuXG4uc2VydmljZSgnSW5zdGFncmFtRmFjdG9yeScsIFsnJGh0dHAnLCAnJHEnLCBcbiAgZnVuY3Rpb24gKCRodHRwLCAkcSkge1xuICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgJGh0dHAoe1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICB1cmw6ICcvaW5zdGFncmFtJyxcbiAgICAgICAgY2FjaGU6IHRydWVcbiAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgfSkuZXJyb3IoZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBkZWZlcnJlZC5yZWplY3QobXNnKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbn1dKVxuXG5cblxuLnNlcnZpY2UoJ1R3aXR0ZXJGYWN0b3J5JywgWyckaHR0cCcsICckcScsIFxuICBmdW5jdGlvbiAoJGh0dHAsICRxKSB7XG4gICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAkaHR0cCh7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogJy90d2l0dGVyJyxcbiAgICAgICAgY2FjaGU6IHRydWVcbiAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgfSkuZXJyb3IoZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBkZWZlcnJlZC5yZWplY3QobXNnKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbn1dKVxuXG5cbi5mYWN0b3J5KFwiRG93bmxvYWRLZXlTZXJ2aWNlXCIsIGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGhhc2gpe1xuICAgICAgY29uc29sZS5sb2coXCJoYXNoIGlzIFwiK2hhc2gpO1xuICAgICAgLy8gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2Rvd25sb2FkS2V5cy8nICsgaGFzaCkuc2V0KFwidGVzdCB2YWx1ZVwiKTtcbiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdkb3dubG9hZEtleXMvJytoYXNoKS5vbmNlKCd2YWx1ZScpLnRoZW4oZnVuY3Rpb24oc25hcHNob3QpIHtcbiAgICAgICAgdmFyIHNuYXAgPSBzbmFwc2hvdC52YWwoKTtcbiAgICAgICAgY29uc29sZS5sb2coc25hcCk7XG4gICAgICB9KTtcbiAgICAgXG4gICAgICAvLyBpZiAodGhpc0tleSAhPT0gbnVsbCl7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKFwiS0VZIEVYSVNUUyEhISEhISFcIilcbiAgICAgIC8vICAgcmV0dXJuIHRydWU7XG4gICAgICAvLyB9IGVsc2Uge1xuICAgICAgLy8gICBjb25zb2xlLmxvZyhcIktleSBkb2Vzbid0IGV4aXN0LlwiKVxuICAgICAgLy8gICByZXR1cm4gZmFsc2U7XG4gICAgICAvLyB9XG4gICAgfVxuICB9XG4pXG5cblxuXG4uZmFjdG9yeShcIkdldFNob3dzXCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsXCJtb21lbnRcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5LCBtb21lbnQpe1xuICAgIHZhciBjdXJyZW50RGF5ID0gbW9tZW50KCkudW5peCgpO1xuICAgIC8vIGNvbnNvbGUubG9nKFwiY3VycmVudCBkYXk6IFwiLGN1cnJlbnREYXkpO1xuICAgIHJldHVybiBmdW5jdGlvbigpe1xuICAgIHZhciBzaG93c1JlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdzaG93cycpLm9yZGVyQnlDaGlsZChcInVuaXhcIikuc3RhcnRBdChjdXJyZW50RGF5KTtcbiAgICAvLyBjb25zb2xlLmxvZyhcIkknbSBpbiBHZXRTaG93c1wiKTtcbiAgICByZXR1cm4gJGZpcmViYXNlQXJyYXkoc2hvd3NSZWYpO1xuICB9XG59XSlcblxuLy8gLmZhY3RvcnkoXCJHZXRTaW5nbGVTaG93XCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsIFxuLy8gICBmdW5jdGlvbigkZmlyZWJhc2VBcnJheSkge1xuLy8gICByZXR1cm4gZnVuY3Rpb24oaWQpe1xuLy8gICAgICB2YXIgc2hvd3NSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignc2hvd3MvJysgaWQpO1xuLy8gICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KHNob3dzUmVmKTtcbi8vICAgfVxuLy8gfV0pXG5cblxuXG5cblxuLmZhY3RvcnkoXCJCbG9nUG9zdHNcIiwgW1wiJGZpcmViYXNlQXJyYXlcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5KSB7XG4gIHJldHVybiBmdW5jdGlvbigpe1xuICAgIHZhciBibG9nUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2Jsb2dfcG9zdHMnKS5vcmRlckJ5Q2hpbGQoXCJ0aW1lc3RhbXBcIik7XG4gICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KGJsb2dSZWYpO1xuICB9XG59XSlcblxuXG4uZmFjdG9yeShcIlRoaXNQb3N0U2VydmljZVwiLCBbXCIkZmlyZWJhc2VBcnJheVwiLFxuICBmdW5jdGlvbigkZmlyZWJhc2VBcnJheSl7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHNsdWcpe1xuICAgICAgdmFyIHBvc3RSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYmxvZ19wb3N0cycpO1xuICAgICAgdmFyIHRoaXNQb3N0UmVmID0gcG9zdFJlZi5vcmRlckJ5Q2hpbGQoJ3NsdWcnKS5lcXVhbFRvKHNsdWcpO1xuICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KHRoaXNQb3N0UmVmKTtcbiAgICB9XG4gIH1cbiAgXSlcblxuLmZhY3RvcnkoXCJBbGxUYWdzU2VydmljZVwiLCBbXCIkZmlyZWJhc2VBcnJheVwiLCBcbiAgZnVuY3Rpb24oJGZpcmViYXNlQXJyYXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgdGFnUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3RhZ3MnKTtcbiAgICAgIHJldHVybiAkZmlyZWJhc2VBcnJheSh0YWdSZWYpO1xuICB9XG59XSlcblxuLmZhY3RvcnkoXCJUYWdzU2hvd1NlcnZpY2VcIiwgW1wiJGZpcmViYXNlQXJyYXlcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZU9iamVjdCkge1xuICByZXR1cm4gZnVuY3Rpb24odGFnTmFtZSl7XG4gICAgICB2YXIgdGFnUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3RhZ3MnKTtcbiAgICAgIHZhciB0YWdTaG93UmVmID0gdGFnUmVmLm9yZGVyQnlDaGlsZCgnbmFtZScpLmVxdWFsVG8odGFnTmFtZSk7XG4gICAgICByZXR1cm4gJGZpcmViYXNlT2JqZWN0KHRhZ1Nob3dSZWYpO1xuICB9XG59XSlcblxuXG4uZmFjdG9yeShcIkFyY2hpdmVTZXJ2aWNlXCIsIFtcIiRmaXJlYmFzZUFycmF5XCIsIFxuICBmdW5jdGlvbigkZmlyZWJhc2VBcnJheSl7XG4gICAgcmV0dXJuIHtcbiAgICAgIHllYXJzOiBmdW5jdGlvbigpe1xuICAgICAgdmFyIHllYXJSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYXJjaGl2ZXMnKTtcbiAgICAgIHJldHVybiAkZmlyZWJhc2VBcnJheSh5ZWFyUmVmKVxuICAgICAgfSxcbiAgICAgIG1vbnRoczogZnVuY3Rpb24oeWVhcil7XG4gICAgICB2YXIgbW9udGhSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignYXJjaGl2ZXMvJyt5ZWFyKTtcbiAgICAgIHJldHVybiAkZmlyZWJhc2VBcnJheShtb250aFJlZilcbiAgICAgIH1cbiAgICB9XG59XSlcblxuLmZhY3RvcnkoXCJBcmNoaXZlU2hvd1NlcnZpY2VcIiwgW1wiJGZpcmViYXNlQXJyYXlcIiwgXG4gIGZ1bmN0aW9uKCRmaXJlYmFzZUFycmF5KSB7XG4gIHJldHVybiBmdW5jdGlvbih5ZWFyLCBtb250aCl7XG4gICAgICB2YXIgYXJjaGl2ZVJlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdhcmNoaXZlcy8nICsgeWVhciArICcvJyArIG1vbnRoKTtcbiAgICAgIHJldHVybiAkZmlyZWJhc2VBcnJheShhcmNoaXZlUmVmKTtcbiAgfVxufV0pXG5cbi5mYWN0b3J5KCdTZW5kRGF0YVNlcnZpY2UnLCBmdW5jdGlvbigpIHtcbiB2YXIgc2F2ZWREYXRhID0ge31cbiBmdW5jdGlvbiBzZXQoZGF0YSkge1xuICAgc2F2ZWREYXRhID0gZGF0YTtcbiB9XG4gZnVuY3Rpb24gZ2V0KCkge1xuICByZXR1cm4gc2F2ZWREYXRhO1xuIH1cblxuIHJldHVybiB7XG4gIHNldDogc2V0LFxuICBnZXQ6IGdldFxuIH1cblxufSlcblxuLmZhY3RvcnkoJ0N1cnJlbnRPcmRlclNlcnZpY2UnLCBmdW5jdGlvbigkd2luZG93KSB7XG4gZnVuY3Rpb24gc2V0KGRhdGEpIHtcbiAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oICdvcmRlckRhdGEnLCBhbmd1bGFyLnRvSnNvbihkYXRhKSApO1xuICAvLyAgY29uc29sZS5sb2coXCJvcmRlciBzYXZlZCFcIik7XG4gfVxuIGZ1bmN0aW9uIGdldCgpIHtcbiAgdmFyIG9yZGVyID0gYW5ndWxhci5mcm9tSnNvbiggJHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnb3JkZXJEYXRhJykgKSA7XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uob3JkZXIpO1xuIH1cblxuIHJldHVybiB7XG4gIHNldDogc2V0LFxuICBnZXQ6IGdldFxuIH1cbn0pXG5cblxuXG5cblxuXG4uZmFjdG9yeSgnSGVscGVyU2VydmljZScsIFtcIm1vbWVudFwiLFwiJHFcIiwgZnVuY3Rpb24obW9tZW50LCAkcSkge1xuICByZXR1cm4ge1xuICAgIHBhcnNlWW91VHViZTogZnVuY3Rpb24odXJsKXtcbiAgICAgIHZhciB2aWRlb2lkID0gdXJsLm1hdGNoKC8oPzpodHRwcz86XFwvezJ9KT8oPzp3ezN9XFwuKT95b3V0dSg/OmJlKT9cXC4oPzpjb218YmUpKD86XFwvd2F0Y2hcXD92PXxcXC8pKFteXFxzJl0rKS8pO1xuICAgICAgICBpZih2aWRlb2lkICE9IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gdmlkZW9pZFsxXTtcbiAgICAgICAgfSBlbHNlIHsgXG4gICAgICAgICAgY29uc29sZS5sb2coXCJUaGUgeW91dHViZSB1cmwgaXMgbm90IHZhbGlkLlwiKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgYmFzZTY0TWltZVR5cGU6IGZ1bmN0aW9uKGVuY29kZWQpe1xuICAgICAgdmFyIHJlc3VsdCA9IG51bGw7XG4gICAgICBpZiAodHlwZW9mIGVuY29kZWQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICB2YXIgbWltZSA9IGVuY29kZWQubWF0Y2goL2RhdGE6KFthLXpBLVowLTldK1xcL1thLXpBLVowLTktLitdKykuKiwuKi8pO1xuICAgICAgaWYgKG1pbWUgJiYgbWltZS5sZW5ndGgpIHtcbiAgICAgICAgcmVzdWx0ID0gbWltZVsxXTtcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKFwiaW1hZ2UgdHlwZSBpcyBcIixyZXN1bHQpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIGdldEJhc2U2NEltYWdlOiBmdW5jdGlvbihkYXRhVVJMKSB7XG4gICAgICB2YXIgYmFzZTY0ID0gZGF0YVVSTC5yZXBsYWNlKC9eZGF0YTppbWFnZVxcLyhwbmd8anBlZyk7YmFzZTY0LC8sIFwiXCIpO1xuICAgICAgcmV0dXJuIGJhc2U2NDtcbiAgICB9LFxuICAgIGI2NHRvQmxvYjogZnVuY3Rpb24oYjY0RGF0YSwgY29udGVudFR5cGUsIHNsaWNlU2l6ZSkge1xuICAgICAgY29udGVudFR5cGUgPSBjb250ZW50VHlwZSB8fCAnJztcbiAgICAgIHNsaWNlU2l6ZSA9IHNsaWNlU2l6ZSB8fCA1MTI7XG4gICAgICB2YXIgYnl0ZUNoYXJhY3RlcnMgPSBhdG9iKGI2NERhdGEpO1xuICAgICAgdmFyIGJ5dGVBcnJheXMgPSBbXTtcbiAgICAgIGZvciAodmFyIG9mZnNldCA9IDA7IG9mZnNldCA8IGJ5dGVDaGFyYWN0ZXJzLmxlbmd0aDsgb2Zmc2V0ICs9IHNsaWNlU2l6ZSkge1xuICAgICAgICB2YXIgc2xpY2UgPSBieXRlQ2hhcmFjdGVycy5zbGljZShvZmZzZXQsIG9mZnNldCArIHNsaWNlU2l6ZSk7XG4gICAgICAgIHZhciBieXRlTnVtYmVycyA9IG5ldyBBcnJheShzbGljZS5sZW5ndGgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWNlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYnl0ZU51bWJlcnNbaV0gPSBzbGljZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBieXRlQXJyYXkgPSBuZXcgVWludDhBcnJheShieXRlTnVtYmVycyk7XG4gICAgICAgIGJ5dGVBcnJheXMucHVzaChieXRlQXJyYXkpO1xuICAgICAgfSBcbiAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoYnl0ZUFycmF5cywge3R5cGU6IGNvbnRlbnRUeXBlfSk7XG4gICAgICByZXR1cm4gYmxvYjtcbiAgICB9LFxuICAgIHBhZ2VEb3duOiBmdW5jdGlvbihjdXJyZW50UGFnZSl7XG4gICAgICBpZiAoY3VycmVudFBhZ2UgPCAyKXtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY3VycmVudFBhZ2UgLSAoMSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBmaW5kRmlyc3Q6IGZ1bmN0aW9uKGxlbmd0aCwgcGFnZSl7XG4gICAgdmFyIGNhbGNGaXJzdCA9IGxlbmd0aCAtICg0KigxK3BhZ2UpKTtcbiAgICAgIGlmIChjYWxjRmlyc3QgPj0gMCl7XG4gICAgICAgIHJldHVybiBjYWxjRmlyc3RcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0VG9kYXk6IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgY3VycmVudERheSA9IG1vbWVudCgpLnVuaXgoKTtcbiAgICAgIHJldHVybiBjdXJyZW50RGF5O1xuICAgIH0sXG4gICAgdGl0bGVUb1VSTDogZnVuY3Rpb24odGl0bGUpe1xuXG4gICAgcmV0dXJuIHRpdGxlLnNwbGl0KCcgJykuam9pbignLScpO1xuICAgIH0sXG4gICAgc2x1Z2lmeTogZnVuY3Rpb24odGV4dCl7XG4gICAgICByZXR1cm4gdGV4dC50b1N0cmluZygpLnRvTG93ZXJDYXNlKClcbiAgICAgIC5yZXBsYWNlKC9cXHMrL2csICctJykgICAgICAgICAgIC8vIFJlcGxhY2Ugc3BhY2VzIHdpdGggLVxuICAgICAgLnJlcGxhY2UoL1teXFx3XFwtXSsvZywgJycpICAgICAgIC8vIFJlbW92ZSBhbGwgbm9uLXdvcmQgY2hhcnNcbiAgICAgIC5yZXBsYWNlKC9cXC1cXC0rL2csICctJykgICAgICAgICAvLyBSZXBsYWNlIG11bHRpcGxlIC0gd2l0aCBzaW5nbGUgLVxuICAgICAgLnJlcGxhY2UoL14tKy8sICcnKSAgICAgICAgICAgICAvLyBUcmltIC0gZnJvbSBzdGFydCBvZiB0ZXh0XG4gICAgICAucmVwbGFjZSgvLSskLywgJycpOyAgICAgICAgICAgIC8vIFRyaW0gLSBmcm9tIGVuZCBvZiB0ZXh0XG4gICAgfSxcbiAgICBpbWdSZXNpemU6IGZ1bmN0aW9uIChpbWcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiaW5zaWRlIHJlc2l6ZSEhXCIpO1xuICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgdmFyIGxvYWRJTUcgPSBuZXcgSW1hZ2U7XG4gICAgbG9hZElNRy5zcmMgPSBpbWc7XG4gICAgbG9hZElNRy5vbmxvYWQgPSBmdW5jdGlvbigpe1xuICAgICAgIGNvbnNvbGUubG9nKHRoaXMud2lkdGggKyBcIiBcIiArIHRoaXMuaGVpZ2h0KTtcbiAgICAgICB2YXIgYXNwZWN0UmF0aW8gPSBsb2FkSU1HLndpZHRoIC8gbG9hZElNRy5oZWlnaHQ7XG4gICAgICAgY29uc29sZS5sb2coXCJXSEFUIElTIFJBVElPPz8/IFwiLGFzcGVjdFJhdGlvKTtcbiAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIGlmIChhc3BlY3RSYXRpbyA+PSAxLjc3NiAmJiBsb2FkSU1HLmhlaWdodCA+PSA1MDApe1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwibG9hZElNRzogXCIsbG9hZElNRyk7XG4gICAgICAgICAgdmFyIHBlcmNlbnRDaGFuZ2UgPSAobG9hZElNRy5oZWlnaHQgLSA1MDApIC8gbG9hZElNRy5oZWlnaHQ7XG4gICAgICAgICAgY2FudmFzLmhlaWdodCA9IDUwMDtcbiAgICAgICAgICBjYW52YXMud2lkdGggPSBsb2FkSU1HLndpZHRoIC0gKGxvYWRJTUcud2lkdGggKiBwZXJjZW50Q2hhbmdlKTtcbiAgICAgICAgXG4gICAgICAgIH0gZWxzZSBpZiAoYXNwZWN0UmF0aW8gPCAxLjc3NiAmJiBsb2FkSU1HLndpZHRoID49IDg4OSl7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJsb2FkSU1HOiBcIixsb2FkSU1HKTtcbiAgICAgICAgICB2YXIgcGVyY2VudENoYW5nZSA9IChsb2FkSU1HLndpZHRoIC0gODg5KSAvIGxvYWRJTUcud2lkdGg7XG4gICAgICAgICAgY2FudmFzLndpZHRoID0gODg5O1xuICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSBsb2FkSU1HLmhlaWdodCAtIChsb2FkSU1HLmhlaWdodCAqIHBlcmNlbnRDaGFuZ2UpO1xuICAgICAgICAgIFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwibG9hZElNRzogXCIsbG9hZElNRyk7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJpbWFnZSBpcyBub3QgYmlnIGVub3VnaCFcIik7ICBcbiAgICAgICAgfVxuICAgICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgY3R4LmRyYXdJbWFnZShsb2FkSU1HLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICB2YXIgcmVzaXplZFJlc3VsdCA9IGNhbnZhcy50b0RhdGFVUkwoXCJpbWFnZS9qcGVnXCIpO1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc2l6ZWRSZXN1bHQpOyAgIFxuICAgIH1cbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTsgXG4gICAgfVxuICB9IFxufV0pXG5cblxuXG5cbi5mYWN0b3J5KCdTdWJtaXRJbWFnZScsIFtcIkhlbHBlclNlcnZpY2VcIiwgZnVuY3Rpb24oSGVscGVyU2VydmljZSkge1xuICByZXR1cm4gZnVuY3Rpb24ocG9zdCwgcG9zdEFycmF5LCBpbWFnZSwgY2FsbGJhY2spe1xuICAgIEhlbHBlclNlcnZpY2UuaW1nUmVzaXplKGltYWdlKS50aGVuKGZ1bmN0aW9uKG5ld0ltYWdlKXtcbiAgICAgIHZhciBtaW1lID0gSGVscGVyU2VydmljZS5iYXNlNjRNaW1lVHlwZShuZXdJbWFnZSk7XG4gICAgY29uc29sZS5sb2coXCJUWVBFIElTIFwiLG1pbWUpO1xuICAgIHZhciBiYXNlNjRyZXN1bHQgPSBIZWxwZXJTZXJ2aWNlLmdldEJhc2U2NEltYWdlKG5ld0ltYWdlKVxuICAgIHZhciBmaWxlID0gSGVscGVyU2VydmljZS5iNjR0b0Jsb2IoYmFzZTY0cmVzdWx0LCBtaW1lKVxuICAgIHZhciBtZXRhZGF0YSA9IHtcbiAgICBjb250ZW50VHlwZTogbWltZVxuICAgIH07XG4gICAgdmFyIHBob3RvSWQgPSAoTWF0aC5yYW5kb20oKSoxZTMyKS50b1N0cmluZygzNik7XG4gICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCk7XG4gICAgdmFyIHVwbG9hZFRhc2sgPSBzdG9yYWdlUmVmLmNoaWxkKCdibG9nLWltYWdlcy8nICsgcGhvdG9JZCkucHV0KGZpbGUsIG1ldGFkYXRhKTtcbiAgICB1cGxvYWRUYXNrLm9uKGZpcmViYXNlLnN0b3JhZ2UuVGFza0V2ZW50LlNUQVRFX0NIQU5HRUQsIC8vIG9yICdzdGF0ZV9jaGFuZ2VkJ1xuICAgIGZ1bmN0aW9uKHNuYXBzaG90KSB7XG4gICAgICAvLyBHZXQgdGFzayBwcm9ncmVzcywgaW5jbHVkaW5nIHRoZSBudW1iZXIgb2YgYnl0ZXMgdXBsb2FkZWQgYW5kIHRoZSB0b3RhbCBudW1iZXIgb2YgYnl0ZXMgdG8gYmUgdXBsb2FkZWRcbiAgICAgIHZhciBwcm9ncmVzcyA9IChzbmFwc2hvdC5ieXRlc1RyYW5zZmVycmVkIC8gc25hcHNob3QudG90YWxCeXRlcykgKiAxMDA7XG4gICAgICBjb25zb2xlLmxvZygnVXBsb2FkIGlzICcgKyBwcm9ncmVzcyArICclIGRvbmUnKTtcbiAgICAgIHN3aXRjaCAoc25hcHNob3Quc3RhdGUpIHtcbiAgICAgICAgY2FzZSBmaXJlYmFzZS5zdG9yYWdlLlRhc2tTdGF0ZS5QQVVTRUQ6IC8vIG9yICdwYXVzZWQnXG4gICAgICAgICAgY29uc29sZS5sb2coJ1VwbG9hZCBpcyBwYXVzZWQnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBmaXJlYmFzZS5zdG9yYWdlLlRhc2tTdGF0ZS5SVU5OSU5HOiAvLyBvciAncnVubmluZydcbiAgICAgICAgICBjb25zb2xlLmxvZygnVXBsb2FkIGlzIHJ1bm5pbmcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgIHN3aXRjaCAoZXJyb3IuY29kZSkge1xuICAgICAgY2FzZSAnc3RvcmFnZS91bmF1dGhvcml6ZWQnOlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0b3JhZ2UvY2FuY2VsZWQnOlxuICAgICAgICAvLyBVc2VyIGNhbmNlbGVkIHRoZSB1cGxvYWRcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzdG9yYWdlL3Vua25vd24nOlxuICAgICAgICAvLyBVbmtub3duIGVycm9yIG9jY3VycmVkLCBpbnNwZWN0IGVycm9yLnNlcnZlclJlc3BvbnNlXG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfSwgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJ1cGxvYWQgZmluaXNoZWRcIilcbiAgICB2YXIgZG93bmxvYWRVUkwgPSB1cGxvYWRUYXNrLnNuYXBzaG90LmRvd25sb2FkVVJMO1xuICAgIGNhbGxiYWNrKHBvc3QsIHBvc3RBcnJheSwgZG93bmxvYWRVUkwsIG51bGwpO1xuICB9KTtcbiAgICB9KVxuICAgIFxuXG5cblxuICB9XG5cbn1dKVxuXG5cblxuXG5cblxuXG4iXX0=
