var authWait=["Auth",function(e){return e.$waitForSignIn()}],authRequire=["Auth",function(e){return e.$requireSignIn()}];angular.module("SistersApp",["SistersCtrls","SistersDirectives","ui.router","ui.bootstrap","firebase","angularMoment","ngCart","ngStorage","angularPayments","ngAnimate","picardy.fontawesome","textAngular","ui.router.metatags","angular-parallax","tableSort","ngFileSaver","flow"]).run(["$rootScope","$state","$location","$window","MetaTags",function(e,t,o,a,r){e.MetaTags=r,moment.tz.add("America/Los_Angeles|PST PDT|80 70|0101|1Lzm0 1zb0 Op0"),e.$on("$stateChangeError",function(e,o,a,r,n,i){"AUTH_REQUIRED"===i&&t.go("login")}),e.$on("$stateChangeSuccess",function(e){document.body.scrollTop=document.documentElement.scrollTop=0,a.ga&&a.ga("send","pageview",{page:o.path()})})}]).config(["tableSortConfigProvider",function(e){var t="<div class='row'>";t+="<div class='col-sm-4 col-md-3 col-sm-offset-8 col-md-offset-9'>",t+="<div class='form-group has-feedback'>",t+="<input type='search' class='form-control' placeholder='filter {{ITEM_NAME_PLURAL}}' ng-model='FILTER_STRING'/>",t+="<span class='glyphicon glyphicon-search form-control-feedback' aria-hidden='true'></span>",t+="</div>",t+="</div>",t+="</div>",e.filterTemplate=t;var o="<div class='text-right'>";o+="<small class='text-muted'>Showing {{CURRENT_PAGE_RANGE}} {{FILTERED_COUNT === 0 ? '' : 'of'}} ",o+="<span ng-if='FILTERED_COUNT === TOTAL_COUNT'>{{TOTAL_COUNT | number}} {{TOTAL_COUNT === 1 ? ITEM_NAME_SINGULAR : ITEM_NAME_PLURAL}}</span>",o+="<span ng-if='FILTERED_COUNT !== TOTAL_COUNT'>{{FILTERED_COUNT | number}} {{FILTERED_COUNT === 1 ? ITEM_NAME_SINGULAR : ITEM_NAME_PLURAL}} (filtered from {{TOTAL_COUNT | number}})</span>",o+="</small>&nbsp;",o+="<uib-pagination style='vertical-align:middle;' ng-if='ITEMS_PER_PAGE < TOTAL_COUNT' ng-model='CURRENT_PAGE_NUMBER' ",o+="total-items='FILTERED_COUNT' items-per-page='ITEMS_PER_PAGE' max-size='5' force-ellipses='true'></uib-pagination>&nbsp;",o+="<div class='form-group' style='display:inline-block;'>",o+="<select class='form-control' ng-model='ITEMS_PER_PAGE' ng-options='opt as (opt + \" per page\") for opt in PER_PAGE_OPTIONS'></select>",o+="</div>",o+="</div>",e.paginationTemplate=o}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","UIRouterMetatagsProvider","$provide",function(e,t,o,a,r){a.setDefaultTitle("SISTERS").setDefaultDescription('Seattle duo. "Drink Champagne", the debut album, available now!').setStaticProperties({"og:site_name":"SISTERS"}).setOGURL(!0),t.otherwise("/"),e.state("home",{url:"/",metaTags:{title:"SISTERS",description:'Seattle duo. "Drink Champagne", the debut album, available now!'},templateUrl:"/views/home.html",controller:"HomeCtrl"}).state("admin",{url:"/admin",templateUrl:"/views/admin/adminMain.html",controller:"AdminMainCtrl",resolve:{currentAuth:authRequire}}).state("admin-orders",{url:"/admin/orders",templateUrl:"/views/admin/adminOrders.html",controller:"AdminOrdersCtrl",resolve:{currentAuth:authRequire,Orders:["GetAllOrders",function(e){return e().$loaded()}]}}).state("admin-tickets",{url:"/admin/tickets",templateUrl:"/views/admin/adminTickets.html",controller:"AdminTicketsCtrl",resolve:{currentAuth:authRequire,Tickets:["GetAllTickets",function(e){return e().$loaded()}]}}).state("admin-ticket-each",{url:"/admin/tickets/:id",templateUrl:"/views/admin/adminTicketEach.html",controller:"AdminTicketsEachCtrl",resolve:{currentAuth:authRequire,ThisTicket:["GetSingleTicket","$stateParams",function(e,t){return e(t.id).$loaded()}],WillCall:["ThisWillCall","$stateParams",function(e,t){return e(t.id).$loaded()}]}}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"AboutCtrl"}).state("press",{url:"/press",templateUrl:"/views/press.html",controller:"PressCtrl"}).state("contact",{url:"/contact",templateUrl:"/views/contact.html",controller:"ContactCtrl"}).state("download",{url:"/download/:id",resolve:{downloadKey:["DownloadKeyService","$stateParams",function(e,t){return e(t.id).$loaded()}]},onEnter:["$state","$stateParams","$timeout","downloadKey",function(e,t,o,a){a===!0?o(function(){console.log("success!")},0):o(function(){console.log("failed!")},0)}]}).state("blog",{templateUrl:"/views/blog/blog.html",controller:"BlogMasterCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}]}}).state("blog-new",{url:"/blog/new",templateUrl:"/views/blog/newBlogPost.html",controller:"NewBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog-edit",{url:"/blog/edit/:slug",templateUrl:"/views/blog/editBlogPost.html",controller:"EditBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}],thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}]}}).state("blog-tags-edit",{url:"/blog/editTags/",templateUrl:"/views/blog/editTags.html",controller:"EditBlogTagsCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog.main",{url:"/blog",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.page",{url:"/blog/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.archive",{url:"/blog/archives/:year/:month",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.archivePage",{url:"/blog/archives/:year/:month/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.tags",{url:"/blog/tags/:tagName",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogTagsCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],TagsShow:["$stateParams","TagsShowService",function(e,t){return t(e.tagName).$loaded()}]}}).state("blog.show",{url:"/blog/show/:slug",templateUrl:"/views/blog/blog-content.html",controller:"BlogShowCtrl",resolve:{currentAuth:authWait,thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],Blog:["BlogPosts",function(e){return e().$loaded()}]},metaTags:{title:function(e){console.log("what is Blog? ",e);var t="SISTERS - "+e[0].postTitle;return t},description:function(e){return e[0].postBody}}}).state("shows",{url:"/shows",metaTags:{title:"SISTERS - Shows",description:"Upcoming shows for Seattle duo SISTERS."},templateUrl:"/views/shows/shows.html",controller:"ShowsCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("shows-new",{url:"/shows/new",templateUrl:"/views/shows/newShow.html",controller:"NewShowCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("showTickets",{url:"/shows/:showId",templateUrl:"/views/shows/singleShow.html",controller:"SingleShowCtrl",resolve:{currentAuth:authWait,GetShow:["GetSingleShow","$stateParams",function(e,t){return e(t.showId).$loaded()}],GetTicket:["GetTicket","$stateParams",function(e,t){return e(t.showId).$loaded()}]}}).state("storeCart",{url:"/store/cart",templateUrl:"/views/store/cart.html",controller:"StoreCartCtrl",resolve:{currentAuth:authWait}}).state("checkout",{templateUrl:"/views/store/checkoutTemplate.html",controller:"CheckoutTemplateCtrl",resolve:{currentAuth:authWait}}).state("checkout.address",{url:"/store/checkout/address",templateUrl:"/views/store/checkoutAddress.html",controller:"StoreAddressCtrl",resolve:{currentAuth:authWait}}).state("checkout.payment",{url:"/store/checkout/payment",templateUrl:"/views/store/checkoutPayment.html",controller:"StorePaymentCtrl",resolve:{currentAuth:authWait,currentOrder:["CurrentOrderService",function(e){return e.get()}]}}).state("checkout.confirm",{url:"/store/checkout/confirm",templateUrl:"/views/store/checkoutConfirm.html",controller:"StoreConfirmCtrl",resolve:{currentAuth:authWait,AllTickets:["GetAllTickets",function(e){return e().$loaded()}]}}).state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}),o.html5Mode(!0)}]).filter("cut",function(){return function(e,t,o,a,r){var n=angular.element("<div/>").html(e);console.log("source: ",n);var i=n.text().length;console.log("length: ",i)}}).filter("trustAsResourceUrl",["$sce",function(e){return function(t){return e.trustAsResourceUrl("https://www.youtube.com/embed/"+t)}}]).filter("MomentFilter",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do, YYYY")}}]).filter("tooOld",function(){return function(e){var t=moment().unix(),o=[];return angular.forEach(e,function(e){var a=e.unixDate/1e3;t-a<=86400&&o.push(e)}),o}}).filter("DeliveryEstDate",["moment",function(e){return function(t){return e(t).format("dddd, MMMM Do")}}]).filter("TimeDate",["moment",function(e){return function(t){return e(t).format("MMMM Do YYYY, h:mm:ss a")}}]).filter("slashDate",["moment",function(e){return function(t){return e(1e3*t).format("MM/DD/YYYY")}}]).filter("timeAgo",["moment",function(){return function(e){var t=new Date(e);return console.log(t),console.log(typeof t),moment(t).fromNow()}}]).filter("reverse",function(){return function(e){return e.slice().reverse()}}).filter("centsToDollars",function(){return function(e){return e/100}}),angular.module("SistersCtrls",["SistersServices"]).controller("MainCtrl",["$scope","$state","$timeout","$http",function(e,t,o,a){e.$on("loadMainContainer",function(t,o){"loaded"===o?e.mainLoaded=!0:e.mainLoaded=!1})}]).controller("HomeCtrl",["$scope","$state","$timeout","$http","LoadedService",function(e,t,o,a,r){var n=document.getElementById("main");n.style.backgroundColor="rgba(247, 237, 245, 0)",n.style.width="",n.style.padding="",n.style.paddingBottom="400px",e.loaded=r.get();var i=window.innerWidth;!e.loaded&&i>806?o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},500):o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,r.set(!0)},500),e.mailchimpSubmit=function(t,o,r){if(t.$valid){e.isPopup=!1;var n="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+o+"&c=JSON_CALLBACK";a.jsonp(n).then(function(t){console.log(t),e.user={},r&&(e.mailConfirm=!0)},function(e){console.log(e)})}}}]).controller("AboutCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 1)",a.style.padding="0 0 176px 0",a.style.width="100%",e.$emit("loadMainContainer","loaded")}]).controller("ContactCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 0)",a.style.padding="",a.style.width="",e.$emit("loadMainContainer","loaded")}]).controller("PressCtrl",["$scope","$state","$timeout",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(255, 255, 255, 0)",a.style.padding="0 0 176px 0",a.style.width="90%",e.$emit("loadMainContainer","loaded")}]),angular.module("SistersCtrls").controller("LoginCtrl",["$scope","$state","Auth",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.submitted=!1,e.logged=!1,o.$onAuthStateChanged(function(o){o?(e.logged=!0,t.go("home")):console.log("Not logged in.")}),e.user={},e.login=function(){e.submitted=!0,e.firebaseUser=null,o.$signInWithEmailAndPassword(e.user.email,e.user.password).then(function(t){e.firebaseUser=t}).catch(function(e){console.error("Authentication failed:",e)})}}]),angular.module("SistersCtrls").controller("NewBlogCtrl",["$scope","$state","$http","Auth","BlogPosts","AllTags","HelperService","SubmitImage","moment",function(e,t,o,a,r,n,i,s,l){var c=document.getElementById("main");c.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.BlogPosts=r(),e.tags=n,e.checkedTags={},e.data={},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){console.log("submit clicked"),console.log("what is post? ",e.post),"image"===e.data.mediaSelect?s(e.post,e.BlogPosts,e.data.image,u):"youtube"===e.data.mediaSelect&&(e.data.youtube=i.parseYouTube(e.data.youtube),u(e.post,e.BlogPosts,null,e.data.youtube))},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.resizeImg=function(e){i.imgResize(e)},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})};var u=function(o,a,r,n){var s=i.slugify(o.title),c=(new Date).getTime(),u=l(c).format("YYYY"),d=l(c).format("MMMM"),g={};for(var m in e.checkedTags)g[m]=e.checkedTags[m];var h={postTitle:o.title,slug:s,postBody:o.postBody,youtube:n?n:null,img:r?r:null,tags:g,timestamp:c};console.log("thisPost: ",h),a.$add(h).then(function(e){var o=e.key,a={key:o};firebase.database().ref("archives/"+u+"/"+d+"/"+o).set(a),t.go("blog.main")})}}]).controller("EditBlogCtrl",["$scope","$state","$timeout","$stateParams","SendDataService","AllTags","thisPost","HelperService","SubmitImage","$uibModal","$log","BlogPosts",function(e,t,o,a,r,n,i,s,l,c,u,d){var g=document.getElementById("main");if(g.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.data={},e.postArray=i,e.post=i[0],e.originalTags=angular.copy(e.post.tags),e.tags=n,e.post.youtube){console.log(e.post.youtube);var m=e.post.youtube;e.data.youtube="https://www.youtube.com/watch?v="+m}e.confirmBlogDelete=function(e){var t=c.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/deleteBlogConfirmModal.html",controller:"DeleteBlogConfirmCtrl",size:"sm",resolve:{Post:e}});t.result.then(function(){console.log("submitted modal")},function(){u.info("Modal dismissed at: "+new Date)})},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})},e.resetMedia=function(){e.data.youtube="",e.data.image=""},e.submit=function(){"image"===e.data.mediaSelect&&e.data.image?l(e.post,e.postArray,e.data.image,h):"image"!==e.data.mediaSelect||e.data.image?"youtube"===e.data.mediaSelect&&(e.data.youtube=s.parseYouTube(e.data.youtube),h(e.post,e.BlogPosts,null,e.data.youtube)):h(e.post,e.BlogPosts,e.post.img,null)};var h=function(a,r,n,i){var l=s.slugify(a.postTitle);console.log(l);var c=moment(a.timestamp).format("YYYY"),u=moment(a.timestamp).format("MMMM"),d={};for(var g in a.tags)d[g]=a.tags[g];a.slug=l,a.tags=d,a.youtube=i?i:null,a.img=n?n:null;var m={postTitle:a.postTitle,slug:l,postBody:a.postBody,youtube:a.youtube,img:a.img,tags:d,timestamp:a.timestamp};e.postArray.$save(a).then(function(a){var r=a.key;firebase.database().ref("archives/"+c+"/"+u+"/"+r).remove(),firebase.database().ref("archives/"+c+"/"+u+"/"+r).set(m);for(g in e.originalTags)if(e.originalTags[g]===!0){var n="tags/"+g+"/posts/"+r;firebase.database().ref(n).remove().then(function(e){}).catch(function(e){console.log("Remove failed: "+e.message)})}else console.log(g+" not a tag for old edit!");o(function(){for(g in m.tags)m.tags[g]===!0?firebase.database().ref("tags/"+g+"/posts/"+r).set(m):console.log(g+" not a tag for new edit!")},100),t.go("blog.main")})}}]).controller("EditBlogTagsCtrl",["$scope","$uibModalInstance","tag","Blog",function(e,t,o,a){e.prompted=!1,e.tag=angular.copy(o),console.log(o),e.ok=function(o){var a={name:e.tag.name};firebase.database().ref("/tags/"+e.tag.$id).update(a),t.close()},e.cancel=function(){t.dismiss("cancel")},e.deletePrompt=function(){e.prompted=!0},e.delete=function(o){if("no"===o)e.prompted=!1;else if("yes"===o){firebase.database().ref("/tags/"+e.tag.$id).remove();for(var r=0;r<a.length;r++){var n=a[r].tags;n[e.tag.$id]===!0&&(n[e.tag.$id]=null,firebase.database().ref("/blog_posts/"+a[r].$id+"/tags").update(n))}t.close()}}}]).controller("DeleteBlogConfirmCtrl",["$scope","$uibModalInstance","Post","moment","$location",function(e,t,o,a,r){console.log(o),e.yes=function(){var e=a(o.timestamp).format("YYYY"),n=a(o.timestamp).format("MMMM");console.log(n+" of "+e),firebase.database().ref("blog_posts/"+o.$id).remove(),firebase.database().ref("archives/"+e+"/"+n+"/"+o.$id).remove(),t.close(),r.url("/blog")},e.no=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("BlogMasterCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService","TwitterFactory",function(e,t,o,a,r,n,i,s,l,c,u,d){e.loadedInsta=!1,e.loadedTwitter=!1,e.$emit("loadMainContainer","loaded"),c.then(function(t){e.photos=t.data,e.loadedInsta=!0,e.loadedTwitter&&(e.loaded=!0)}),d.then(function(t){e.tweetDate=t.allTweetData.created_at,e.twitterUser=t.allTweetData.user.name,e.twitterHandle=t.allTweetData.user.screen_name,e.tweetId=t.allTweetData.id_str,e.tweet=t.tweetBody,e.favorites=t.favorites,e.retweets=t.retweets,e.loadedTwitter=!0,e.loadedInsta&&(e.loaded=!0)}),e.enable=!0,e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("BlogCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService",function(e,t,o,a,r,n,i,s,l,c,u){var d=document.getElementById("main");d.style.backgroundColor="rgba(255,255,255,0)",d.style.width="",d.style.padding="0",e.$emit("loadMainContainer","loaded"),e.allTags=u(),e.location=r.$$path,c.then(function(t){e.photos=t.data,e.loaded=!0}),e.enable=!0,e.parseTitle=l.titleToURL,e.allPosts=s,e.page=n.page||0,e.pageUp="/blog/"+(parseInt(e.page)+1),e.pageDown="/blog/"+l.pageDown(e.page),e.length=s.length,e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=s.slice(e.first,e.last),e.editPost=function(e){r.url("/blog/edit/"+e)}}]).controller("BlogArchiveCtrl",["$scope","$state","$timeout","$stateParams","$location","Blog","Archive","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,i,s,l,c){e.$emit("loadMainContainer","notLoaded"),e.location=r.$$path,e.allTags=c(),e.enable=!0,e.fullBlog=n;for(var u=[],d=0;d<i.length;d++)for(var g=i[d].$id,m=0;m<n.length;m++){var h=n[m].$id;g===h&&u.push(n[m])}e.allPosts=u,e.params=a,e.parseTitle=l.titleToURL,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=a.page||0,e.pageUp="/blog/archives/"+a.year+"/"+a.month+"/"+(parseInt(e.page)+1),e.pageDown="/blog/archives/"+a.year+"/"+a.month+"/"+l.pageDown(e.page),e.length=e.allPosts.length,e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=e.allPosts.slice(e.first,e.last),o(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=l.titleToURL(e.postTitle);r.url("/blog/edit/"+t)}}]).controller("BlogTagsCtrl",["$scope","$state","$stateParams","$location","$timeout","Blog","TagsShow","Auth","HelperService","AllTagsService",function(e,t,o,a,r,n,i,s,l,c){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=c(),e.enable=!0,e.tagName=i[0].name;for(var u=i[0].$id,d=[],g=0;g<n.length;g++){var m=n[g].tags;m[u]&&d.push(n[g])}e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=o.page||0,e.pageUp="/blog/tags/"+o.tagName+"/"+(parseInt(e.page)+1),e.pageDown="/blog/tags/"+o.tagName+"/"+l.pageDown(e.page),e.length=length,e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=d.slice(e.first,e.last),r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=l.titleToURL(e.postTitle);a.url("/blog/edit/"+t)}}]).controller("BlogShowCtrl",["$scope","$state","$stateParams","$location","$timeout","thisPost","Blog","AllTagsService",function(e,t,o,a,r,n,i,s){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=s(),e.enable=!1,e.recentPosts=i,e.posts=n,e.allPosts=n,r(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0})}]).controller("BlogSidebarCtrl",["$scope","$state","$stateParams","$timeout","ArchiveService","AllTagsService","BlogPosts","HelperService","$uibModal","$log",function(e,t,o,a,r,n,i,s,l,c){e.recentPosts=i(),e.parseTitle=s.titleToURL,e.years=r.years(),e.years.$loaded().then(function(){console.log(e.years),e.monthObj={};for(var t=0;t<e.years.length;t++)e.monthObj[e.years[t].$id]=r.months(e.years[t].$id);a(function(){console.log(e.monthObj)},7e3)}),e.allTags=n(),e.newBlogPost=function(){t.go("blog-new")},e.editTag=function(e){var t=l.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/editTagsModal.html",controller:"EditBlogTagsCtrl",size:"lg",resolve:{Blog:["BlogPosts",function(e){return e().$loaded()}],tag:e}});t.result.then(function(){},function(){c.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("editModalCtrl",["$scope","$uibModalInstance","editShow","index","$firebaseArray",function(e,t,o,a,r){e.shows=o,e.show=o[a],console.log("index is ",a),e.dateObj=new Date(1e3*e.show.unix),console.log(e.dateObj),e.ok=function(){e.show.date=moment(e.dateObj).format("ddd, MMMM Do"),e.show.unix=e.dateObj.getTime()/1e3,e.shows.$save(e.show).then(function(e){console.log("success")},function(e){console.log("Error:",e)}),t.close()},e.cancel=function(){t.dismiss("cancel")},e.delete=function(){e.shows.$remove(e.show).then(function(e){console.log("successful delete: ",e)},function(e){console.log("error: ",e)}),t.close()}}]).controller("newModalCtrl",["$scope","$uibModalInstance","$firebaseArray",function(e,t,o){e.show={};var a=firebase.database().ref("shows");e.showsArray=o(a),e.ok=function(){var o=moment(e.show.showDate).format("ddd, MMMM Do YYYY"),a=e.show.showDate.getTime()/1e3;console.log(o);var r={date:o,unix:a,location:e.show.showLocation,venue:e.show.venue,venueLink:e.show.venueLink||"",ticketLink:e.show.ticketLink||""};console.log(r),e.showsArray.$add(r),t.close()},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("NavCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage","$location","$window",function(e,t,o,a,r,n,i,s,l,c){e.fade=!0,e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.user={},e.mailConfirm=!1;var u=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,d=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e.height=d;var g=document.getElementById("mobile-background-div");u<900?g.style.height=d+"px":g.style.height="0px",!e.loaded&&u>806?e.mobileWidth=!1:e.mobileWidth=!0,t(function(){if(null===e.firebaseUser&&"/login"!==l.$$path){if(!document.getElementById("overlayMail")){var t=document.createElement("div");t.id="overlayMail",t.className="overlay-start";var o=document.body,a=document.querySelector("#pop-up");t.style.height=o.scrollHeight+"px",a.appendChild(t);var r=document.querySelector("#overlayMail");r.classList.add("active")}e.isPopup=!0}},6e3),e.closePopup=function(){e.isPopup=!1},e.toStore=function(){e.isPopup=!1,t(function(){c.open("https://iheartsisters.bandcamp.com/")},300)},e.toggle=!0;window.innerWidth}]).controller("FooterCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,i,s){e.auth=n,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.logout=function(){n.$signOut()},e.login=function(){i.go("login")};window.innerWidth}]).controller("MailModalCtrl",["$scope","$timeout","$uibModal","$uibModalInstance","$http","Auth","$state","$sessionStorage",function(e,t,o,a,r,n,i,s){e.close=function(){a.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("ShowsCtrl",["$scope","$state","currentAuth","$log","$firebaseArray","moment","Auth","getShows","$uibModal",function(e,t,o,a,r,n,i,s,l){var c=document.getElementById("main");c.style.backgroundColor="rgba(252, 244, 247, 0)",c.style.width="",c.style.padding="",e.$emit("loadMainContainer","loaded"),e.shows=s,e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.open=function(t,o){var r=l.open({animation:!0,backdrop:!0,templateUrl:"/views/shows/"+t+"ShowModal.html",controller:t+"ModalCtrl",size:"lg",resolve:{editShow:function(){return e.shows},index:o}});r.result.then(function(t){e.selected=t},function(){a.info("Modal dismissed at: "+new Date)})}}]).controller("SingleShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","GetShow","GetTicket",function(e,t,o,a,r,n,i,s,l){var c=document.getElementById("main");if(c.style.backgroundColor="rgba(252, 244, 247, 0)",c.style.width="",c.style.padding="",l.description){e.show=s,e.ticket=l,e.showUnix=1e3*e.ticket.unix,e.images=e.ticket.images;var u=e.images[0],d=document.querySelector(".main-product-photo img");d.src=e.images[0],e.$emit("loadMainContainer","loaded")}else n.url("/store");e.isActiveImg=function(){return this.img===u},e.changeActive=function(){u=this.img,d.src=this.img}}]),angular.module("SistersCtrls").controller("StoreCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","allProducts","Auth",function(e,t,o,a,r,n,i,s){var l=document.getElementById("main");l.style.backgroundColor="rgba(255,255,255,0)",l.style.width="",l.style.padding="",e.loaded=!1,e.products=i,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.showProduct=function(e){t.go("storeShow",{id:e})},e.addProduct=function(){t.go("addProduct")},a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]).controller("StoreCartCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage",function(e,t,o,a,r,n){var i=document.getElementById("main");i.style.backgroundColor="rgba(255,255,255,0)",a(function(){e.$emit("loadMainContainer","loaded")},1),e.toCheckout=function(){r.url("/store/checkout/address")},e.continue=function(){r.url("/store")}}]).controller("StoreShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","oneProduct",function(e,t,o,a,r,n,i,s){var l=document.getElementById("main");if(l.style.backgroundColor="",e.$emit("loadMainContainer","loaded"),s.description){e.product=s,e.images=s.images;var c=e.images[0];e.skus=e.product.skus.data,e.data={},e.data.selected=e.product.skus[0];var u=document.querySelector(".main-product-photo img");u.src=e.images[0]}else n.url("/store");e.isActiveImg=function(){return this.img===c},e.changeActive=function(){c=this.img,u.src=this.img}}]).controller("CheckoutTemplateCtrl",["$scope","$state","$http","$timeout","$location","$localStorage",function(e,t,o,a,r,n){e.$emit("loadMainContainer","loaded"),e.$storage=n,e.$on("pathChange",function(t,o){e.path=o}),e.$on("pathCountChange",function(t,o){e.pathCount=o})}]).controller("StoreAddressCtrl",["$scope","$state","$window","$timeout","$http","$location","$localStorage","ngCart","$rootScope","CurrentOrderService","moment",function(e,t,o,a,r,n,i,s,l,c,u){var d=document.getElementById("main");d.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=i,e.cartItems=s.getItems(),e.$on("setShippable",function(t,o){e.shipBool=o}),e.$storage.billingAddress||(e.$storage.pathCount=1),e.$emit("pathChange",n.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.loaded=[],e.data={shipping:{country:{}}},e.$storage.billingAddress?e.data.billing=e.$storage.billingAddress:e.data.billing={country:{}},e.mailingListAdd=!0,e.shippingSameBool=!1,r.get("/js/JSON/countries.json").success(function(t){e.countries=t,e.data.shipping.country=e.countries[0],e.data.billing.country=e.countries[0],e.loaded.push("go")}),r.get("/js/JSON/states.json").success(function(t){e.states=t,e.loaded.push("go")}),r.get("/js/JSON/provinces.json").success(function(t){e.provinces=t,e.loaded.push("go")}),e.isShippingSame=function(){e.data.shippingSame?(e.data.billing=e.data.shipping,e.shippingSameBool=!0):(e.data.billing={},e.shippingSameBool=!1)},e.countryChange=function(t){"US"===t.code?e.shippingType=e.shipRates.domestic:e.shippingType=e.shipRates.international},e.submitForm=function(t){if(t.$valid){e.loaded=[],g();var o={amount:s.getTax(),description:"tax: ("+s.getTaxRate()+"%)"},a=e.data.shipping,i=e.data.billing;e.$storage.billingAddress=e.data.billing,e.$storage.shippingAddress=e.data.shipping;var l=new Date,c={url:"/store/newOrder",method:"POST",params:{order:{status:"pending",dateCreated:l.getTime(),currency:"usd",items:e.cartItems,totalItemsPrice:s.getSubTotal(),tax:o,billing:{name:i.name,email:i.email,phone:i.phone,address:{line1:i.address1,line2:i.address2||null,city:i.city,state:i.stateProvince.short||null,country:i.country.code,postal_code:i.postalCode}},metadata:{taxRate:s.getTaxRate()}}}};e.shipBool?(c.params.shippable=!0,c.params.shipping={name:a.name,address:{line1:a.address1,line2:a.address2||null,city:a.city,state:a.stateProvince.short||null,country:a.country.code,postal_code:a.postalCode}}):c.params.shippable=!1;var u=Math.floor(1e5+1e9*Math.random());e.$storage.orderData=c.params.order,e.$storage.orderData.orderNumber=u,firebase.database().ref("orders/order_"+u).set(c.params.order),r(c).then(function(t){e.$storage.shippingData=t.data,e.$storage.pathCount=2,n.url("/store/checkout/payment")},function(e){console.log("error ",e)})}else console.log("form invalid!")};var g=function(){e.mailingListAdd===!0?e.$storage.mailingList=!0:e.$storage.mailingList=!1};e.getTaxRate=function(e,t,a){if("US"===e.code&&"WA"===t.short&&a)if(o.localStorage.currentWaRate){var n=parseFloat(o.localStorage.currentWaRate);s.setTaxRate(n)}else{var i={url:"/taxRate",method:"GET",params:{country:"usa",postal:a}};r(i).then(function(e){s.setTaxRate(e.data.totalRate),o.localStorage.currentWaRate=e.data.totalRate},function(e){console.log("error ",e)})}else"US"===e.code&&"WA"!==t.short?s.setTaxRate(0):"US"!==e.code&&s.setTaxRate(0)}}]).controller("StorePaymentCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder",function(e,t,o,a,r,n,i,s,l){var c=document.getElementById("main");c.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=n,e.$emit("pathChange",r.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.data={},e.$on("setShippable",function(t,o){e.shipBool=o});for(var u=(e.$storage.orderData.orderNumber,e.$storage.orderData.items),d=0;d<u.length;d++)"ticket"===u[d]._data.product_type&&(e.showWillCall=!0);if(e.$storage.shippingData.rates_list){e.shipOptions=e.$storage.shippingData.rates_list,e.$storage.savedSelectedShip=e.$storage.shippingData.rates_list[0];for(var d=0;d<e.shipOptions.length;d++)if(e.shipOptions[d].object_id===e.$storage.savedSelectedShip.object_id){e.selectedShip=e.shipOptions[d];break}e.$watch("selectedShip",function(t,o,a){e.$storage.savedSelectedShip=e.selectedShip,i.setShipping(100*e.selectedShip.amount)},!1)}a(function(){e.loaded=!0}),e.submitForm=function(t){t.$valid?(e.$storage.orderData.willCallName=e.data.willCallName,e.loaded=!1,Stripe.card.createToken({number:e.number,cvc:e.cvc,exp:e.expiry,name:e.$storage.billingAddress.name,address_line1:e.$storage.billingAddress.address1,
address_line2:e.$storage.billingAddress.address2||null,address_city:e.$storage.billingAddress.city,address_state:e.$storage.billingAddress.stateProvince.short||null,address_zip:e.$storage.billingAddress.postalCode,address_country:e.$storage.billingAddress.country.code},function(t,o){200!=t&&console.log("we have an error: ",t),o&&a(function(){e.$storage.tokenData=o,e.$storage.pathCount=3,e.$emit("pathCountChange",e.$storage.pathCount),r.url("/store/checkout/confirm")},1)})):console.log("form invalid!!")}}]).controller("StoreConfirmCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","AllTickets","WillCallListService",function(e,t,o,a,r,n,i,s,l,c){e.$on("setShippable",function(t,o){e.shipBool=o});var u=document.getElementById("main");u.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=n,e.orderComplete=!1,e.$emit("pathChange",r.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.ngCart=i;var d=e.$storage.orderData.items,g=l;e.currentShipping=e.$storage.savedSelectedShip,e.token=e.$storage.tokenData,e.shipping=e.$storage.shippingAddress,e.billing=e.$storage.billingAddress,e.order=e.$storage.orderData,a(function(){e.loaded=!0});var m=function(t,o){var a=t[o].quantity,r=c(t[o].parent);r.$add({name:e.$storage.orderData.willCallName,quantity:a}).then(function(e){var r=(e.key,firebase.database().ref("tickets/"+t[o].parent+"/totalTickets"));r.once("value").then(function(e){r.set(e.val()-a)})},function(e){console.log("what is err: ",e)})},h=function(e,t){firebase.database().ref("orders/order_"+e+"/status").set("complete"),firebase.database().ref("orders/order_"+e+"/totalItemsPrice").set(t.amount),firebase.database().ref("orders/order_"+e+"/stripeChargeId").set(t.id)};e.createCharge=function(){e.loaded=!1;var t={url:"/store/orderComplete",method:"POST",params:{totalAmount:i.totalCost(),tax:i.getTax(),token:e.token.id,name:e.token.card.name,cart:JSON.stringify(i.getItems()),order:e.$storage.orderData,shipChoice:e.currentShipping}};o(t).then(function(t){console.log(t),e.isError=!1;for(var o=0;o<d.length;o++)for(var a=0;a<g.length;a++)g[a].$id===d[o].parent&&m(d,o);h(e.$storage.orderData.orderNumber,t.data),e.$storage.mailingList===!0&&f(e.$storage.billingAddress.email),e.orderComplete=!0,e.$storage.pathCount=0,e.$emit("pathCountChange",e.$storage.pathCount),i.setTaxRate(null),i.setShipping(null),i.empty(),n.$reset(),localStorage.clear()},function(t){e.errorMessage=t.data.message,e.isError=!0,e.loaded=!0,console.log("error ",t)})};var f=function(e){var t="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+e+"&c=JSON_CALLBACK";o.jsonp(t).then(function(e){},function(e){console.log(e)})}}]),angular.module("SistersCtrls").controller("AdminMainCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth",function(e,t,o,a,r,n,i){var s=document.getElementById("main");s.style.backgroundColor="rgba(255,255,255,0)",s.style.width="",s.style.padding="0",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminOrdersCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","Orders","ReturnCompleteOrders","ReturnPendingOrders",function(e,t,o,a,r,n,i,s,l,c){console.log(s),e.completeOrders=l(s),e.pendingOrders=c(s),e.orders=e.completeOrders;var u=document.getElementById("main");u.style.backgroundColor="rgba(255,255,255,0)",u.style.width="",u.style.padding="0",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminTicketsCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","Tickets",function(e,t,o,a,r,n,i,s){var l=document.getElementById("main");l.style.backgroundColor="rgba(255,255,255,0)",l.style.width="",l.style.padding="0",e.tickets=s,e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminTicketsEachCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","ThisTicket","WillCall","WillCallToBlob","FileSaver","moment",function(e,t,o,a,r,n,i,s,l,c,u,d){var g=document.getElementById("main");g.style.backgroundColor="rgba(255,255,255,0)",g.style.width="",g.style.padding="0",e.ticket=s,e.ticketsSold=e.ticket.ticketCapacity-e.ticket.totalTickets,e.chartColors=["#adadad","#f891af"],e.labels=["Remaining Tickets","Tickets Sold"],e.data=[e.ticket.totalTickets,e.ticketsSold],e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.downloadList=function(){console.log("entering!");var t=d(1e3*e.ticket.unix).format("MM/DD/YYYY"),o=e.ticket.title+" ("+t+")",a=c(l,o);u.saveAs(a,d(1e3*e.ticket.unix).format("MM-DD-YYYY")+".txt")}}]).controller("StoreProductAddCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth",function(e,t,o,a,r,n,i){var s=document.getElementById("main");s.style.backgroundColor="rgba(255,255,255,0)",s.style.width="",s.style.padding="",e.loaded=!1,e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]),angular.module("SistersDirectives",[]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,t,o){t.bind("change",function(t){var o=new FileReader;o.onload=function(t){e.$apply(function(){e.fileread=t.target.result})},o.readAsDataURL(t.target.files[0])})}}}]).directive("countryName",["$http",function(e){return{template:"<span>{{name}}</span>",scope:{countryCode:"="},link:function(t){e.get("/js/JSON/countries.json").then(function(e){for(var o=e.data,a=0;a<o.length;a++)if(o[a].code===t.countryCode){t.name=o[a].name;break}},function(e){t.name="unknown"})}}}]),angular.module("SistersServices",["ngResource"]).factory("LoadedService",function(){function e(e){o=e}function t(){return o}var o=!1;return{set:e,get:t}}).factory("Auth",["$firebaseAuth",function(e){return e()}]).factory("SendDataService",function(){function e(e){o=e}function t(){return o}var o={};return{set:e,get:t}}).factory("HelperService",["moment","$q",function(e,t){return{parseYouTube:function(e){var t=e.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);return null!=t?t[1]:void console.log("The youtube url is not valid.")},base64MimeType:function(e){var t=null;if("string"!=typeof e)return t;var o=e.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);return o&&o.length&&(t=o[1]),console.log("image type is ",t),t},getBase64Image:function(e){var t=e.replace(/^data:image\/(png|jpeg);base64,/,"");return t},b64toBlob:function(e,t,o){t=t||"",o=o||512;for(var a=atob(e),r=[],n=0;n<a.length;n+=o){for(var i=a.slice(n,n+o),s=new Array(i.length),l=0;l<i.length;l++)s[l]=i.charCodeAt(l);var c=new Uint8Array(s);r.push(c)}var u=new Blob(r,{type:t});return u},pageDown:function(e){return e<2?"":e-1},findFirst:function(e,t){var o=e-4*(1+t);return o>=0?o:0},getToday:function(){var t=e().unix();return t},titleToURL:function(e){return e.split(" ").join("-")},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},imgResize:function(e){console.log("inside resize!!");var o=t.defer(),a=new Image;return a.src=e,a.onload=function(){console.log(this.width+" "+this.height);var e=a.width/a.height;console.log("WHAT IS RATIO??? ",e);var t=document.createElement("canvas");if(e>=1.776&&a.height>=500){console.log("loadIMG: ",a);var r=(a.height-500)/a.height;t.height=500,t.width=a.width-a.width*r}else if(e<1.776&&a.width>=889){console.log("loadIMG: ",a);var r=(a.width-889)/a.width;t.width=889,t.height=a.height-a.height*r}else console.log("loadIMG: ",a),console.log("image is not big enough!");var n=t.getContext("2d");n.drawImage(a,0,0,t.width,t.height);var i=t.toDataURL("image/jpeg");o.resolve(i)},o.promise}}}]).factory("SubmitImage",["HelperService",function(e){return function(t,o,a,r){e.imgResize(a).then(function(a){var n=e.base64MimeType(a);console.log("TYPE IS ",n);var i=e.getBase64Image(a),s=e.b64toBlob(i,n),l={contentType:n},c=(1e32*Math.random()).toString(36),u=firebase.storage().ref(),d=u.child("blog-images/"+c).put(s,l);d.on(firebase.storage.TaskEvent.STATE_CHANGED,function(e){var t=e.bytesTransferred/e.totalBytes*100;switch(console.log("Upload is "+t+"% done"),e.state){case firebase.storage.TaskState.PAUSED:console.log("Upload is paused");break;case firebase.storage.TaskState.RUNNING:console.log("Upload is running")}},function(e){switch(e.code){case"storage/unauthorized":break;case"storage/canceled":break;case"storage/unknown":}},function(){console.log("upload finished");var e=d.snapshot.downloadURL;r(t,o,e,null)})})}}]),angular.module("SistersServices").factory("ProductsService",["$firebaseArray","$firebaseObject",function(e,t){return{allProducts:function(){var t=firebase.database().ref("products");return e(t)},oneProduct:function(e){var o=firebase.database().ref("products/"+e);return t(o)}}}]).factory("CurrentOrderService",["$window",function(e){function t(t){e.localStorage.setItem("orderData",angular.toJson(t))}function o(){var t=angular.fromJson(e.localStorage.getItem("orderData"));return JSON.parse(t)}return{set:t,get:o}}]),angular.module("SistersServices").service("InstagramFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/instagram",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).service("TwitterFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/twitter",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).factory("BlogPosts",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("blog_posts").orderByChild("timestamp");return e(t)}}]).factory("ThisPostService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("blog_posts"),a=o.orderByChild("slug").equalTo(t);return e(a)}}]).factory("AllTagsService",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tags");return e(t)}}]).factory("TagsShowService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tags"),a=o.orderByChild("name").equalTo(t);return e(a)}}]).factory("ArchiveService",["$firebaseArray",function(e){return{years:function(){var t=firebase.database().ref("archives");return e(t)},months:function(t){var o=firebase.database().ref("archives/"+t);return e(o)}}}]).factory("ArchiveShowService",["$firebaseArray",function(e){return function(t,o){var a=firebase.database().ref("archives/"+t+"/"+o);return e(a)}}]),angular.module("SistersServices").factory("GetShows",["$firebaseArray","moment",function(e,t){var o=t().unix(),a=o-86400;return function(){var t=firebase.database().ref("shows").orderByChild("unix").startAt(a);return e(t)}}]).factory("GetSingleShow",["$firebaseObject",function(e){return function(t){var o=firebase.database().ref("shows/"+t);return e(o)}}]).factory("GetAllTickets",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tickets");return e(t)}}]).factory("GetTicket",["$firebaseObject",function(e){return function(t){var o=firebase.database().ref("tickets/"+t);return e(o)}}]).factory("WillCallListService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tickets/"+t+"/willCallList");return e(o)}}]),angular.module("SistersServices").factory("GetAllOrders",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("orders");return e(t)}}]).factory("GetAllTickets",["$firebaseArray","moment",function(e,t){var o=t().unix(),a=o-86400;return function(){var t=firebase.database().ref("tickets").orderByChild("unix").startAt(a);return e(t)}}]).factory("GetSingleTicket",["$firebaseObject",function(e){return function(t){var o=firebase.database().ref("tickets/"+t);return e(o)}}]).factory("ReturnCompleteOrders",function(){return function(e){for(var t=[],o=0;o<e.length;o++)"complete"===e[o].status&&t.push(e[o]);return t}}).factory("ReturnPendingOrders",function(){return function(e){for(var t=[],o=0;o<e.length;o++)"pending"===e[o].status&&t.push(e[o]);return t}}).factory("ThisWillCall",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tickets/"+t+"/willCallList");return e(o)}}]).factory("WillCallFormat",function(){return function(e,t){var o="";o+=t+"\n \n";for(var a=0;a<e.length;a++)o+=e[a].name,o+=e[a].quantity>1?" +"+(e[a].quantity-1)+"\n":"\n";return o}}).factory("WillCallToBlob",["Blob","WillCallFormat",function(e,t){return function(o,a){var r=t(o,a);console.log(r);var n=new e([r],{type:"text/plain;charset=utf-8"});return n}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
