"use strict";angular.module("angular-parallax",[]).directive("parallax",["$window",function($window){return{restrict:"A",scope:{parallaxRatio:"@",parallaxVerticalOffset:"@",parallaxHorizontalOffset:"@"},link:function($scope,elem,attrs){var setPosition=function(){$scope.parallaxHorizontalOffset||($scope.parallaxHorizontalOffset="0");var calcValY=$window.pageYOffset*($scope.parallaxRatio?$scope.parallaxRatio:1.1);if(calcValY<=$window.innerHeight){var topVal=calcValY<$scope.parallaxVerticalOffset?$scope.parallaxVerticalOffset:calcValY,hozVal=$scope.parallaxHorizontalOffset.indexOf("%")===-1?$scope.parallaxHorizontalOffset+"px":$scope.parallaxHorizontalOffset;elem.css("transform","translate("+hozVal+", "+topVal+"px)")}};setPosition(),angular.element($window).bind("scroll",setPosition),angular.element($window).bind("touchmove",setPosition)}}}]).directive("parallaxBackground",["$window",function($window){return{restrict:"A",transclude:!0,template:"<div ng-transclude></div>",scope:{parallaxRatio:"@",parallaxVerticalOffset:"@",parallaxStartPoint:"@"},link:function($scope,elem,attrs){var setPosition=function(){var offset=$scope.parallaxVerticalOffset/100*elem[0].offsetHeight,calcValY=(elem.prop("offsetTop")-$window.pageYOffset)*($scope.parallaxRatio?$scope.parallaxRatio:1.1)-(offset||0);calcValY>=$scope.parallaxStartPoint&&(calcValY=$scope.parallaxStartPoint),elem.css("background-position","50% "+calcValY+"px")};angular.element($window).bind("load",function(e){setPosition(),$scope.$apply()}),angular.element($window).bind("scroll",setPosition),angular.element($window).bind("touchmove",setPosition)}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuZ3VsYXItcGFyYWxsYXguanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImRpcmVjdGl2ZSIsIiR3aW5kb3ciLCJyZXN0cmljdCIsInNjb3BlIiwicGFyYWxsYXhSYXRpbyIsInBhcmFsbGF4VmVydGljYWxPZmZzZXQiLCJwYXJhbGxheEhvcml6b250YWxPZmZzZXQiLCJsaW5rIiwiJHNjb3BlIiwiZWxlbSIsImF0dHJzIiwic2V0UG9zaXRpb24iLCJjYWxjVmFsWSIsInBhZ2VZT2Zmc2V0IiwiaW5uZXJIZWlnaHQiLCJ0b3BWYWwiLCJob3pWYWwiLCJpbmRleE9mIiwiY3NzIiwiZWxlbWVudCIsImJpbmQiLCJ0cmFuc2NsdWRlIiwidGVtcGxhdGUiLCJwYXJhbGxheFN0YXJ0UG9pbnQiLCJvZmZzZXQiLCJvZmZzZXRIZWlnaHQiLCJwcm9wIiwiZSIsIiRhcHBseSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFFQUEsU0FBUUMsT0FBTyx1QkFDWkMsVUFBVSxZQUFhLFVBQVcsU0FBU0MsU0FDNUMsT0FDRUMsU0FBVSxJQUNWQyxPQUNFQyxjQUFlLElBQ2ZDLHVCQUF3QixJQUN4QkMseUJBQTBCLEtBRTVCQyxLQUFNLFNBQVNDLE9BQVFDLEtBQU1DLE9BQzNCLEdBQUlDLGFBQWMsV0FDWkgsT0FBT0YsMkJBQTBCRSxPQUFPRix5QkFBMkIsSUFDdkUsSUFBSU0sVUFBV1gsUUFBUVksYUFBZUwsT0FBT0osY0FBZ0JJLE9BQU9KLGNBQWdCLElBQ3BGLElBQUlRLFVBQVlYLFFBQVFhLFlBQWEsQ0FDbkMsR0FBSUMsUUFBVUgsU0FBV0osT0FBT0gsdUJBQXlCRyxPQUFPSCx1QkFBeUJPLFNBQ3JGSSxPQUFVUixPQUFPRix5QkFBeUJXLFFBQVEsUUFBUyxFQUFLVCxPQUFPRix5QkFBMkIsS0FBT0UsT0FBT0Ysd0JBQ3BIRyxNQUFLUyxJQUFJLFlBQWEsYUFBZUYsT0FBUyxLQUFPRCxPQUFTLFFBSWxFSixlQUVBYixRQUFRcUIsUUFBUWxCLFNBQVNtQixLQUFLLFNBQVVULGFBQ3hDYixRQUFRcUIsUUFBUWxCLFNBQVNtQixLQUFLLFlBQWFULGtCQUc3Q1gsVUFBVSxzQkFBdUIsVUFBVyxTQUFTQyxTQUN2RCxPQUNFQyxTQUFVLElBQ1ZtQixZQUFZLEVBQ1pDLFNBQVUsNEJBQ1ZuQixPQUNFQyxjQUFlLElBQ2ZDLHVCQUF3QixJQUN4QmtCLG1CQUFvQixLQUV0QmhCLEtBQU0sU0FBU0MsT0FBUUMsS0FBTUMsT0FDM0IsR0FBSUMsYUFBYyxXQUNoQixHQUFJYSxRQUFVaEIsT0FBT0gsdUJBQXVCLElBQU9JLEtBQUssR0FBR2dCLGFBQ3ZEYixVQUFZSCxLQUFLaUIsS0FBSyxhQUFlekIsUUFBUVksY0FBZ0JMLE9BQU9KLGNBQWdCSSxPQUFPSixjQUFnQixNQUFRb0IsUUFBVSxFQUU3SFosV0FBWUosT0FBT2UscUJBQ3JCWCxTQUFXSixPQUFPZSxvQkFFcEJkLEtBQUtTLElBQUksc0JBQXVCLE9BQVNOLFNBQVcsTUFJdERkLFNBQVFxQixRQUFRbEIsU0FBU21CLEtBQUssT0FBUSxTQUFTTyxHQUM3Q2hCLGNBQ0FILE9BQU9vQixXQUdUOUIsUUFBUXFCLFFBQVFsQixTQUFTbUIsS0FBSyxTQUFVVCxhQUN4Q2IsUUFBUXFCLFFBQVFsQixTQUFTbUIsS0FBSyxZQUFhVCIsImZpbGUiOiJhbmd1bGFyLXBhcmFsbGF4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYW5ndWxhci1wYXJhbGxheCcsIFtcbl0pLmRpcmVjdGl2ZSgncGFyYWxsYXgnLCBbJyR3aW5kb3cnLCBmdW5jdGlvbigkd2luZG93KSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdBJyxcbiAgICBzY29wZToge1xuICAgICAgcGFyYWxsYXhSYXRpbzogJ0AnLFxuICAgICAgcGFyYWxsYXhWZXJ0aWNhbE9mZnNldDogJ0AnLFxuICAgICAgcGFyYWxsYXhIb3Jpem9udGFsT2Zmc2V0OiAnQCcsXG4gICAgfSxcbiAgICBsaW5rOiBmdW5jdGlvbigkc2NvcGUsIGVsZW0sIGF0dHJzKSB7XG4gICAgICB2YXIgc2V0UG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKCEkc2NvcGUucGFyYWxsYXhIb3Jpem9udGFsT2Zmc2V0KSAkc2NvcGUucGFyYWxsYXhIb3Jpem9udGFsT2Zmc2V0ID0gJzAnO1xuICAgICAgICB2YXIgY2FsY1ZhbFkgPSAkd2luZG93LnBhZ2VZT2Zmc2V0ICogKCRzY29wZS5wYXJhbGxheFJhdGlvID8gJHNjb3BlLnBhcmFsbGF4UmF0aW8gOiAxLjEgKTtcbiAgICAgICAgaWYgKGNhbGNWYWxZIDw9ICR3aW5kb3cuaW5uZXJIZWlnaHQpIHtcbiAgICAgICAgICB2YXIgdG9wVmFsID0gKGNhbGNWYWxZIDwgJHNjb3BlLnBhcmFsbGF4VmVydGljYWxPZmZzZXQgPyAkc2NvcGUucGFyYWxsYXhWZXJ0aWNhbE9mZnNldCA6IGNhbGNWYWxZKTtcbiAgICAgICAgICB2YXIgaG96VmFsID0gKCRzY29wZS5wYXJhbGxheEhvcml6b250YWxPZmZzZXQuaW5kZXhPZihcIiVcIikgPT09IC0xID8gJHNjb3BlLnBhcmFsbGF4SG9yaXpvbnRhbE9mZnNldCArICdweCcgOiAkc2NvcGUucGFyYWxsYXhIb3Jpem9udGFsT2Zmc2V0KTtcbiAgICAgICAgICBlbGVtLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgaG96VmFsICsgJywgJyArIHRvcFZhbCArICdweCknKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2V0UG9zaXRpb24oKTtcblxuICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoXCJzY3JvbGxcIiwgc2V0UG9zaXRpb24pO1xuICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoXCJ0b3VjaG1vdmVcIiwgc2V0UG9zaXRpb24pO1xuICAgIH0gIC8vIGxpbmsgZnVuY3Rpb25cbiAgfTtcbn1dKS5kaXJlY3RpdmUoJ3BhcmFsbGF4QmFja2dyb3VuZCcsIFsnJHdpbmRvdycsIGZ1bmN0aW9uKCR3aW5kb3cpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0EnLFxuICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgdGVtcGxhdGU6ICc8ZGl2IG5nLXRyYW5zY2x1ZGU+PC9kaXY+JyxcbiAgICBzY29wZToge1xuICAgICAgcGFyYWxsYXhSYXRpbzogJ0AnLFxuICAgICAgcGFyYWxsYXhWZXJ0aWNhbE9mZnNldDogJ0AnLFxuICAgICAgcGFyYWxsYXhTdGFydFBvaW50OiAnQCdcbiAgICB9LFxuICAgIGxpbms6IGZ1bmN0aW9uKCRzY29wZSwgZWxlbSwgYXR0cnMpIHtcbiAgICAgIHZhciBzZXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9ICgkc2NvcGUucGFyYWxsYXhWZXJ0aWNhbE9mZnNldC8xMDApICogZWxlbVswXS5vZmZzZXRIZWlnaHQ7IFxuICAgICAgICB2YXIgY2FsY1ZhbFkgPSAoZWxlbS5wcm9wKCdvZmZzZXRUb3AnKSAtICR3aW5kb3cucGFnZVlPZmZzZXQpICogKCRzY29wZS5wYXJhbGxheFJhdGlvID8gJHNjb3BlLnBhcmFsbGF4UmF0aW8gOiAxLjEpIC0gKG9mZnNldCB8fCAwKTtcbiAgICAgICAgLy8gaG9yaXpvbnRhbCBwb3NpdGlvbmluZ1xuICAgICAgICBpZiAoY2FsY1ZhbFkgPj0gJHNjb3BlLnBhcmFsbGF4U3RhcnRQb2ludCl7XG4gICAgICAgICAgY2FsY1ZhbFkgPSAkc2NvcGUucGFyYWxsYXhTdGFydFBvaW50O1xuICAgICAgICB9XG4gICAgICAgIGVsZW0uY3NzKCdiYWNrZ3JvdW5kLXBvc2l0aW9uJywgXCI1MCUgXCIgKyBjYWxjVmFsWSArIFwicHhcIik7XG4gICAgICB9O1xuXG4gICAgICAvLyBzZXQgb3VyIGluaXRpYWwgcG9zaXRpb24gLSBmaXhlcyB3ZWJraXQgYmFja2dyb3VuZCByZW5kZXIgYnVnXG4gICAgICBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZCgnbG9hZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgc2V0UG9zaXRpb24oKTtcbiAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xuICAgICAgfSk7XG5cbiAgICAgIGFuZ3VsYXIuZWxlbWVudCgkd2luZG93KS5iaW5kKFwic2Nyb2xsXCIsIHNldFBvc2l0aW9uKTtcbiAgICAgIGFuZ3VsYXIuZWxlbWVudCgkd2luZG93KS5iaW5kKFwidG91Y2htb3ZlXCIsIHNldFBvc2l0aW9uKTtcbiAgICB9ICAvLyBsaW5rIGZ1bmN0aW9uXG4gIH07XG59XSk7XG4iXX0=
