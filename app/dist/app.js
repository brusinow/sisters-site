var authWait=["Auth",function(e){return e.$waitForSignIn()}],authRequire=["Auth",function(e){return e.$requireSignIn()}];angular.module("SistersApp",["SistersCtrls","SistersDirectives","ui.router","ui.bootstrap","firebase","angularMoment","ngCart","ngStorage","angularPayments","ngAnimate","picardy.fontawesome","textAngular","ui.router.metatags","angular-parallax","tableSort","ngFileSaver","flow"]).run(["$rootScope","$state","$location","$window","MetaTags",function(e,t,o,a,n){e.MetaTags=n,moment.tz.add("America/Los_Angeles|PST PDT|80 70|0101|1Lzm0 1zb0 Op0"),e.$on("$stateChangeError",function(e,o,a,n,r,i){"AUTH_REQUIRED"===i&&t.go("login")}),e.$on("$stateChangeSuccess",function(e){document.body.scrollTop=document.documentElement.scrollTop=0,a.ga&&a.ga("send","pageview",{page:o.path()})})}]).config(["tableSortConfigProvider",function(e){var t="<div class='row'>";t+="<div class='col-sm-4 col-md-3 col-sm-offset-8 col-md-offset-9'>",t+="<div class='form-group has-feedback'>",t+="<input type='search' class='form-control' placeholder='filter {{ITEM_NAME_PLURAL}}' ng-model='FILTER_STRING'/>",t+="<span class='glyphicon glyphicon-search form-control-feedback' aria-hidden='true'></span>",t+="</div>",t+="</div>",t+="</div>",e.filterTemplate=t;var o="<div class='text-center'>";o+="<ul uib-pagination style='vertical-align:middle;' ng-show='ITEMS_PER_PAGE < TOTAL_COUNT' ng-model='CURRENT_PAGE_NUMBER' ",o+="total-items='FILTERED_COUNT' items-per-page='ITEMS_PER_PAGE' force-ellipses='false'></ul>",o+="<div class='form-group' style='display:inline-block;'>",o+="</div>",o+="<br/><small class='text-muted'>Showing {{CURRENT_PAGE_RANGE}} {{FILTERED_COUNT === 0 ? '' : 'of'}} ",o+="<span ng-if='FILTERED_COUNT === TOTAL_COUNT'>{{TOTAL_COUNT | number}} {{TOTAL_COUNT === 1 ? ITEM_NAME_SINGULAR : ITEM_NAME_PLURAL}}</span>",o+="<span ng-if='FILTERED_COUNT !== TOTAL_COUNT'>{{FILTERED_COUNT | number}} {{FILTERED_COUNT === 1 ? ITEM_NAME_SINGULAR : ITEM_NAME_PLURAL}} (filtered from {{TOTAL_COUNT | number}})</span>",o+="</small>&nbsp;",o+="</div>",e.paginationTemplate=o}]).config(["flowFactoryProvider",function(e){e.defaults={target:"",permanentErrors:[500,501],maxChunkRetries:1,chunkRetryInterval:5e3,simultaneousUploads:1}}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","UIRouterMetatagsProvider","$provide",function(e,t,o,a,n){a.setDefaultTitle("SISTERS").setDefaultDescription('Seattle duo. "Drink Champagne", the debut album, available now!').setStaticProperties({"og:site_name":"SISTERS"}).setOGURL(!0),t.otherwise("/"),e.state("home",{url:"/",metaTags:{title:"SISTERS",description:'Seattle duo. "Drink Champagne", the debut album, available now!'},templateUrl:"/views/home.html",controller:"HomeCtrl"}).state("admin",{templateUrl:"/views/admin/adminTemplate.html",controller:"AdminMainCtrl",resolve:{currentAuth:authRequire}}).state("admin.main",{url:"/admin",templateUrl:"/views/admin/adminMain.html",controller:"AdminMainCtrl",resolve:{currentAuth:authRequire,Orders:["GetAllOrders",function(e){return e().$loaded()}]},activetab:0}).state("admin.orders",{url:"/admin/orders",templateUrl:"/views/admin/adminOrders.html",controller:"AdminOrdersCtrl",resolve:{currentAuth:authRequire,Orders:["GetAllOrders",function(e){return e().$loaded()}]},activetab:1}).state("admin.tickets",{url:"/admin/tickets",templateUrl:"/views/admin/adminTickets.html",controller:"AdminTicketsCtrl",resolve:{currentAuth:authRequire,Tickets:["GetAllTickets",function(e){return e().$loaded()}]},activetab:2}).state("admin.products",{url:"/admin/products",templateUrl:"/views/admin/adminProducts.html",controller:"AdminProductsCtrl",resolve:{currentAuth:authRequire,allProducts:["ProductsService",function(e){return e.allProducts()}]},activetab:3,activeSub:0}).state("admin.products-quickInventory",{url:"/admin/products/inventory",templateUrl:"/views/admin/adminProductsInventory.html",controller:"AdminProductsInventoryCtrl",resolve:{currentAuth:authRequire,allProducts:["ProductsService",function(e){return e.allActiveProducts()}]},activetab:3,activeSub:1}).state("admin.products-add",{url:"/admin/products/add",templateUrl:"/views/admin/adminProductsAdd.html",controller:"AdminProductsAddCtrl",resolve:{currentAuth:authRequire},activetab:3}).state("admin.products-edit",{url:"/admin/products/edit/:id",templateUrl:"/views/admin/adminProductsAdd.html",controller:"AdminProductsEditCtrl",resolve:{currentAuth:authRequire,product:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id).$loaded()}],images:["product","FirebaseImgDownloader",function(e,t){return t(e)}]},activetab:3,activeSub:1}).state("admin.ticketEach",{url:"/admin/tickets/:id",templateUrl:"/views/admin/adminTicketEach.html",controller:"AdminTicketsEachCtrl",resolve:{currentAuth:authRequire,ThisTicket:["GetSingleTicket","$stateParams",function(e,t){return e(t.id).$loaded()}],WillCall:["ThisWillCall","$stateParams",function(e,t){return e(t.id).$loaded()}]}}).state("about",{url:"/about",templateUrl:"/views/about.html",controller:"AboutCtrl"}).state("press",{url:"/press",templateUrl:"/views/press.html",controller:"PressCtrl"}).state("contact",{url:"/contact",templateUrl:"/views/contact.html",controller:"ContactCtrl"}).state("download",{url:"/download/:id",resolve:{downloadKey:["DownloadKeyService","$stateParams",function(e,t){return e(t.id).$loaded()}]},onEnter:["$state","$stateParams","$timeout","downloadKey",function(e,t,o,a){a===!0?o(function(){console.log("success!")},0):o(function(){console.log("failed!")},0)}]}).state("blog",{templateUrl:"/views/blog/blog.html",controller:"BlogMasterCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}]}}).state("blog-new",{url:"/blog/new",templateUrl:"/views/blog/newBlogPost.html",controller:"NewBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog-edit",{url:"/blog/edit/:slug",templateUrl:"/views/blog/editBlogPost.html",controller:"EditBlogCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}],thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],images:["thisPost","FirebaseImgDownloader",function(e,t){return t(e)}]}}).state("blog-tags-edit",{url:"/blog/editTags/",templateUrl:"/views/blog/editTags.html",controller:"EditBlogTagsCtrl",resolve:{currentAuth:authRequire,AllTags:["AllTagsService",function(e){return e().$loaded()}]}}).state("blog.main",{url:"/blog",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.page",{url:"/blog/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogCtrl",resolve:{currentAuth:authWait}}).state("blog.archive",{url:"/blog/archives/:year/:month",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.archivePage",{url:"/blog/archives/:year/:month/:page",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogArchiveCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],Archive:["$stateParams","ArchiveShowService",function(e,t){return t(e.year,e.month).$loaded()}]}}).state("blog.tags",{url:"/blog/tags/:tagName",metaTags:{title:"SISTERS - Blog",description:"Updates, news, and commentary from Seattle band SISTERS."},templateUrl:"/views/blog/blog-content.html",controller:"BlogTagsCtrl",resolve:{currentAuth:authWait,Blog:["BlogPosts",function(e){return e().$loaded()}],TagsShow:["$stateParams","TagsShowService",function(e,t){return t(e.tagName).$loaded()}]}}).state("blog.show",{url:"/blog/show/:slug",templateUrl:"/views/blog/blog-content-show.html",controller:"BlogShowCtrl",resolve:{currentAuth:authWait,thisPost:["$stateParams","ThisPostService",function(e,t){return t(e.slug).$loaded()}],Blog:["BlogPosts",function(e){return e().$loaded()}]},metaTags:{title:["ThisPost",function(e){console.log("what is Blog? ",e);var t="SISTERS - "+e[0].postTitle;return t}],description:["thisPost",function(e){return e[0].postBody}]}}).state("shows",{url:"/shows",metaTags:{title:"SISTERS - Shows",description:"Upcoming shows for Seattle duo SISTERS."},templateUrl:"/views/shows/shows.html",controller:"ShowsCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return console.log("app resolve entered"),e().$loaded()}]}}).state("shows-new",{url:"/shows/new",templateUrl:"/views/shows/newShow.html",controller:"NewShowCtrl",resolve:{currentAuth:authWait,getShows:["GetShows",function(e){return e().$loaded()}]}}).state("showTickets",{url:"/shows/:showId",templateUrl:"/views/shows/singleShow.html",controller:"SingleShowCtrl",resolve:{currentAuth:authWait,GetShow:["GetSingleShow","$stateParams",function(e,t){return e(t.showId).$loaded()}],GetTicket:["ticketFactory","$stateParams",function(e,t){return e.getTicket(t.showId)}]}}).state("store",{url:"/store",metaTags:{title:"SISTERS - Store",description:"The official store for Seattle duo SISTERS."},templateUrl:"/views/store/store.html",controller:"StoreCtrl",resolve:{currentAuth:authWait,allProducts:["ProductsService",function(e){return e.allActiveProducts()}]}}).state("storeCart",{url:"/store/cart",templateUrl:"/views/store/cart.html",controller:"StoreCartCtrl",resolve:{currentAuth:authWait},params:{message:null,messageType:null}}).state("storeShow",{url:"/store/:id",templateUrl:"/views/store/storeShow.html",controller:"StoreShowCtrl",resolve:{currentAuth:authWait,oneProduct:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id).$loaded()}]}}).state("editProduct",{url:"/store/edit/:id",templateUrl:"/views/store/editProduct.html",controller:"StoreProductEditCtrl",resolve:{currentAuth:authRequire,oneProduct:["ProductsService","$stateParams",function(e,t){return e.oneProduct(t.id)}]}}).state("checkout",{templateUrl:"/views/store/checkoutTemplate.html",controller:"CheckoutTemplateCtrl",resolve:{currentAuth:authWait}}).state("checkout.address",{url:"/store/checkout/address",templateUrl:"/views/store/checkoutAddress.html",controller:"StoreAddressCtrl",resolve:{currentAuth:authWait,currentOrder:["$http",function(e){return e({method:"GET",url:"/storeAPI/order"})}],shipment:["$http",function(e){return e({method:"GET",url:"/storeAPI/shipment"})}]}}).state("checkout.payment",{url:"/store/checkout/payment",templateUrl:"/views/store/checkoutPayment.html",controller:"StorePaymentCtrl",resolve:{currentAuth:authWait,currentOrder:["$http",function(e){return e({method:"GET",url:"/storeAPI/order"})}],shipment:["$http",function(e){return e({method:"GET",url:"/storeAPI/shipment"})}]}}).state("checkout.confirm",{url:"/store/checkout/confirm",templateUrl:"/views/store/checkoutConfirm.html",controller:"StoreConfirmCtrl",resolve:{currentAuth:authWait,currentOrder:["$http",function(e){return e({method:"GET",url:"/storeAPI/order"})}],currentToken:["$http",function(e){return e({method:"GET",url:"/storeAPI/token"})}],shipment:["$http",function(e){return e({method:"GET",url:"/storeAPI/shipment"})}]}}).state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}),o.html5Mode(!0)}]).filter("cut",function(){return function(e,t,o,a,n){var r=angular.element("<div/>").html(e);r.text().length}}).filter("trustAsResourceUrl",["$sce",function(e){return function(t){return e.trustAsResourceUrl("https://www.youtube.com/embed/"+t)}}]).filter("MomentFilter",["moment",function(e){return function(t){return e(t).tz("America/Los_Angeles").format("dddd, MMMM Do, YYYY")}}]).filter("tooOld",function(){return function(e){var t=moment().tz("America/Los_Angeles").unix(),o=[];return angular.forEach(e,function(e){var a=e.unixDate/1e3;t-a<=86400&&o.push(e)}),o}}).filter("DeliveryEstDate",["moment",function(e){return function(t){return e(t).tz("America/Los_Angeles").format("dddd, MMMM Do")}}]).filter("TimeDate",["moment",function(e){return function(t){return e(t).tz("America/Los_Angeles").format("MMMM Do YYYY, h:mm:ss a")}}]).filter("slashDate",["moment",function(e){return function(t){return e(1e3*t).tz("America/Los_Angeles").format("MM/DD/YYYY")}}]).filter("timeAgo",["moment",function(){return function(e){var t=new Date(e);return moment(t).tz("America/Los_Angeles").fromNow()}}]).filter("reverse",function(){return function(e){return e.slice().reverse()}}).filter("centsToDollars",function(){return function(e){return e/100}}).filter("twoDigitTime",function(){return function(e){return e>9?e.toString():"0"+e.toString()}}).filter("htmlBlogPreview",function(){return function(e,t){var o,a=300,n="",r=e;if(e.length<a)return e;for(;n.length<a;)o=r.indexOf("</p>")+4,n+=r.slice(0,o),r=r.slice(o);if(e.length===n.length)return n;n=n.slice(0,n.length-4);var i=" <a href='/blog/show/"+t+"'>  Read More...</a></p>";return n+=i}}),angular.module("SistersCtrls",["SistersServices"]).controller("MainCtrl",["$scope","$state","$timeout","$http",function(e,t,o,a){e.$on("loadMainContainer",function(t,o){"loaded"===o?e.mainLoaded=!0:e.mainLoaded=!1})}]).controller("HomeCtrl",["$scope","$state","$timeout","$http","LoadedService",function(e,t,o,a,n){var r=document.getElementById("main");r.style.backgroundColor="rgba(247, 237, 245, 0)",r.style.width="",r.style.padding="",r.style.paddingBottom="400px",e.loaded=n.get();var i=window.innerWidth;!e.loaded&&i>806?o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,n.set(!0)},500):o(function(){e.$emit("loadMainContainer","loaded"),e.fadeHome=!0,n.set(!0)},500),e.mailchimpSubmit=function(t,o,n){if(t.$valid){e.isPopup=!1;var r="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+o+"&c=JSON_CALLBACK";a.jsonp(r).then(function(t){console.log(t),e.user={},n&&(e.mailConfirm=!0)},function(e){console.log(e)})}}}]).controller("AboutCtrl",["$scope",function(e){var t=document.getElementById("main");t.style.backgroundColor="rgba(255, 255, 255, 1)",t.style.padding="0 0 176px 0",t.style.width="100%",e.$emit("loadMainContainer","loaded")}]).controller("ContactCtrl",["$scope",function(e){var t=document.getElementById("main");t.style.backgroundColor="rgba(255, 255, 255, 0)",t.style.padding="",t.style.width="",e.$emit("loadMainContainer","loaded")}]).controller("PressCtrl",["$scope",function(e){var t=document.getElementById("main");t.style.backgroundColor="rgba(255, 255, 255, 0)",t.style.padding="0 0 176px 0",t.style.width="90%",e.$emit("loadMainContainer","loaded")}]),angular.module("SistersCtrls").controller("LoginCtrl",["$scope","$state","Auth",function(e,t,o){var a=document.getElementById("main");a.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.submitted=!1,e.logged=!1,o.$onAuthStateChanged(function(o){o?(e.logged=!0,t.go("admin.main")):console.log("Not logged in.")}),e.user={},e.login=function(){e.submitted=!0,e.firebaseUser=null,o.$signInWithEmailAndPassword(e.user.email,e.user.password).then(function(t){e.firebaseUser=t}).catch(function(e){console.error("Authentication failed:",e)})}}]),angular.module("SistersCtrls").controller("NewBlogCtrl",["$scope","$state","$http","Auth","BlogPosts","AllTags","HelperService","UploadImages","moment","BlogFactory",function(e,t,o,a,n,r,i,s,l,u){var c=document.getElementById("main");c.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.BlogPosts=n(),e.tags=r,e.checkedTags={},e.data={},e.resetMedia=function(){e.data.youtube="",e.data.flow=null},e.submit=function(){document.getElementById("new-blog-textarea").innerText;if("image"===e.data.mediaSelect){var t=new Date;s(e.data.flow.files,"blog",t).then(function(t){console.log("what is result image? ",t[0]),u.addPost(e.post,e.BlogPosts,t[0],null,e.checkedTags)})}else"youtube"===e.data.mediaSelect&&(e.data.youtube=i.parseYouTube(e.data.youtube),u.addPost(e.post,e.BlogPosts,null,e.data.youtube,e.checkedTags))},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.resizeImg=function(e){i.imgResize(e)},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})}}]).controller("EditBlogCtrl",["$scope","$state","$timeout","$stateParams","SendDataService","AllTags","thisPost","HelperService","UploadImages","$uibModal","$log","BlogPosts","BlogFactory",function(e,t,o,a,n,r,i,s,l,u,c,d,g){var m=document.getElementById("main");if(m.style.backgroundColor="rgba(0,0,0,0)",e.$emit("loadMainContainer","loaded"),e.data={},e.postArray=i,e.post=i[0],e.originalTags=angular.copy(e.post.tags),e.tags=r,console.log("what is data? ",e.data),e.post.youtube){console.log(e.post.youtube);var h=e.post.youtube;e.data.youtube="https://www.youtube.com/watch?v="+h}e.confirmBlogDelete=function(e){var t=u.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/deleteBlogConfirmModal.html",controller:"DeleteBlogConfirmCtrl",size:"sm",resolve:{Post:e}});t.result.then(function(){console.log("submitted modal")},function(){c.info("Modal dismissed at: "+new Date)})},e.addTag=function(){e.tags.$add({name:e.data.newTag}).then(function(t){e.postId=t.key,console.log("what is post id? ",t.key),e.data.newTag=""})},e.deleteTag=function(t){e.tags.$remove(t).then(function(e){e.key===t.$id})},e.resetMedia=function(){e.data.youtube="",e.data.flow=null},e.submit=function(){"image"===e.data.mediaSelect&&e.data.flow?(console.log("what is flow? ",e.data.flow),l(e.data.flow.files,"blog",null).then(function(t){console.log("what is result image? ",t[0]),g.updatePost(e.post,i,t[0],null,e.originalTags)})):"image"!==e.data.mediaSelect||e.data.flow?"youtube"===e.data.mediaSelect&&(e.data.youtube=s.parseYouTube(e.data.youtube),g.updatePost(e.post,i,null,e.data.youtube,e.originalTags)):g.updatePost(e.post,i,e.post.img,null,e.originalTags)}}]).controller("EditBlogTagsCtrl",["$scope","$uibModalInstance","tag","Blog",function(e,t,o,a){e.prompted=!1,e.tag=angular.copy(o),console.log(o),e.ok=function(o){var a={name:e.tag.name};firebase.database().ref("/tags/"+e.tag.$id).update(a),t.close()},e.cancel=function(){t.dismiss("cancel")},e.deletePrompt=function(){e.prompted=!0},e.delete=function(o){if("no"===o)e.prompted=!1;else if("yes"===o){firebase.database().ref("/tags/"+e.tag.$id).remove();for(var n=0;n<a.length;n++){var r=a[n].tags;r[e.tag.$id]===!0&&(r[e.tag.$id]=null,firebase.database().ref("/blog_posts/"+a[n].$id+"/tags").update(r))}t.close()}}}]).controller("DeleteBlogConfirmCtrl",["$scope","$uibModalInstance","Post","moment","$location",function(e,t,o,a,n){console.log(o),e.yes=function(){var e=a(o.timestamp).format("YYYY"),r=a(o.timestamp).format("MMMM");console.log(r+" of "+e),firebase.database().ref("blog_posts/"+o.$id).remove(),firebase.database().ref("archives/"+e+"/"+r+"/"+o.$id).remove(),t.close(),n.url("/blog")},e.no=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("BlogMasterCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService","TwitterFactory",function(e,t,o,a,n,r,i,s,l,u,c,d){e.loadedInsta=!1,e.loadedTwitter=!1,e.$emit("loadMainContainer","loaded"),u.then(function(t){e.photos=t.data,e.loadedInsta=!0,e.loadedTwitter&&(e.loaded=!0)}),d.then(function(t){e.tweetDate=t.allTweetData.created_at,e.twitterUser=t.allTweetData.user.name,e.twitterHandle=t.allTweetData.user.screen_name,e.tweetId=t.allTweetData.id_str,e.tweet=t.tweetBody,e.favorites=t.favorites,e.retweets=t.retweets,e.loadedTwitter=!0,e.loadedInsta&&(e.loaded=!0)}),e.enable=!0,e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("BlogCtrl",["$scope","$state","$http","$timeout","$location","$stateParams","Auth","Blog","HelperService","InstagramFactory","AllTagsService",function(e,t,o,a,n,r,i,s,l,u,c){var d=document.getElementById("main");d.style.backgroundColor="rgba(255,255,255,0)",d.style.width="",d.style.padding="0",e.$emit("loadMainContainer","loaded"),e.allTags=c(),e.location=n.$$path,u.then(function(t){e.photos=t.data,e.loaded=!0}),e.enable=!0,e.parseTitle=l.titleToURL,e.allPosts=s,e.page=r.page||0,e.pageUp="/blog/"+(parseInt(e.page)+1),e.pageDown="/blog/"+l.pageDown(e.page),e.length=s.length,e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=s.slice(e.first,e.last),e.editPost=function(e){n.url("/blog/edit/"+e)}}]).controller("BlogArchiveCtrl",["$scope","$state","$timeout","$stateParams","$location","Blog","Archive","Auth","HelperService","AllTagsService",function(e,t,o,a,n,r,i,s,l,u){e.$emit("loadMainContainer","notLoaded"),e.location=n.$$path,e.allTags=u(),e.enable=!0,e.fullBlog=r;for(var c=[],d=0;d<i.length;d++)for(var g=i[d].$id,m=0;m<r.length;m++){var h=r[m].$id;g===h&&c.push(r[m])}e.allPosts=c,e.params=a,e.parseTitle=l.titleToURL,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=a.page||0,e.pageUp="/blog/archives/"+a.year+"/"+a.month+"/"+(parseInt(e.page)+1),e.pageDown="/blog/archives/"+a.year+"/"+a.month+"/"+l.pageDown(e.page),e.length=e.allPosts.length,e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=e.allPosts.slice(e.first,e.last),o(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=l.titleToURL(e.postTitle);n.url("/blog/edit/"+t)}}]).controller("BlogTagsCtrl",["$scope","$state","$stateParams","$location","$timeout","Blog","TagsShow","Auth","HelperService","AllTagsService",function(e,t,o,a,n,r,i,s,l,u){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=u(),e.enable=!0,e.tagName=i[0].name;for(var c=i[0].$id,d=[],g=0;g<r.length;g++){var m=r[g].tags;m[c]&&d.push(r[g])}console.log("what are selectPosts? ",d),e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.page=o.page||0,e.pageUp="/blog/tags/"+o.tagName+"/"+(parseInt(e.page)+1),e.pageDown="/blog/tags/"+o.tagName+"/"+l.pageDown(e.page),e.length=d.length,console.log("length: ",e.length),e.first=l.findFirst(e.length,e.page),e.last=e.length-4*e.page,e.posts=d.slice(e.first,e.last),n(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0}),e.editPost=function(e){var t=l.titleToURL(e.postTitle);a.url("/blog/edit/"+t)}}]).controller("BlogShowCtrl",["$scope","$state","$stateParams","$location","$timeout","thisPost","Blog","AllTagsService",function(e,t,o,a,n,r,i,s){e.$emit("loadMainContainer","notLoaded"),e.location=a.$$path,e.allTags=s(),e.enable=!1,e.recentPosts=i,e.posts=r,e.allPosts=r,e.editPost=function(e){a.url("/blog/edit/"+e)},n(function(){e.$emit("loadMainContainer","loaded"),e.loaded=!0})}]).controller("BlogSidebarCtrl",["$scope","$state","$stateParams","$timeout","ArchiveService","AllTagsService","BlogPosts","HelperService","$uibModal","$log",function(e,t,o,a,n,r,i,s,l,u){e.recentPosts=i(),e.parseTitle=s.titleToURL,e.years=n.years(),e.years.$loaded().then(function(){console.log(e.years),e.monthObj={};for(var t=0;t<e.years.length;t++)e.monthObj[e.years[t].$id]=n.months(e.years[t].$id);a(function(){console.log(e.monthObj)},7e3)}),e.allTags=r(),e.newBlogPost=function(){t.go("blog-new")},e.editTag=function(e){var t=l.open({animation:!0,backdrop:!0,templateUrl:"/views/blog/editTagsModal.html",controller:"EditBlogTagsCtrl",size:"lg",resolve:{Blog:function(e){return e().$loaded()},tag:e}});t.result.then(function(){},function(){u.info("Modal dismissed at: "+new Date)})}}]),angular.module("SistersCtrls").controller("editModalCtrl",["$scope","$uibModalInstance","editShow","index","$firebaseArray",function(e,t,o,a,n){e.shows=o,e.show=o[a],console.log("index is ",a),e.dateObj=new Date(1e3*e.show.unix),console.log(e.dateObj),e.ok=function(){e.show.date=moment(e.dateObj).format("ddd, MMMM Do"),e.show.unix=e.dateObj.getTime()/1e3,e.shows.$save(e.show).then(function(e){console.log("success")},function(e){console.log("Error:",e)}),t.close()},e.cancel=function(){t.dismiss("cancel")},e.delete=function(){e.shows.$remove(e.show).then(function(e){console.log("successful delete: ",e)},function(e){console.log("error: ",e)}),t.close()}}]).controller("newModalCtrl",["$scope","$uibModalInstance","$firebaseArray",function(e,t,o){e.show={};var a=firebase.database().ref("shows");e.showsArray=o(a),e.ok=function(){var o=moment(e.show.showDate).format("ddd, MMMM Do"),a=e.show.showDate.getTime()/1e3;console.log(o);var n={date:o,unix:a,location:e.show.showLocation,venue:e.show.venue,venueLink:e.show.venueLink||"",ticketLink:e.show.ticketLink||""};console.log(n),e.showsArray.$add(n),t.close()},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("NavCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$sessionStorage","$localStorage","$location","$window",function(e,t,o,a,n,r,i,s,l,u,c){e.fade=!0,e.auth=r,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.$storage=l;var d,g;e.$on("setTimer",function(t,o){e.setTimer=o,e.setTimer===!0&&(e.stop(),e.minutes=Math.floor(d%3600/60),e.seconds=Math.floor(d%60),e.countdown())}),e.countdown=function(){g=t(function(){d>1?(d--,e.minutes=Math.floor(d%3600/60),e.seconds=Math.floor(d%60),e.countdown()):(console.log("done!"),e.setTimer=!1,i.go("storeCart",{message:"Your reserved tickets have expired. If you still plan to complete this purchase, add your tickets again and complete your order within 10 minutes.",messageType:"info"}),t.cancel(g),d=60)},1e3)},e.stop=function(){t.cancel(g),d=60},e.user={},e.mailConfirm=!1;var m=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e.height=h;var f=document.getElementById("mobile-background-div");m<900?f.style.height=h+"px":f.style.height="0px",!e.loaded&&m>806?e.mobileWidth=!1:e.mobileWidth=!0,t(function(){if(null===e.firebaseUser&&"/login"!==u.$$path&&!e.$storage.popup){if(!document.getElementById("overlayMail")){var t=document.createElement("div");t.id="overlayMail",t.className="overlay-start";var o=document.body,a=document.querySelector("#pop-up");t.style.height=o.scrollHeight+"px",a.appendChild(t);var n=document.querySelector("#overlayMail");n.classList.add("active")}e.isPopup=!0}},6e3),e.closePopup=function(){e.isPopup=!1,e.$storage.popup=!0},e.toStore=function(){e.isPopup=!1,t(function(){c.open("https://iheartsisters.bandcamp.com/")},300)},e.toggle=!0;window.innerWidth}]).controller("FooterCtrl",["$scope","$timeout","$log","$uibModal","$http","Auth","$state","$localStorage",function(e,t,o,a,n,r,i,s){e.auth=r,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.logout=function(){r.$signOut()},e.login=function(){i.go("login")};window.innerWidth}]).controller("MailModalCtrl",["$scope","$timeout","$uibModal","$uibModalInstance","$http","Auth","$state","$sessionStorage",function(e,t,o,a,n,r,i,s){e.close=function(){a.dismiss("cancel")}}]),angular.module("SistersCtrls").controller("ShowsCtrl",["$scope","$state","currentAuth","$log","$firebaseArray","moment","Auth","getShows","$uibModal",function(e,t,o,a,n,r,i,s,l){var u=document.getElementById("main");u.style.backgroundColor="rgba(252, 244, 247, 0)",u.style.width="",u.style.padding="",e.$emit("loadMainContainer","loaded"),e.shows=s,e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.open=function(t,o){var n=l.open({animation:!0,backdrop:!0,templateUrl:"/views/shows/"+t+"ShowModal.html",controller:t+"ModalCtrl",size:"lg",resolve:{editShow:function(){return e.shows},index:o}});n.result.then(function(t){e.selected=t},function(){a.info("Modal dismissed at: "+new Date)})}}]).controller("SingleShowCtrl",["$scope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","GetShow","GetTicket",function(e,t,o,a,n,r,i,s,l){var u=document.getElementById("main");u.style.backgroundColor="rgba(252, 244, 247, 0)",u.style.width="",u.style.padding="",e.itemCount=1,e.lowCount=!1,e.$on("lowCount",function(t,o){e.lowCount=o.bool,(o.bool=!0)&&(e.itemCount=o.originalVal)}),e.show=s,e.ticket=l.data,e.showUnix=1e3*e.ticket.unix,e.images=e.ticket.images;var c=e.images[0];e.ticket.tixAvailableCount?e.maxTickets=e.ticket.tixAvailableCount:e.maxTickets=8;var d=document.querySelector(".main-product-photo img");d.src=e.images[0],e.$emit("loadMainContainer","loaded"),e.isActiveImg=function(){return this.img===c},e.changeActive=function(){c=this.img,d.src=this.img}}]),angular.module("SistersCtrls").controller("StoreCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","allProducts","Auth",function(e,t,o,a,n,r,i,s){var l=document.getElementById("main");l.style.backgroundColor="rgba(255,255,255,0)",l.style.width="",l.style.padding="",e.loaded=!1,e.products=i,e.auth=s,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.showProduct=function(e){t.go("storeShow",{id:e})},e.addProduct=function(){t.go("addProduct")},e.firstPrice=function(e){for(var t in e)break;return e[t].price},a(function(){e.loaded=!0,e.$emit("loadMainContainer","loaded")})}]).controller("StoreCartCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","$stateParams",function(e,t,o,a,n,r,i){var s=document.getElementById("main");s.style.backgroundColor="rgba(255,255,255,0)",e.errorMessage=i,console.log("message object: ",e.errorMessage),a(function(){e.$emit("loadMainContainer","loaded")},1),e.toCheckout=function(){n.url("/store/checkout/address")},e.continue=function(){n.url("/store")}}]).controller("StoreShowCtrl",["$scope","$rootScope","$stateParams","$state","$http","$timeout","$location","$sessionStorage","oneProduct",function(e,t,o,a,n,r,i,s,l){var u=document.getElementById("main");if(u.style.backgroundColor="rgba(252, 244, 247, 0)",u.style.width="",u.style.padding="",e.$emit("loadMainContainer","loaded"),l.description){e.product=l,e.images=l.images;var c=e.images[0];e.skus=e.product.variant.skus;var d=function(e){for(var t in e)break;return console.log("what is first? ",t),e[t]};e.data={shippable:e.product.shippable,ship_details:e.product.shipping||null},e.data.selected=d(e.skus),e.areVariants=function(){var t=0;for(prop in e.skus)t++;return!(t<2)};var g=document.querySelector(".main-product-photo img");g.src=e.images[0]}else i.url("/store");e.isActiveImg=function(){return this.img===c},e.whatSelected=function(){console.log(e.data.selected),t.$broadcast("changeQ",e.data.selected)},e.changeActive=function(){c=this.img,g.src=this.img}}]).controller("CheckoutTemplateCtrl",["$scope","$state","$http","$timeout","$location","$localStorage",function(e,t,o,a,n,r){e.$emit("loadMainContainer","loaded"),e.$storage=r,e.$on("pathChange",function(t,o){e.path=o}),e.$on("pathCountChange",function(t,o){e.pathCount=o})}]).controller("StoreAddressCtrl",["$scope","$state","$window","$timeout","$http","$location","$localStorage","ngCart","$rootScope","moment","currentOrder","shipment",function(e,t,o,a,n,r,i,s,l,u,c,d){var g=document.getElementById("main");g.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=i,e.cartItems=s.getItems(),e.$on("setShippable",function(t,o){e.shipBool=o}),e.loaded=[],e.data={shipping:{country:{}}},c.data.billing?e.data.billing=c.data.billing.address:(e.data.billing={country:{}},e.$storage.pathCount=1,s.setShipping(0)),e.$emit("pathChange",r.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.mailingListAdd=!0,e.shippingSameBool=!1,n.get("/js/JSON/countries.json").success(function(t){e.countries=t,e.data.shipping.country=e.countries[0],e.data.billing.country=e.countries[0],e.loaded.push("go")}),n.get("/js/JSON/states.json").success(function(t){
e.states=t,e.loaded.push("go")}),n.get("/js/JSON/provinces.json").success(function(t){e.provinces=t,e.loaded.push("go")}),e.isShippingSame=function(){e.data.shippingSame?(e.data.shipping=e.data.billing,e.shippingSameBool=!0,e.getTaxRate(e.data.billing.country,e.data.billing.stateProvince,e.data.billing.postalCode)):(e.data.billing={},e.shippingSameBool=!1)},e.countryChange=function(t){"US"===t.code?e.shippingType=e.shipRates.domestic:e.shippingType=e.shipRates.international},e.submitForm=function(t){if(t.$valid){e.loaded=[],m();var o=e.data.shipping,a=e.data.billing;e.$storage.billingAddress=e.data.billing,e.$storage.shippingAddress=e.data.shipping,e.$storage.shipBool=e.shipBool;var i={url:"/store/newOrder",method:"POST",params:{order:{status:"pending",currency:"usd",items:e.cartItems,totalItemsPrice:s.getSubTotal(),billing:{name:a.name,email:a.email,phone:a.phone,address:{line1:a.address1,line2:a.address2||null,city:a.city,state:a.stateProvince.short||null,country:a.country.code,postal_code:a.postalCode}},metadata:{taxRate:s.getTaxRate()}}}};e.shipBool===!0?(i.params.shippable=!0,i.params.order.shipping={name:o.name,address:{line1:o.address1,line2:o.address2||null,city:o.city,state:o.stateProvince.short||null,country:o.country.code,postal_code:o.postalCode}}):i.params.shippable=!1,n(i).then(function(t){e.$storage.pathCount=2,r.url("/store/checkout/payment")},function(e){})}else console.log("form invalid!")};var m=function(){e.mailingListAdd===!0?e.$storage.mailingList=!0:e.$storage.mailingList=!1};e.getTaxRate=function(e,t,o){if("US"===e.code&&"WA"===t.short&&o){var a={url:"/taxRate",method:"GET",params:{country:"usa",postal:o}};n(a).then(function(e){s.setTaxRate(e.data.totalRate)},function(e){console.log("error ",e)})}else"US"===e.code&&"WA"!==t.short?s.setTaxRate(0):"US"!==e.code&&s.setTaxRate(0)}}]).controller("StorePaymentCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder","shipment",function(e,t,o,a,n,r,i,s,l,u){var c=document.getElementById("main");c.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=r,e.$emit("pathChange",n.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.data={},e.$on("setShippable",function(t,o){e.shipBool=o});var d=l.data;if(d)for(var g=d.items,m=0;m<g.length;m++)"ticket"===g[m]._data.product_type&&(e.showWillCall=!0);else t.go("storeCart",{message:"Your current session has expired. Please start your checkout again.",messageType:"info"});e.orderByPrice=function(e){return parseInt(e.amount)};var h=u.data;if(h.rates_list){e.shipOptions=h.rates_list;for(var f,p,m=0;m<e.shipOptions.length;m++)(!p||parseInt(e.shipOptions[m].amount)<p)&&(p=parseInt(e.shipOptions[m].amount),f=m),void 0!==e.$storage.savedSelectedShip&&e.shipOptions[m].object_id===e.$storage.savedSelectedShip.object_id&&(e.data.selectedShip=e.shipOptions[m]);e.data.selectedShip||(e.$storage.savedSelectedShip=h.rates_list[f],e.data.selectedShip=e.$storage.savedSelectedShip)}e.$watch("data.selectedShip",function(t,o,a){e.data.selectedShip&&(e.$storage.savedSelectedShip=e.data.selectedShip,i.setShipping(100*e.data.selectedShip.amount))},!1),a(function(){e.loaded=!0}),e.submitForm=function(t){t.$valid?(e.loaded=!1,Stripe.card.createToken({number:e.number,cvc:e.cvc,exp:e.expiry,name:e.$storage.billingAddress.name,address_line1:e.$storage.billingAddress.address1,address_line2:e.$storage.billingAddress.address2||null,address_city:e.$storage.billingAddress.city,address_state:e.$storage.billingAddress.stateProvince.short||null,address_zip:e.$storage.billingAddress.postalCode,address_country:e.$storage.billingAddress.country.code},function(t,r){200!=t&&console.log("we have an error: ",t),r&&a(function(){o.post("/store/saveToken",{token:r,willCallName:e.data.willCallName||null}).then(function(t){e.$storage.pathCount=3,e.$emit("pathCountChange",e.$storage.pathCount),n.url("/store/checkout/confirm")},function(e){console.log("error: ",e)})},1)})):console.log("form invalid!!")}}]).controller("StoreConfirmCtrl",["$scope","$state","$http","$timeout","$location","$localStorage","ngCart","$rootScope","currentOrder","shipment","currentToken",function(e,t,o,a,n,r,i,s,l,u,c){function d(e){for(var t={},o=0;o<e.length;o++)"ticket"!==e[o].product_type||t[e[o].parent]?"ticket"===e[o].product_type&&t[e[o].parent]&&(parseInt(t[e[o].parent])+=e[o].quantity):t[e[o].parent]=e[o].quantity;return t}e.$on("setShippable",function(t,o){e.shipBool=o});var g=document.getElementById("main");g.style.backgroundColor="rgba(247, 237, 245, 0)",e.$emit("loadMainContainer","loaded"),e.$storage=r,e.orderComplete=!1;var m=l.data;if(m)for(var h=m.items,f=0;f<h.length;f++)"ticket"===h[f]._data.product_type&&(e.showWillCall=!0);else t.go("storeCart",{message:"Your current session has expired. Please start your checkout again.",messageType:"info"});e.$emit("pathChange",n.$$path),e.$emit("pathCountChange",e.$storage.pathCount),e.ngCart=i;e.currentShipping=e.$storage.savedSelectedShip,e.token=c.data,e.shipping=m.shipping,e.billing=m.billing,e.order=m,a(function(){e.loaded=!0}),e.createCharge=function(){e.loaded=!1;var t={url:"/store/orderComplete",method:"POST",params:{totalAmount:i.totalCost(),tax:{amount:i.getTax(),description:"tax: ("+i.getTaxRate()+"%)"},token:e.token.id,name:e.token.card.name,cart:angular.toJson(i.getItems()),shipChoice:e.currentShipping,ticketObj:d(i.getItems())}};o(t).then(function(t){e.isError=!1,e.$storage.mailingList===!0&&p(e.$storage.billingAddress.email),e.orderComplete=!0,e.$storage.pathCount=0,e.$emit("pathCountChange",e.$storage.pathCount),i.setTaxRate(null),i.setShipping(null),i.empty(),r.$reset(),localStorage.clear()},function(t){e.errorMessage=t.data.message,t.data.lowStock&&(e.lowStock=t.data.lowStock),e.isError=!0,e.loaded=!0,console.log("error ",t)})};var p=function(e){var t="//sisterstheband.us14.list-manage.com/subscribe/post-json?u=bc38720b0bcc7a32641bb572c&amp;id=242f4adc89&EMAIL="+e+"&c=JSON_CALLBACK";o.jsonp(t).then(function(e){},function(e){console.log(e)})}}]),angular.module("SistersCtrls").controller("AdminMainCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth",function(e,t,o,a,n,r,i){var s=document.getElementById("main");s.style.backgroundColor="rgba(255,255,255,0)",s.style.width="",s.style.padding="0",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminSidebarCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","$window","Auth",function(e,t,o,a,n,r,i,s){e.$emit("loadMainContainer","loaded"),e.activePill=t.current.activetab,e.subPill=t.current.activesub||null,e.goToPage=function(e){n.url(e)},e.model={name:"Tabs"}}]).controller("AdminOrdersCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","Orders","ReturnCompleteOrders","ReturnPendingOrders",function(e,t,o,a,n,r,i,s,l,u){e.completeOrders=l(s),e.pendingOrders=u(s),e.orders=e.completeOrders;var c=document.getElementById("main");c.style.backgroundColor="rgba(255,255,255,0)",c.style.width="",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminProductsCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","allProducts",function(e,t,o,a,n,r,i,s){var l=document.getElementById("main");l.style.backgroundColor="rgba(255,255,255,0)",l.style.width="",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.products=s,e.addProduct=function(){t.go("admin.products-add")},e.editProduct=function(e){t.go("admin.products-edit",{id:e})},e.deleteProduct=function(e){s.$remove(s[e]).then(function(e){console.log("deleted")})}}]).controller("AdminProductsInventoryCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","allProducts","UpdateAllCounts",function(e,t,o,a,n,r,i,s,l){var u=document.getElementById("main");u.style.backgroundColor="rgba(255,255,255,0)",u.style.width="",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.products=s,e.getFirstSkuCount=function(e){var t=e[Object.keys(e)[0]];return t.count},e.setFirstSkuCount=function(e,t){var o=e[Object.keys(e)[0]];o.count=t},e.updateInventory=function(e){l(s).then(function(){console.log("what are products now? ",s)})}}]).controller("AdminProductsAddCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","ProdSkuFactory","UploadImages","HelperService","Variant",function(e,t,o,a,n,r,i,s,l,u,c){var d=document.getElementById("main");d.style.backgroundColor="rgba(255,255,255,0)",d.style.width="",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.obj={price:0},e.newSkus=[],e.product={variant:{bool:!1,skus:[]},shippable:!1,active:!0,product_type:"merch"},e.addVariant=function(){var t=new c;e.newSkus.push(t)},e.deleteVariant=function(t){e.newSkus.splice(t,1)},e.variantUp=function(t){if(t>0){var o=e.newSkus[t];e.newSkus[t]=e.newSkus[t-1],e.newSkus[t-1]=o}},e.variantDown=function(t){if(t<e.newSkus.length-1){var o=e.newSkus[t];e.newSkus[t]=e.newSkus[t+1],e.newSkus[t+1]=o}},e.makeMainImage=function(t){var o=e.obj.flow.files.splice(t,1);e.obj.flow.files.unshift(o[0])},e.submit=function(){s.get("prod").then(function(o){var a=u.idGenerator(o,"prod");l(e.obj.flow.files,"store",a).then(function(n){e.product.images=n,e.product.id=a;var r={};s.get("sku").then(function(n){var i=firebase.database().ref("products/"+a);if(e.newSkus.length>0){for(var l=e.newSkus,d=0;d<l.length;d++){var g=u.idGenerator(n,"sku");l[d].changeSku(g),l[d].changeProductId(a),l[d].changeIndex(d),r[g]=l[d],d!==l.length-1&&n++}e.product.variant.skus=angular.copy(r),i.set(e.product).then(function(){s.set(o,"prod"),s.set(n,"sku"),t.go("admin.products")},function(e){console.log("ERROR! ",e)})}else s.get("sku").then(function(n){var l=u.idGenerator(n,"sku"),d=new c(a,l,null,e.obj.price,null,e.obj.count);r[l]=d,e.product.variant.skus=angular.copy(r),i.set(e.product).then(function(){s.set(o,"prod"),s.set(n,"sku"),t.go("admin.products")},function(e){console.log("ERROR! ",e)})})})})})}}]).controller("AdminProductsEditCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","ProdSkuFactory","UploadImages","HelperService","product","images","Variant",function(e,t,o,a,n,r,i,s,l,u,c,d,g){console.log("images: ",d);var m=document.getElementById("main");if(m.style.backgroundColor="rgba(255,255,255,0)",m.style.width="",e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.product=c,e.obj={},e.price="",c.variant.bool===!1){var h=Object.keys(c.variant.skus);e.obj.price=c.variant.skus[h].price,e.obj.count=c.variant.skus[h].count}else e.obj.price=0;e.newSkus=[],e.addVariant=function(){var t=new g(c.id);e.newSkus.push(t),console.log(e.newSkus)},e.deleteVariant=function(t){e.newSkus.splice(t,1)},e.variantUp=function(t){if(t>0){var o=e.newSkus[t];e.newSkus[t]=e.newSkus[t-1],e.newSkus[t-1]=o}},e.variantDown=function(t){if(t<e.newSkus.length-1){var o=e.newSkus[t];e.newSkus[t]=e.newSkus[t+1],e.newSkus[t+1]=o}};for(prop in c.variant.skus){var f=c.variant.skus,p=new g(c.id,prop,f[prop].variantName,f[prop].price,f[prop].index,f[prop].count);e.newSkus[f[prop].index]=p}e.makeMainImage=function(t){var o=e.obj.flow.files.splice(t,1);e.obj.flow.files.unshift(o[0]),console.log("after make main image: ",e.obj.flow.files)},e.submit=function(){e.product.product_type="merch",l(e.obj.flow.files,"store",c.id).then(function(o){console.log("what are links? ",o),e.product.images=o;var a={};s.get("sku").then(function(o){var n=o;if(e.product.variant.bool===!0){if(0===e.newSkus.length)return void alert('Either select "No Variants" or add some.');for(var r=0;r<e.newSkus.length;r++)if(null===e.newSkus[r].id){var i=u.idGenerator(n,"sku");e.newSkus[r].id=i,e.newSkus[r].changeIndex(r),a[i]=e.newSkus[r],r!==e.newSkus.length-1&&n++}else e.newSkus[r].changeIndex(r),a[e.newSkus[r].id]=e.newSkus[r];s.set(n,"sku"),c.variant.skus=a,c.$save().then(function(e){e.key===p.$id,t.go("admin.products")},function(e){console.log("Error:",e)})}else{if(0===e.price)return void alert("please enter a price for this item.");s.get("sku").then(function(o){var n=u.idGenerator(o,"sku"),r=new g(c.id,n,null,e.obj.price,null,e.obj.count);a[n]=r,c.variant.skus=a,c.$save().then(function(e){e.key===p.$id,t.go("admin.products")},function(e){console.log("Error:",e)})})}})})},a(function(){if(d.length>0){console.log("images exist");for(var t=0;t<d.length;t++){var o=d[t];console.log("blob: ",d[t]),console.log("flow: ",e.obj),e.obj.flow.addFile(o)}}},100)}]).controller("AdminTicketsCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","Tickets",function(e,t,o,a,n,r,i,s){var l=document.getElementById("main");l.style.backgroundColor="rgba(255,255,255,0)",l.style.width="",l.style.padding="0",e.tickets=s,e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t})}]).controller("AdminTicketsEachCtrl",["$scope","$state","$http","$timeout","$location","$sessionStorage","Auth","ThisTicket","WillCall","WillCallToBlob","FileSaver","moment",function(e,t,o,a,n,r,i,s,l,u,c,d){var g=document.getElementById("main");g.style.backgroundColor="rgba(255,255,255,0)",g.style.width="",g.style.padding="0",e.ticket=s,e.ticketsSold=e.ticket.ticketCapacity-e.ticket.totalTickets,e.chartColors=["#adadad","#f891af"],e.labels=["Remaining Tickets","Tickets Sold"],e.data=[e.ticket.totalTickets,e.ticketsSold],e.$emit("loadMainContainer","loaded"),e.auth=i,e.auth.$onAuthStateChanged(function(t){e.firebaseUser=t}),e.downloadList=function(){var t=d(1e3*e.ticket.unix).format("MM/DD/YYYY"),o=e.ticket.title+" ("+t+")",a=u(l,o);c.saveAs(a,d(1e3*e.ticket.unix).format("MM-DD-YYYY")+".txt")}}]),angular.module("SistersDirectives",[]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,t,o){t.bind("change",function(t){var o=new FileReader;o.onload=function(t){e.$apply(function(){e.fileread=t.target.result})},o.readAsDataURL(t.target.files[0])})}}}]).directive("centsToDollars",[function(){return{require:"ngModel",link:function(e,t,o,a){a.$formatters.push(function(e){return"$"+(e/100).toFixed(2)}),a.$parsers.push(function(e){e=e.toString();var t,o=e.replace(/[^\d\.\$]/g,""),n=e.replace(/[^\d\.]/g,"");if(n.indexOf(".")>-1){var r=n.split(".");t=r[0]+r[1].slice(0,2),console.log(t)}else t=(100*n).toString(),console.log(t);var i=Number(t);return a.$setViewValue(o),a.$render(),i})}}}]).directive("countryName",["$http",function(e){return{template:"<span>{{name}}</span>",scope:{countryCode:"="},link:function(t){e.get("/js/JSON/countries.json").then(function(e){for(var o=e.data,a=0;a<o.length;a++)if(o[a].code===t.countryCode){t.name=o[a].name;break}},function(e){t.name="unknown"})}}}]),angular.module("SistersServices",["ngResource"]).factory("LoadedService",function(){function e(e){o=e}function t(){return o}var o=!1;return{set:e,get:t}}).factory("Auth",["$firebaseAuth",function(e){return e()}]).factory("SendDataService",function(){function e(e){o=e}function t(){return o}var o={};return{set:e,get:t}}).factory("FirebaseImgDownloader",["$q",function(e){return function(t){console.log("product in imgdownloader: ",t);var o=t.images,a=o.map(function(t,o){var a=e.defer(),n=t.downloadURL,r=new XMLHttpRequest;return r.responseType="blob",r.onload=function(e){var o=r.response;console.log("Blob!!!!",o),o.name=t.name,a.resolve(o)},r.open("GET",n),r.send(),a.promise});return e.all(a)}}]).factory("UpdateAllCounts",["$q",function(e){return function(t){for(var o=e.defer(),a=[],n=0;n<t.length;n++){if(t[n].variant.bool)angular.forEach(t[n].variant.skus,function(e,t){e.count;e.add&&e.add>0&&(e.count=parseInt(e.count)+e.add,delete e.add),e.remove&&e.remove>0&&(e.count=parseInt(e.count)-e.remove,delete e.remove),a.push("test")});else{var r=t[n].variant.skus[Object.keys(t[n].variant.skus)[0]];console.log("first sku? ",r);var i=r.count;t[n].add&&t[n].add>0&&(i=parseInt(i)+t[n].add,r.count=i,delete t[n].add),t[n].remove&&t[n].remove>0&&(i=parseInt(i)-t[n].remove,r.count=i,delete t[n].remove),a.push("test")}t.$save(n).then(function(e){console.log("saved")})}return e.all(a).then(function(){o.resolve()}),o.promise}}]).factory("HelperService",["moment","$q",function(e,t){return{idGenerator:function(e,t){for(var o=e.toString();o.length<4;)o="0"+o;return o=t+o},parseYouTube:function(e){var t=e.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);return null!=t?t[1]:void console.log("The youtube url is not valid.")},base64MimeType:function(e){var t=null;if("string"!=typeof e)return t;var o=e.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);return o&&o.length&&(t=o[1]),console.log("image type is ",t),t},getBase64Image:function(e){var t=e.replace(/^data:image\/(png|jpeg);base64,/,"");return t},b64toBlob:function(e,t){t=t||"";for(var o=512,a=atob(e),n=[],r=0;r<a.length;r+=o){for(var i=a.slice(r,r+o),s=new Array(i.length),l=0;l<i.length;l++)s[l]=i.charCodeAt(l);var u=new Uint8Array(s);n.push(u)}var c=new Blob(n,{type:t});return c},pageDown:function(e){return e<2?"":e-1},findFirst:function(e,t){var o=e-4*(1+t);return o>=0?o:0},getToday:function(){var t=e().unix();return t},titleToURL:function(e){return e.split(" ").join("-")},slugify:function(t,o){var t=t.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,""),a=e(o).tz("America/Los_Angeles").format("MM-DD-YY"),n=a+"_"+t;return n}}}]).factory("ProdSkuFactory",["$q","HelperService",function(e,t){return{get:function(t){var o,a,n=e.defer();return"sku"===t?(o=firebase.database().ref("saved_values/lastSku"),a=3):"prod"===t&&(o=firebase.database().ref("saved_values/lastProduct"),a=4),o.once("value").then(function(e){var t=e.val(),o=parseInt(t.slice(a));n.resolve(o)}),n.promise},set:function(e,o){var a;"sku"===o?(a=firebase.database().ref("saved_values/lastSku"),slicePoint=3):"prod"===o&&(a=firebase.database().ref("saved_values/lastProduct"),slicePoint=4);var n=t.idGenerator(e+1,o);a.set(n)}}}]).factory("ImgCompressFactory",["$q",function(e){return function(e,t,o,a,n){var r="image/jpeg";"undefined"!=typeof n&&"png"==n&&(r="image/png");var i=document.createElement("canvas");i.width=o,i.height=a;var s=i.getContext("2d");s.drawImage(e,0,0,o,a);var l=i.toDataURL(r,t/100);return l}}]).factory("ImageResizeFactory",["HelperService","ImgCompressFactory","$q",function(e,t,o){return{imgResizeSquare:function(a){var n=o.defer(),r=new Image;return r.src=window.URL.createObjectURL(a),r.onload=function(){var o=r.width/r.height;if(console.log("WHAT IS RATIO??? ",o),r.height<1e3||r.width<1e3)n.reject("Not all images are at least 1000px x 1000px. Please double check and try again.");else if(1!==o)n.reject("Please upload only square images.");else{var a=t(r,50,1e3,1e3),i=e.getBase64Image(a),s=e.b64toBlob(i,"image/jpeg");n.resolve(s)}},console.log("right before return for resize: ",n.promise),n.promise},imgResizeBlog:function(a){console.log("what is img? ",a);var n,r,i=o.defer(),s=new Image;return s.src=window.URL.createObjectURL(a),s.onload=function(){console.log(this.width+" "+this.height);var o=s.width/s.height;if(console.log("WHAT IS RATIO??? ",o),o>=1.776&&s.height>=500){console.log("loadIMG: ",s);var a=(s.height-500)/s.height;n=500,r=s.width-s.width*a}else if(o<1.776&&s.width>=889){var a=(s.width-889)/s.width;r=889,n=s.height-s.height*a}else i.reject("This image does not have a high enough resolution (Minimum size: 889px x 500px)");var l=t(s,50,r,n),u=e.getBase64Image(l),c=e.b64toBlob(u,"image/jpeg");i.resolve(c)},i.promise}}}]).factory("CheckImgExists",["$q","$firebaseStorage",function(e,t){return function(t,o){function a(e){r.resolve(e)}function n(e){r.resolve(!1)}var r=e.defer(),i=firebase.storage().ref();return i.child(t+o).getDownloadURL().then(a,n),r.promise}}]).factory("UploadImages",["ImageResizeFactory","CheckImgExists","$q","$firebaseStorage",function(e,t,o,a){return function(n,r,i){var s,l;"store"===r?s="store-images/"+i+"/":"blog"===r&&(s="blog-images/");var u=n.map(function(n,i){var u=o.defer(),c="blog"===r?e.imgResizeBlog:e.imgResizeSquare;return console.log("OBJ: ",n),t(s,n.name).then(function(e){e!==!1?(console.log("found image!!!!!"),"blog"===r?u.resolve(e):"store"===r&&u.resolve({downloadURL:e,name:n.name})):c(n.file).then(function(e){console.log("resizing new image!!!");var t=Math.random().toString(36).substring(7),o=s+t+".jpg",n=firebase.storage().ref(o),i=a(n);l=i.$put(e),l.$complete(function(e){var t=e.downloadURL;"blog"===r?u.resolve(t):"store"===r&&u.resolve({downloadURL:t,name:e.metadata.name})})},function(e){alert(e)})}),u.promise});return o.all(u)}}]),angular.module("SistersServices").factory("ProductsService",["$firebaseArray","$firebaseObject",function(e,t){return{allProducts:function(){var t=firebase.database().ref("products");return e(t)},allActiveProducts:function(){var t=firebase.database().ref("products"),o=t.orderByChild("active").equalTo(!0);return e(o)},oneProduct:function(e){console.log("in the service? ",e);var o=firebase.database().ref("products/"+e);return t(o)}}}]).service("ThisOrderService",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/storeAPI/order",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),console.log("what is deferred.promise? ",o.promise),o.promise}]).factory("ticketFactory",["$http",function(e){var t="/ticketAPI/ticket",o={};return o.getTicket=function(o){var a={method:"GET",url:t,params:{id:o}};return e(a)},o}]),angular.module("SistersServices").service("InstagramFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/instagram",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).service("TwitterFactory",["$http","$q",function(e,t){var o=t.defer();return e({method:"GET",url:"/twitter",cache:!0}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}]).factory("BlogPosts",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("blog_posts").orderByChild("timestamp");return e(t)}}]).factory("ThisPostService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("blog_posts"),a=o.orderByChild("slug").equalTo(t);return e(a)}}]).factory("AllTagsService",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tags");return e(t)}}]).factory("TagsShowService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tags"),a=o.orderByChild("name").equalTo(t);return e(a)}}]).factory("ArchiveService",["$firebaseArray",function(e){return{years:function(){var t=firebase.database().ref("archives");return e(t)},months:function(t){var o=firebase.database().ref("archives/"+t);return e(o)}}}]).factory("ArchiveShowService",["$firebaseArray",function(e){return function(t,o){var a=firebase.database().ref("archives/"+t+"/"+o);return e(a)}}]).factory("BlogFactory",["HelperService","moment","$state","$timeout",function(e,t,o,a){return{addPost:function(a,n,r,i,s){var l=(new Date).getTime(),u=e.slugify(a.title,l),c=t(l).format("YYYY"),d=t(l).format("MMMM"),g={};for(var m in s)g[m]=s[m];var h={postTitle:a.title,slug:u,postBody:a.postBody,youtube:i?i:null,img:r?r:null,tags:g,timestamp:l};n.$add(h).then(function(e){var t=e.key,a={key:t};firebase.database().ref("archives/"+c+"/"+d+"/"+t).set(a),o.go("blog.main")})},updatePost:function(n,r,i,s,l){var u=e.slugify(n.postTitle,n.timestamp);console.log(u);var c=t(n.timestamp).format("YYYY"),d=t(n.timestamp).format("MMMM"),g={};for(var m in n.tags)g[m]=n.tags[m];n.slug=u,n.tags=g,n.youtube=s?s:null,n.img=i?i:null;var h={postTitle:n.postTitle,slug:u,postBody:n.postBody,youtube:n.youtube,img:n.img,tags:g,timestamp:n.timestamp};r.$save(n).then(function(e){var t=e.key;firebase.database().ref("archives/"+c+"/"+d+"/"+t).remove(),firebase.database().ref("archives/"+c+"/"+d+"/"+t).set(h);for(m in l)if(l[m]===!0){var n="tags/"+m+"/posts/"+t;firebase.database().ref(n).remove().then(function(e){}).catch(function(e){console.log("Remove failed: "+e.message)})}a(function(){for(m in h.tags)h.tags[m]===!0&&firebase.database().ref("tags/"+m+"/posts/"+t).set(h)},100),o.go("blog.main")})}}}]),angular.module("SistersServices").factory("GetShows",["$firebaseArray","moment",function(e,t){var o=t().unix(),a=o-86400;return function(){var t=firebase.database().ref("shows").orderByChild("unix").startAt(a);return e(t)}}]).factory("GetSingleShow",["$firebaseObject",function(e){return function(t){var o=firebase.database().ref("shows/"+t);return e(o)}}]).factory("GetAllTickets",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("tickets");return e(t)}}]).factory("WillCallListService",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tickets/"+t+"/willCallList");return e(o)}}]),angular.module("SistersServices").factory("GetAllOrders",["$firebaseArray",function(e){return function(){var t=firebase.database().ref("orders");return e(t)}}]).factory("GetAllTickets",["$firebaseArray","moment",function(e,t){t().unix();return function(){var t=firebase.database().ref("tickets").orderByChild("unix");return e(t)}}]).factory("GetSingleTicket",["$firebaseObject",function(e){return function(t){var o=firebase.database().ref("tickets/"+t);return e(o)}}]).factory("ReturnCompleteOrders",function(){return function(e){for(var t=[],o=0;o<e.length;o++)"complete"===e[o].status&&t.push(e[o]);return t}}).factory("ReturnPendingOrders",function(){return function(e){for(var t=[],o=0;o<e.length;o++)"pending"===e[o].status&&t.push(e[o]);return t}}).factory("ThisWillCall",["$firebaseArray",function(e){return function(t){var o=firebase.database().ref("tickets/"+t+"/willCallList");return e(o)}}]).factory("WillCallFormat",function(){return function(e,t){var o="";o+=t+"\n \n";for(var a=0;a<e.length;a++)o+=e[a].name,o+=e[a].quantity>1?" +"+(e[a].quantity-1)+"\n":"\n";return o}}).factory("WillCallToBlob",["Blob","WillCallFormat",function(e,t){return function(o,a){var n=t(o,a);console.log(n);var r=new e([n],{type:"text/plain;charset=utf-8"});return r}}]).factory("Variant",function(){var e=function(e,t,o,a,n,r){this.id=t||null,this.parentId=e,this.variantName=o||"",this.price=a||"",this.index=n||0,this.count=r||0};return e.prototype.changeIndex=function(e){this.index=e},e.prototype.changeProductId=function(e){this.parentId=e},e.prototype.changeSku=function(e){this.id=e},e.prototype.changeCount=function(e){this.count=e},e});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
